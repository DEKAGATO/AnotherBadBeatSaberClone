id: cs.temp.dll
language: CSharp
name:
  Default: cs.temp.dll
qualifiedName:
  Default: cs.temp.dll
type: Assembly
modifiers: {}
items:
- id: Audio
  commentId: N:Audio
  language: CSharp
  name:
    CSharp: Audio
    VB: Audio
  nameWithType:
    CSharp: Audio
    VB: Audio
  qualifiedName:
    CSharp: Audio
    VB: Audio
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Audio.AudioController
    commentId: T:Audio.AudioController
    language: CSharp
    name:
      CSharp: AudioController
      VB: AudioController
    nameWithType:
      CSharp: AudioController
      VB: AudioController
    qualifiedName:
      CSharp: Audio.AudioController
      VB: Audio.AudioController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Audio
    source:
      id: AudioController
      path: ''
      startLine: 29
    syntax:
      content:
        CSharp: 'public class AudioController : MonoBehaviour'
        VB: >-
          Public Class AudioController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Audio.AudioController.testAudioSource
      commentId: F:Audio.AudioController.testAudioSource
      language: CSharp
      name:
        CSharp: testAudioSource
        VB: testAudioSource
      nameWithType:
        CSharp: AudioController.testAudioSource
        VB: AudioController.testAudioSource
      qualifiedName:
        CSharp: Audio.AudioController.testAudioSource
        VB: Audio.AudioController.testAudioSource
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio
      source:
        id: testAudioSource
        path: ''
        startLine: 31
      syntax:
        content:
          CSharp: public AudioSource testAudioSource
          VB: Public testAudioSource As AudioSource
        return:
          type: AudioSource
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Audio.AudioController.processAudioData
      commentId: M:Audio.AudioController.processAudioData
      language: CSharp
      name:
        CSharp: processAudioData()
        VB: processAudioData()
      nameWithType:
        CSharp: AudioController.processAudioData()
        VB: AudioController.processAudioData()
      qualifiedName:
        CSharp: Audio.AudioController.processAudioData()
        VB: Audio.AudioController.processAudioData()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Audio
      source:
        id: processAudioData
        path: ''
        startLine: 130
      syntax:
        content:
          CSharp: public void processAudioData()
          VB: Public Sub processAudioData
      overload: Audio.AudioController.processAudioData*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Audio.BeatMappingConfigs
  commentId: N:Audio.BeatMappingConfigs
  language: CSharp
  name:
    CSharp: Audio.BeatMappingConfigs
    VB: Audio.BeatMappingConfigs
  nameWithType:
    CSharp: Audio.BeatMappingConfigs
    VB: Audio.BeatMappingConfigs
  qualifiedName:
    CSharp: Audio.BeatMappingConfigs
    VB: Audio.BeatMappingConfigs
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Audio.BeatMappingConfigs.MappingContainer
    commentId: T:Audio.BeatMappingConfigs.MappingContainer
    language: CSharp
    name:
      CSharp: MappingContainer
      VB: MappingContainer
    nameWithType:
      CSharp: MappingContainer
      VB: MappingContainer
    qualifiedName:
      CSharp: Audio.BeatMappingConfigs.MappingContainer
      VB: Audio.BeatMappingConfigs.MappingContainer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Audio.BeatMappingConfigs
    source:
      id: MappingContainer
      path: ''
      startLine: 193
    example: []
    syntax:
      content:
        CSharp: public class MappingContainer
        VB: Public Class MappingContainer
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Audio.BeatMappingConfigs.MappingContainer.EventData
      commentId: P:Audio.BeatMappingConfigs.MappingContainer.EventData
      language: CSharp
      name:
        CSharp: EventData
        VB: EventData
      nameWithType:
        CSharp: MappingContainer.EventData
        VB: MappingContainer.EventData
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.MappingContainer.EventData
        VB: Audio.BeatMappingConfigs.MappingContainer.EventData
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: EventData
        path: ''
        startLine: 195
      syntax:
        content:
          CSharp: public List<EventConfig> EventData { get; set; }
          VB: Public Property EventData As List(Of EventConfig)
        parameters: []
        return:
          type: System.Collections.Generic.List{Audio.BeatMappingConfigs.EventConfig}
      overload: Audio.BeatMappingConfigs.MappingContainer.EventData*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.MappingContainer.NoteData
      commentId: P:Audio.BeatMappingConfigs.MappingContainer.NoteData
      language: CSharp
      name:
        CSharp: NoteData
        VB: NoteData
      nameWithType:
        CSharp: MappingContainer.NoteData
        VB: MappingContainer.NoteData
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.MappingContainer.NoteData
        VB: Audio.BeatMappingConfigs.MappingContainer.NoteData
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: NoteData
        path: ''
        startLine: 196
      syntax:
        content:
          CSharp: public List<NoteConfig> NoteData { get; set; }
          VB: Public Property NoteData As List(Of NoteConfig)
        parameters: []
        return:
          type: System.Collections.Generic.List{Audio.BeatMappingConfigs.NoteConfig}
      overload: Audio.BeatMappingConfigs.MappingContainer.NoteData*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.MappingContainer.ObstacleData
      commentId: P:Audio.BeatMappingConfigs.MappingContainer.ObstacleData
      language: CSharp
      name:
        CSharp: ObstacleData
        VB: ObstacleData
      nameWithType:
        CSharp: MappingContainer.ObstacleData
        VB: MappingContainer.ObstacleData
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.MappingContainer.ObstacleData
        VB: Audio.BeatMappingConfigs.MappingContainer.ObstacleData
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: ObstacleData
        path: ''
        startLine: 197
      syntax:
        content:
          CSharp: public List<ObstacleConfig> ObstacleData { get; set; }
          VB: Public Property ObstacleData As List(Of ObstacleConfig)
        parameters: []
        return:
          type: System.Collections.Generic.List{Audio.BeatMappingConfigs.ObstacleConfig}
      overload: Audio.BeatMappingConfigs.MappingContainer.ObstacleData*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.MappingContainer.BookmarkData
      commentId: P:Audio.BeatMappingConfigs.MappingContainer.BookmarkData
      language: CSharp
      name:
        CSharp: BookmarkData
        VB: BookmarkData
      nameWithType:
        CSharp: MappingContainer.BookmarkData
        VB: MappingContainer.BookmarkData
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.MappingContainer.BookmarkData
        VB: Audio.BeatMappingConfigs.MappingContainer.BookmarkData
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: BookmarkData
        path: ''
        startLine: 198
      syntax:
        content:
          CSharp: public List<BookmarkConfig> BookmarkData { get; set; }
          VB: Public Property BookmarkData As List(Of BookmarkConfig)
        parameters: []
        return:
          type: System.Collections.Generic.List{Audio.BeatMappingConfigs.BookmarkConfig}
      overload: Audio.BeatMappingConfigs.MappingContainer.BookmarkData*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.MappingContainer.MappingInfo
      commentId: P:Audio.BeatMappingConfigs.MappingContainer.MappingInfo
      language: CSharp
      name:
        CSharp: MappingInfo
        VB: MappingInfo
      nameWithType:
        CSharp: MappingContainer.MappingInfo
        VB: MappingContainer.MappingInfo
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.MappingContainer.MappingInfo
        VB: Audio.BeatMappingConfigs.MappingContainer.MappingInfo
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: MappingInfo
        path: ''
        startLine: 199
      syntax:
        content:
          CSharp: public MappingInfo MappingInfo { get; set; }
          VB: Public Property MappingInfo As MappingInfo
        parameters: []
        return:
          type: Audio.BeatMappingConfigs.MappingInfo
      overload: Audio.BeatMappingConfigs.MappingContainer.MappingInfo*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.MappingContainer.sortMappings
      commentId: M:Audio.BeatMappingConfigs.MappingContainer.sortMappings
      language: CSharp
      name:
        CSharp: sortMappings()
        VB: sortMappings()
      nameWithType:
        CSharp: MappingContainer.sortMappings()
        VB: MappingContainer.sortMappings()
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.MappingContainer.sortMappings()
        VB: Audio.BeatMappingConfigs.MappingContainer.sortMappings()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: sortMappings
        path: ''
        startLine: 201
      syntax:
        content:
          CSharp: public void sortMappings()
          VB: Public Sub sortMappings
      overload: Audio.BeatMappingConfigs.MappingContainer.sortMappings*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Audio.BeatMappingConfigs.EventConfig
    commentId: T:Audio.BeatMappingConfigs.EventConfig
    language: CSharp
    name:
      CSharp: EventConfig
      VB: EventConfig
    nameWithType:
      CSharp: EventConfig
      VB: EventConfig
    qualifiedName:
      CSharp: Audio.BeatMappingConfigs.EventConfig
      VB: Audio.BeatMappingConfigs.EventConfig
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Audio.BeatMappingConfigs
    source:
      id: EventConfig
      path: ''
      startLine: 214
    example: []
    syntax:
      content:
        CSharp: public class EventConfig
        VB: Public Class EventConfig
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Audio.BeatMappingConfigs.EventConfig.Time
      commentId: P:Audio.BeatMappingConfigs.EventConfig.Time
      language: CSharp
      name:
        CSharp: Time
        VB: Time
      nameWithType:
        CSharp: EventConfig.Time
        VB: EventConfig.Time
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.EventConfig.Time
        VB: Audio.BeatMappingConfigs.EventConfig.Time
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: Time
        path: ''
        startLine: 222
      syntax:
        content:
          CSharp: public float Time { get; set; }
          VB: Public Property Time As Single
        parameters: []
        return:
          type: System.Single
      overload: Audio.BeatMappingConfigs.EventConfig.Time*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.EventConfig.Type
      commentId: P:Audio.BeatMappingConfigs.EventConfig.Type
      language: CSharp
      name:
        CSharp: Type
        VB: Type
      nameWithType:
        CSharp: EventConfig.Type
        VB: EventConfig.Type
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.EventConfig.Type
        VB: Audio.BeatMappingConfigs.EventConfig.Type
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: Type
        path: ''
        startLine: 223
      syntax:
        content:
          CSharp: public int Type { get; set; }
          VB: Public Property Type As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Audio.BeatMappingConfigs.EventConfig.Type*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.EventConfig.Value
      commentId: P:Audio.BeatMappingConfigs.EventConfig.Value
      language: CSharp
      name:
        CSharp: Value
        VB: Value
      nameWithType:
        CSharp: EventConfig.Value
        VB: EventConfig.Value
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.EventConfig.Value
        VB: Audio.BeatMappingConfigs.EventConfig.Value
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: Value
        path: ''
        startLine: 224
      syntax:
        content:
          CSharp: public int Value { get; set; }
          VB: Public Property Value As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Audio.BeatMappingConfigs.EventConfig.Value*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: Audio.BeatMappingConfigs.EventConfig.TYPES
    commentId: T:Audio.BeatMappingConfigs.EventConfig.TYPES
    language: CSharp
    name:
      CSharp: EventConfig.TYPES
      VB: EventConfig.TYPES
    nameWithType:
      CSharp: EventConfig.TYPES
      VB: EventConfig.TYPES
    qualifiedName:
      CSharp: Audio.BeatMappingConfigs.EventConfig.TYPES
      VB: Audio.BeatMappingConfigs.EventConfig.TYPES
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Audio.BeatMappingConfigs
    source:
      id: TYPES
      path: ''
      startLine: 216
    syntax:
      content:
        CSharp: public enum TYPES
        VB: Public Enum TYPES
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Audio.BeatMappingConfigs.EventConfig.TYPES.BLINK_LASERS
      commentId: F:Audio.BeatMappingConfigs.EventConfig.TYPES.BLINK_LASERS
      language: CSharp
      name:
        CSharp: BLINK_LASERS
        VB: BLINK_LASERS
      nameWithType:
        CSharp: EventConfig.TYPES.BLINK_LASERS
        VB: EventConfig.TYPES.BLINK_LASERS
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.EventConfig.TYPES.BLINK_LASERS
        VB: Audio.BeatMappingConfigs.EventConfig.TYPES.BLINK_LASERS
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: BLINK_LASERS
        path: ''
        startLine: 218
      syntax:
        content:
          CSharp: BLINK_LASERS = 0
          VB: BLINK_LASERS = 0
        return:
          type: Audio.BeatMappingConfigs.EventConfig.TYPES
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.EventConfig.TYPES.ROTATE_LIGHTS_1
      commentId: F:Audio.BeatMappingConfigs.EventConfig.TYPES.ROTATE_LIGHTS_1
      language: CSharp
      name:
        CSharp: ROTATE_LIGHTS_1
        VB: ROTATE_LIGHTS_1
      nameWithType:
        CSharp: EventConfig.TYPES.ROTATE_LIGHTS_1
        VB: EventConfig.TYPES.ROTATE_LIGHTS_1
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.EventConfig.TYPES.ROTATE_LIGHTS_1
        VB: Audio.BeatMappingConfigs.EventConfig.TYPES.ROTATE_LIGHTS_1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: ROTATE_LIGHTS_1
        path: ''
        startLine: 218
      syntax:
        content:
          CSharp: ROTATE_LIGHTS_1 = 1
          VB: ROTATE_LIGHTS_1 = 1
        return:
          type: Audio.BeatMappingConfigs.EventConfig.TYPES
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.EventConfig.TYPES.ROTATE_LIGHTS_2
      commentId: F:Audio.BeatMappingConfigs.EventConfig.TYPES.ROTATE_LIGHTS_2
      language: CSharp
      name:
        CSharp: ROTATE_LIGHTS_2
        VB: ROTATE_LIGHTS_2
      nameWithType:
        CSharp: EventConfig.TYPES.ROTATE_LIGHTS_2
        VB: EventConfig.TYPES.ROTATE_LIGHTS_2
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.EventConfig.TYPES.ROTATE_LIGHTS_2
        VB: Audio.BeatMappingConfigs.EventConfig.TYPES.ROTATE_LIGHTS_2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: ROTATE_LIGHTS_2
        path: ''
        startLine: 218
      syntax:
        content:
          CSharp: ROTATE_LIGHTS_2 = 2
          VB: ROTATE_LIGHTS_2 = 2
        return:
          type: Audio.BeatMappingConfigs.EventConfig.TYPES
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.EventConfig.TYPES.ROTATE_LIGHTS_3
      commentId: F:Audio.BeatMappingConfigs.EventConfig.TYPES.ROTATE_LIGHTS_3
      language: CSharp
      name:
        CSharp: ROTATE_LIGHTS_3
        VB: ROTATE_LIGHTS_3
      nameWithType:
        CSharp: EventConfig.TYPES.ROTATE_LIGHTS_3
        VB: EventConfig.TYPES.ROTATE_LIGHTS_3
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.EventConfig.TYPES.ROTATE_LIGHTS_3
        VB: Audio.BeatMappingConfigs.EventConfig.TYPES.ROTATE_LIGHTS_3
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: ROTATE_LIGHTS_3
        path: ''
        startLine: 218
      syntax:
        content:
          CSharp: ROTATE_LIGHTS_3 = 3
          VB: ROTATE_LIGHTS_3 = 3
        return:
          type: Audio.BeatMappingConfigs.EventConfig.TYPES
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.EventConfig.TYPES.BLINK_LASERS_1
      commentId: F:Audio.BeatMappingConfigs.EventConfig.TYPES.BLINK_LASERS_1
      language: CSharp
      name:
        CSharp: BLINK_LASERS_1
        VB: BLINK_LASERS_1
      nameWithType:
        CSharp: EventConfig.TYPES.BLINK_LASERS_1
        VB: EventConfig.TYPES.BLINK_LASERS_1
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.EventConfig.TYPES.BLINK_LASERS_1
        VB: Audio.BeatMappingConfigs.EventConfig.TYPES.BLINK_LASERS_1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: BLINK_LASERS_1
        path: ''
        startLine: 219
      syntax:
        content:
          CSharp: BLINK_LASERS_1 = 4
          VB: BLINK_LASERS_1 = 4
        return:
          type: Audio.BeatMappingConfigs.EventConfig.TYPES
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.EventConfig.TYPES.BLINK_LASERS_2
      commentId: F:Audio.BeatMappingConfigs.EventConfig.TYPES.BLINK_LASERS_2
      language: CSharp
      name:
        CSharp: BLINK_LASERS_2
        VB: BLINK_LASERS_2
      nameWithType:
        CSharp: EventConfig.TYPES.BLINK_LASERS_2
        VB: EventConfig.TYPES.BLINK_LASERS_2
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.EventConfig.TYPES.BLINK_LASERS_2
        VB: Audio.BeatMappingConfigs.EventConfig.TYPES.BLINK_LASERS_2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: BLINK_LASERS_2
        path: ''
        startLine: 219
      syntax:
        content:
          CSharp: BLINK_LASERS_2 = 5
          VB: BLINK_LASERS_2 = 5
        return:
          type: Audio.BeatMappingConfigs.EventConfig.TYPES
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.EventConfig.TYPES.CHANGE_SPINNER_DIRECTION
      commentId: F:Audio.BeatMappingConfigs.EventConfig.TYPES.CHANGE_SPINNER_DIRECTION
      language: CSharp
      name:
        CSharp: CHANGE_SPINNER_DIRECTION
        VB: CHANGE_SPINNER_DIRECTION
      nameWithType:
        CSharp: EventConfig.TYPES.CHANGE_SPINNER_DIRECTION
        VB: EventConfig.TYPES.CHANGE_SPINNER_DIRECTION
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.EventConfig.TYPES.CHANGE_SPINNER_DIRECTION
        VB: Audio.BeatMappingConfigs.EventConfig.TYPES.CHANGE_SPINNER_DIRECTION
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: CHANGE_SPINNER_DIRECTION
        path: ''
        startLine: 219
      syntax:
        content:
          CSharp: CHANGE_SPINNER_DIRECTION = 6
          VB: CHANGE_SPINNER_DIRECTION = 6
        return:
          type: Audio.BeatMappingConfigs.EventConfig.TYPES
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.EventConfig.TYPES.CHANGE_SPINNER_SPEED
      commentId: F:Audio.BeatMappingConfigs.EventConfig.TYPES.CHANGE_SPINNER_SPEED
      language: CSharp
      name:
        CSharp: CHANGE_SPINNER_SPEED
        VB: CHANGE_SPINNER_SPEED
      nameWithType:
        CSharp: EventConfig.TYPES.CHANGE_SPINNER_SPEED
        VB: EventConfig.TYPES.CHANGE_SPINNER_SPEED
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.EventConfig.TYPES.CHANGE_SPINNER_SPEED
        VB: Audio.BeatMappingConfigs.EventConfig.TYPES.CHANGE_SPINNER_SPEED
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: CHANGE_SPINNER_SPEED
        path: ''
        startLine: 219
      syntax:
        content:
          CSharp: CHANGE_SPINNER_SPEED = 7
          VB: CHANGE_SPINNER_SPEED = 7
        return:
          type: Audio.BeatMappingConfigs.EventConfig.TYPES
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Audio.BeatMappingConfigs.NoteConfig
    commentId: T:Audio.BeatMappingConfigs.NoteConfig
    language: CSharp
    name:
      CSharp: NoteConfig
      VB: NoteConfig
    nameWithType:
      CSharp: NoteConfig
      VB: NoteConfig
    qualifiedName:
      CSharp: Audio.BeatMappingConfigs.NoteConfig
      VB: Audio.BeatMappingConfigs.NoteConfig
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Audio.BeatMappingConfigs
    source:
      id: NoteConfig
      path: ''
      startLine: 231
    example: []
    syntax:
      content:
        CSharp: public class NoteConfig
        VB: Public Class NoteConfig
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_180
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_180
      language: CSharp
      name:
        CSharp: CUT_DIRECTION_180
        VB: CUT_DIRECTION_180
      nameWithType:
        CSharp: NoteConfig.CUT_DIRECTION_180
        VB: NoteConfig.CUT_DIRECTION_180
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_180
        VB: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_180
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: CUT_DIRECTION_180
        path: ''
        startLine: 233
      syntax:
        content:
          CSharp: public const int CUT_DIRECTION_180 = 0
          VB: Public Const CUT_DIRECTION_180 As Integer = 0
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_0
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_0
      language: CSharp
      name:
        CSharp: CUT_DIRECTION_0
        VB: CUT_DIRECTION_0
      nameWithType:
        CSharp: NoteConfig.CUT_DIRECTION_0
        VB: NoteConfig.CUT_DIRECTION_0
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_0
        VB: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_0
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: CUT_DIRECTION_0
        path: ''
        startLine: 234
      syntax:
        content:
          CSharp: public const int CUT_DIRECTION_0 = 1
          VB: Public Const CUT_DIRECTION_0 As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_90
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_90
      language: CSharp
      name:
        CSharp: CUT_DIRECTION_90
        VB: CUT_DIRECTION_90
      nameWithType:
        CSharp: NoteConfig.CUT_DIRECTION_90
        VB: NoteConfig.CUT_DIRECTION_90
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_90
        VB: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_90
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: CUT_DIRECTION_90
        path: ''
        startLine: 235
      syntax:
        content:
          CSharp: public const int CUT_DIRECTION_90 = 2
          VB: Public Const CUT_DIRECTION_90 As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_270
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_270
      language: CSharp
      name:
        CSharp: CUT_DIRECTION_270
        VB: CUT_DIRECTION_270
      nameWithType:
        CSharp: NoteConfig.CUT_DIRECTION_270
        VB: NoteConfig.CUT_DIRECTION_270
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_270
        VB: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_270
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: CUT_DIRECTION_270
        path: ''
        startLine: 236
      syntax:
        content:
          CSharp: public const int CUT_DIRECTION_270 = 3
          VB: Public Const CUT_DIRECTION_270 As Integer = 3
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_135
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_135
      language: CSharp
      name:
        CSharp: CUT_DIRECTION_135
        VB: CUT_DIRECTION_135
      nameWithType:
        CSharp: NoteConfig.CUT_DIRECTION_135
        VB: NoteConfig.CUT_DIRECTION_135
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_135
        VB: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_135
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: CUT_DIRECTION_135
        path: ''
        startLine: 238
      syntax:
        content:
          CSharp: public const int CUT_DIRECTION_135 = 4
          VB: Public Const CUT_DIRECTION_135 As Integer = 4
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_225
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_225
      language: CSharp
      name:
        CSharp: CUT_DIRECTION_225
        VB: CUT_DIRECTION_225
      nameWithType:
        CSharp: NoteConfig.CUT_DIRECTION_225
        VB: NoteConfig.CUT_DIRECTION_225
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_225
        VB: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_225
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: CUT_DIRECTION_225
        path: ''
        startLine: 239
      syntax:
        content:
          CSharp: public const int CUT_DIRECTION_225 = 5
          VB: Public Const CUT_DIRECTION_225 As Integer = 5
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_45
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_45
      language: CSharp
      name:
        CSharp: CUT_DIRECTION_45
        VB: CUT_DIRECTION_45
      nameWithType:
        CSharp: NoteConfig.CUT_DIRECTION_45
        VB: NoteConfig.CUT_DIRECTION_45
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_45
        VB: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_45
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: CUT_DIRECTION_45
        path: ''
        startLine: 240
      syntax:
        content:
          CSharp: public const int CUT_DIRECTION_45 = 6
          VB: Public Const CUT_DIRECTION_45 As Integer = 6
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_315
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_315
      language: CSharp
      name:
        CSharp: CUT_DIRECTION_315
        VB: CUT_DIRECTION_315
      nameWithType:
        CSharp: NoteConfig.CUT_DIRECTION_315
        VB: NoteConfig.CUT_DIRECTION_315
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_315
        VB: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_315
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: CUT_DIRECTION_315
        path: ''
        startLine: 241
      syntax:
        content:
          CSharp: public const int CUT_DIRECTION_315 = 7
          VB: Public Const CUT_DIRECTION_315 As Integer = 7
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_NONE
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_NONE
      language: CSharp
      name:
        CSharp: CUT_DIRECTION_NONE
        VB: CUT_DIRECTION_NONE
      nameWithType:
        CSharp: NoteConfig.CUT_DIRECTION_NONE
        VB: NoteConfig.CUT_DIRECTION_NONE
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_NONE
        VB: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_NONE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: CUT_DIRECTION_NONE
        path: ''
        startLine: 243
      syntax:
        content:
          CSharp: public const int CUT_DIRECTION_NONE = 8
          VB: Public Const CUT_DIRECTION_NONE As Integer = 8
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.LINE_INDEX_0
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.LINE_INDEX_0
      language: CSharp
      name:
        CSharp: LINE_INDEX_0
        VB: LINE_INDEX_0
      nameWithType:
        CSharp: NoteConfig.LINE_INDEX_0
        VB: NoteConfig.LINE_INDEX_0
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.LINE_INDEX_0
        VB: Audio.BeatMappingConfigs.NoteConfig.LINE_INDEX_0
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: LINE_INDEX_0
        path: ''
        startLine: 245
      syntax:
        content:
          CSharp: public const int LINE_INDEX_0 = 0
          VB: Public Const LINE_INDEX_0 As Integer = 0
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.LINE_INDEX_1
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.LINE_INDEX_1
      language: CSharp
      name:
        CSharp: LINE_INDEX_1
        VB: LINE_INDEX_1
      nameWithType:
        CSharp: NoteConfig.LINE_INDEX_1
        VB: NoteConfig.LINE_INDEX_1
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.LINE_INDEX_1
        VB: Audio.BeatMappingConfigs.NoteConfig.LINE_INDEX_1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: LINE_INDEX_1
        path: ''
        startLine: 246
      syntax:
        content:
          CSharp: public const int LINE_INDEX_1 = 1
          VB: Public Const LINE_INDEX_1 As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.LINE_INDEX_2
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.LINE_INDEX_2
      language: CSharp
      name:
        CSharp: LINE_INDEX_2
        VB: LINE_INDEX_2
      nameWithType:
        CSharp: NoteConfig.LINE_INDEX_2
        VB: NoteConfig.LINE_INDEX_2
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.LINE_INDEX_2
        VB: Audio.BeatMappingConfigs.NoteConfig.LINE_INDEX_2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: LINE_INDEX_2
        path: ''
        startLine: 247
      syntax:
        content:
          CSharp: public const int LINE_INDEX_2 = 2
          VB: Public Const LINE_INDEX_2 As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.LINE_INDEX_3
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.LINE_INDEX_3
      language: CSharp
      name:
        CSharp: LINE_INDEX_3
        VB: LINE_INDEX_3
      nameWithType:
        CSharp: NoteConfig.LINE_INDEX_3
        VB: NoteConfig.LINE_INDEX_3
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.LINE_INDEX_3
        VB: Audio.BeatMappingConfigs.NoteConfig.LINE_INDEX_3
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: LINE_INDEX_3
        path: ''
        startLine: 248
      syntax:
        content:
          CSharp: public const int LINE_INDEX_3 = 3
          VB: Public Const LINE_INDEX_3 As Integer = 3
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.LINE_LAYER_0
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.LINE_LAYER_0
      language: CSharp
      name:
        CSharp: LINE_LAYER_0
        VB: LINE_LAYER_0
      nameWithType:
        CSharp: NoteConfig.LINE_LAYER_0
        VB: NoteConfig.LINE_LAYER_0
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.LINE_LAYER_0
        VB: Audio.BeatMappingConfigs.NoteConfig.LINE_LAYER_0
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: LINE_LAYER_0
        path: ''
        startLine: 250
      syntax:
        content:
          CSharp: public const int LINE_LAYER_0 = 0
          VB: Public Const LINE_LAYER_0 As Integer = 0
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.LINE_LAYER_1
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.LINE_LAYER_1
      language: CSharp
      name:
        CSharp: LINE_LAYER_1
        VB: LINE_LAYER_1
      nameWithType:
        CSharp: NoteConfig.LINE_LAYER_1
        VB: NoteConfig.LINE_LAYER_1
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.LINE_LAYER_1
        VB: Audio.BeatMappingConfigs.NoteConfig.LINE_LAYER_1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: LINE_LAYER_1
        path: ''
        startLine: 251
      syntax:
        content:
          CSharp: public const int LINE_LAYER_1 = 1
          VB: Public Const LINE_LAYER_1 As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.LINE_LAYER_2
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.LINE_LAYER_2
      language: CSharp
      name:
        CSharp: LINE_LAYER_2
        VB: LINE_LAYER_2
      nameWithType:
        CSharp: NoteConfig.LINE_LAYER_2
        VB: NoteConfig.LINE_LAYER_2
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.LINE_LAYER_2
        VB: Audio.BeatMappingConfigs.NoteConfig.LINE_LAYER_2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: LINE_LAYER_2
        path: ''
        startLine: 252
      syntax:
        content:
          CSharp: public const int LINE_LAYER_2 = 2
          VB: Public Const LINE_LAYER_2 As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.LINE_LAYER_3
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.LINE_LAYER_3
      language: CSharp
      name:
        CSharp: LINE_LAYER_3
        VB: LINE_LAYER_3
      nameWithType:
        CSharp: NoteConfig.LINE_LAYER_3
        VB: NoteConfig.LINE_LAYER_3
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.LINE_LAYER_3
        VB: Audio.BeatMappingConfigs.NoteConfig.LINE_LAYER_3
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: LINE_LAYER_3
        path: ''
        startLine: 253
      syntax:
        content:
          CSharp: public const int LINE_LAYER_3 = 3
          VB: Public Const LINE_LAYER_3 As Integer = 3
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.NOTE_TYPE_LEFT
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.NOTE_TYPE_LEFT
      language: CSharp
      name:
        CSharp: NOTE_TYPE_LEFT
        VB: NOTE_TYPE_LEFT
      nameWithType:
        CSharp: NoteConfig.NOTE_TYPE_LEFT
        VB: NoteConfig.NOTE_TYPE_LEFT
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.NOTE_TYPE_LEFT
        VB: Audio.BeatMappingConfigs.NoteConfig.NOTE_TYPE_LEFT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: NOTE_TYPE_LEFT
        path: ''
        startLine: 255
      syntax:
        content:
          CSharp: public const int NOTE_TYPE_LEFT = 0
          VB: Public Const NOTE_TYPE_LEFT As Integer = 0
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.NOTE_TYPE_RIGHT
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.NOTE_TYPE_RIGHT
      language: CSharp
      name:
        CSharp: NOTE_TYPE_RIGHT
        VB: NOTE_TYPE_RIGHT
      nameWithType:
        CSharp: NoteConfig.NOTE_TYPE_RIGHT
        VB: NoteConfig.NOTE_TYPE_RIGHT
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.NOTE_TYPE_RIGHT
        VB: Audio.BeatMappingConfigs.NoteConfig.NOTE_TYPE_RIGHT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: NOTE_TYPE_RIGHT
        path: ''
        startLine: 256
      syntax:
        content:
          CSharp: public const int NOTE_TYPE_RIGHT = 1
          VB: Public Const NOTE_TYPE_RIGHT As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.Time
      commentId: P:Audio.BeatMappingConfigs.NoteConfig.Time
      language: CSharp
      name:
        CSharp: Time
        VB: Time
      nameWithType:
        CSharp: NoteConfig.Time
        VB: NoteConfig.Time
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.Time
        VB: Audio.BeatMappingConfigs.NoteConfig.Time
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: Time
        path: ''
        startLine: 258
      syntax:
        content:
          CSharp: public float Time { get; set; }
          VB: Public Property Time As Single
        parameters: []
        return:
          type: System.Single
      overload: Audio.BeatMappingConfigs.NoteConfig.Time*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.NoteConfig.LineIndex
      commentId: P:Audio.BeatMappingConfigs.NoteConfig.LineIndex
      language: CSharp
      name:
        CSharp: LineIndex
        VB: LineIndex
      nameWithType:
        CSharp: NoteConfig.LineIndex
        VB: NoteConfig.LineIndex
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.LineIndex
        VB: Audio.BeatMappingConfigs.NoteConfig.LineIndex
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: LineIndex
        path: ''
        startLine: 259
      syntax:
        content:
          CSharp: public int LineIndex { get; set; }
          VB: Public Property LineIndex As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Audio.BeatMappingConfigs.NoteConfig.LineIndex*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.NoteConfig.LineLayer
      commentId: P:Audio.BeatMappingConfigs.NoteConfig.LineLayer
      language: CSharp
      name:
        CSharp: LineLayer
        VB: LineLayer
      nameWithType:
        CSharp: NoteConfig.LineLayer
        VB: NoteConfig.LineLayer
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.LineLayer
        VB: Audio.BeatMappingConfigs.NoteConfig.LineLayer
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: LineLayer
        path: ''
        startLine: 260
      syntax:
        content:
          CSharp: public int LineLayer { get; set; }
          VB: Public Property LineLayer As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Audio.BeatMappingConfigs.NoteConfig.LineLayer*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.NoteConfig.Type
      commentId: P:Audio.BeatMappingConfigs.NoteConfig.Type
      language: CSharp
      name:
        CSharp: Type
        VB: Type
      nameWithType:
        CSharp: NoteConfig.Type
        VB: NoteConfig.Type
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.Type
        VB: Audio.BeatMappingConfigs.NoteConfig.Type
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: Type
        path: ''
        startLine: 261
      syntax:
        content:
          CSharp: public int Type { get; set; }
          VB: Public Property Type As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Audio.BeatMappingConfigs.NoteConfig.Type*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.NoteConfig.CutDirection
      commentId: P:Audio.BeatMappingConfigs.NoteConfig.CutDirection
      language: CSharp
      name:
        CSharp: CutDirection
        VB: CutDirection
      nameWithType:
        CSharp: NoteConfig.CutDirection
        VB: NoteConfig.CutDirection
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.CutDirection
        VB: Audio.BeatMappingConfigs.NoteConfig.CutDirection
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: CutDirection
        path: ''
        startLine: 262
      syntax:
        content:
          CSharp: public int CutDirection { get; set; }
          VB: Public Property CutDirection As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Audio.BeatMappingConfigs.NoteConfig.CutDirection*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.NoteConfig.BelongsToDoubleNote
      commentId: P:Audio.BeatMappingConfigs.NoteConfig.BelongsToDoubleNote
      language: CSharp
      name:
        CSharp: BelongsToDoubleNote
        VB: BelongsToDoubleNote
      nameWithType:
        CSharp: NoteConfig.BelongsToDoubleNote
        VB: NoteConfig.BelongsToDoubleNote
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.BelongsToDoubleNote
        VB: Audio.BeatMappingConfigs.NoteConfig.BelongsToDoubleNote
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: BelongsToDoubleNote
        path: ''
        startLine: 263
      syntax:
        content:
          CSharp: public bool BelongsToDoubleNote { get; set; }
          VB: Public Property BelongsToDoubleNote As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Audio.BeatMappingConfigs.NoteConfig.BelongsToDoubleNote*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.NoteConfig.ObstacleLineIndex
      commentId: P:Audio.BeatMappingConfigs.NoteConfig.ObstacleLineIndex
      language: CSharp
      name:
        CSharp: ObstacleLineIndex
        VB: ObstacleLineIndex
      nameWithType:
        CSharp: NoteConfig.ObstacleLineIndex
        VB: NoteConfig.ObstacleLineIndex
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.ObstacleLineIndex
        VB: Audio.BeatMappingConfigs.NoteConfig.ObstacleLineIndex
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: ObstacleLineIndex
        path: ''
        startLine: 264
      syntax:
        content:
          CSharp: public int ObstacleLineIndex { get; set; }
          VB: Public Property ObstacleLineIndex As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Audio.BeatMappingConfigs.NoteConfig.ObstacleLineIndex*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: Audio.BeatMappingConfigs.ObstacleConfig
    commentId: T:Audio.BeatMappingConfigs.ObstacleConfig
    language: CSharp
    name:
      CSharp: ObstacleConfig
      VB: ObstacleConfig
    nameWithType:
      CSharp: ObstacleConfig
      VB: ObstacleConfig
    qualifiedName:
      CSharp: Audio.BeatMappingConfigs.ObstacleConfig
      VB: Audio.BeatMappingConfigs.ObstacleConfig
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Audio.BeatMappingConfigs
    source:
      id: ObstacleConfig
      path: ''
      startLine: 272
    example: []
    syntax:
      content:
        CSharp: public class ObstacleConfig
        VB: Public Class ObstacleConfig
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Audio.BeatMappingConfigs.ObstacleConfig.Time
      commentId: P:Audio.BeatMappingConfigs.ObstacleConfig.Time
      language: CSharp
      name:
        CSharp: Time
        VB: Time
      nameWithType:
        CSharp: ObstacleConfig.Time
        VB: ObstacleConfig.Time
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.ObstacleConfig.Time
        VB: Audio.BeatMappingConfigs.ObstacleConfig.Time
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: Time
        path: ''
        startLine: 274
      syntax:
        content:
          CSharp: public float Time { get; set; }
          VB: Public Property Time As Single
        parameters: []
        return:
          type: System.Single
      overload: Audio.BeatMappingConfigs.ObstacleConfig.Time*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.ObstacleConfig.LineIndex
      commentId: P:Audio.BeatMappingConfigs.ObstacleConfig.LineIndex
      language: CSharp
      name:
        CSharp: LineIndex
        VB: LineIndex
      nameWithType:
        CSharp: ObstacleConfig.LineIndex
        VB: ObstacleConfig.LineIndex
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.ObstacleConfig.LineIndex
        VB: Audio.BeatMappingConfigs.ObstacleConfig.LineIndex
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: LineIndex
        path: ''
        startLine: 275
      syntax:
        content:
          CSharp: public int LineIndex { get; set; }
          VB: Public Property LineIndex As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Audio.BeatMappingConfigs.ObstacleConfig.LineIndex*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.ObstacleConfig.Type
      commentId: P:Audio.BeatMappingConfigs.ObstacleConfig.Type
      language: CSharp
      name:
        CSharp: Type
        VB: Type
      nameWithType:
        CSharp: ObstacleConfig.Type
        VB: ObstacleConfig.Type
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.ObstacleConfig.Type
        VB: Audio.BeatMappingConfigs.ObstacleConfig.Type
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: Type
        path: ''
        startLine: 276
      syntax:
        content:
          CSharp: public int Type { get; set; }
          VB: Public Property Type As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Audio.BeatMappingConfigs.ObstacleConfig.Type*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.ObstacleConfig.Duration
      commentId: P:Audio.BeatMappingConfigs.ObstacleConfig.Duration
      language: CSharp
      name:
        CSharp: Duration
        VB: Duration
      nameWithType:
        CSharp: ObstacleConfig.Duration
        VB: ObstacleConfig.Duration
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.ObstacleConfig.Duration
        VB: Audio.BeatMappingConfigs.ObstacleConfig.Duration
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: Duration
        path: ''
        startLine: 277
      syntax:
        content:
          CSharp: public float Duration { get; set; }
          VB: Public Property Duration As Single
        parameters: []
        return:
          type: System.Single
      overload: Audio.BeatMappingConfigs.ObstacleConfig.Duration*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.ObstacleConfig.Width
      commentId: P:Audio.BeatMappingConfigs.ObstacleConfig.Width
      language: CSharp
      name:
        CSharp: Width
        VB: Width
      nameWithType:
        CSharp: ObstacleConfig.Width
        VB: ObstacleConfig.Width
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.ObstacleConfig.Width
        VB: Audio.BeatMappingConfigs.ObstacleConfig.Width
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: Width
        path: ''
        startLine: 278
      syntax:
        content:
          CSharp: public float Width { get; set; }
          VB: Public Property Width As Single
        parameters: []
        return:
          type: System.Single
      overload: Audio.BeatMappingConfigs.ObstacleConfig.Width*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: Audio.BeatMappingConfigs.BookmarkConfig
    commentId: T:Audio.BeatMappingConfigs.BookmarkConfig
    language: CSharp
    name:
      CSharp: BookmarkConfig
      VB: BookmarkConfig
    nameWithType:
      CSharp: BookmarkConfig
      VB: BookmarkConfig
    qualifiedName:
      CSharp: Audio.BeatMappingConfigs.BookmarkConfig
      VB: Audio.BeatMappingConfigs.BookmarkConfig
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Audio.BeatMappingConfigs
    source:
      id: BookmarkConfig
      path: ''
      startLine: 285
    example: []
    syntax:
      content:
        CSharp: public class BookmarkConfig
        VB: Public Class BookmarkConfig
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Audio.BeatMappingConfigs.BookmarkConfig.Time
      commentId: P:Audio.BeatMappingConfigs.BookmarkConfig.Time
      language: CSharp
      name:
        CSharp: Time
        VB: Time
      nameWithType:
        CSharp: BookmarkConfig.Time
        VB: BookmarkConfig.Time
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.BookmarkConfig.Time
        VB: Audio.BeatMappingConfigs.BookmarkConfig.Time
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: Time
        path: ''
        startLine: 287
      syntax:
        content:
          CSharp: public float Time { get; set; }
          VB: Public Property Time As Single
        parameters: []
        return:
          type: System.Single
      overload: Audio.BeatMappingConfigs.BookmarkConfig.Time*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.BookmarkConfig.Name
      commentId: P:Audio.BeatMappingConfigs.BookmarkConfig.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: BookmarkConfig.Name
        VB: BookmarkConfig.Name
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.BookmarkConfig.Name
        VB: Audio.BeatMappingConfigs.BookmarkConfig.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: Name
        path: ''
        startLine: 288
      syntax:
        content:
          CSharp: public string Name { get; set; }
          VB: Public Property Name As String
        parameters: []
        return:
          type: System.String
      overload: Audio.BeatMappingConfigs.BookmarkConfig.Name*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: Audio.BeatMappingConfigs.MappingInfo
    commentId: T:Audio.BeatMappingConfigs.MappingInfo
    language: CSharp
    name:
      CSharp: MappingInfo
      VB: MappingInfo
    nameWithType:
      CSharp: MappingInfo
      VB: MappingInfo
    qualifiedName:
      CSharp: Audio.BeatMappingConfigs.MappingInfo
      VB: Audio.BeatMappingConfigs.MappingInfo
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Audio.BeatMappingConfigs
    source:
      id: MappingInfo
      path: ''
      startLine: 295
    example: []
    syntax:
      content:
        CSharp: public class MappingInfo
        VB: Public Class MappingInfo
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Audio.BeatMappingConfigs.MappingInfo.Bpm
      commentId: P:Audio.BeatMappingConfigs.MappingInfo.Bpm
      language: CSharp
      name:
        CSharp: Bpm
        VB: Bpm
      nameWithType:
        CSharp: MappingInfo.Bpm
        VB: MappingInfo.Bpm
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.MappingInfo.Bpm
        VB: Audio.BeatMappingConfigs.MappingInfo.Bpm
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: Bpm
        path: ''
        startLine: 299
      syntax:
        content:
          CSharp: public float Bpm { get; set; }
          VB: Public Property Bpm As Single
        parameters: []
        return:
          type: System.Single
      overload: Audio.BeatMappingConfigs.MappingInfo.Bpm*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
- id: Audio.AudioAnalysis
  commentId: N:Audio.AudioAnalysis
  language: CSharp
  name:
    CSharp: Audio.AudioAnalysis
    VB: Audio.AudioAnalysis
  nameWithType:
    CSharp: Audio.AudioAnalysis
    VB: Audio.AudioAnalysis
  qualifiedName:
    CSharp: Audio.AudioAnalysis
    VB: Audio.AudioAnalysis
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Audio.AudioAnalysis.AudioAnalyzerHandler
    commentId: T:Audio.AudioAnalysis.AudioAnalyzerHandler
    language: CSharp
    name:
      CSharp: AudioAnalyzerHandler
      VB: AudioAnalyzerHandler
    nameWithType:
      CSharp: AudioAnalyzerHandler
      VB: AudioAnalyzerHandler
    qualifiedName:
      CSharp: Audio.AudioAnalysis.AudioAnalyzerHandler
      VB: Audio.AudioAnalysis.AudioAnalyzerHandler
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Audio.AudioAnalysis
    source:
      id: AudioAnalyzerHandler
      path: ''
      startLine: 451
    syntax:
      content:
        CSharp: public class AudioAnalyzerHandler
        VB: Public Class AudioAnalyzerHandler
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Audio.AudioAnalysis.AudioAnalyzerHandler.#ctor(Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig,System.Collections.Generic.List{Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig},Audio.BeatMappingConfigs.MappingContainer)
      commentId: M:Audio.AudioAnalysis.AudioAnalyzerHandler.#ctor(Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig,System.Collections.Generic.List{Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig},Audio.BeatMappingConfigs.MappingContainer)
      language: CSharp
      name:
        CSharp: AudioAnalyzerHandler(TrackConfig, List<AnalyzedSpectrumConfig>, MappingContainer)
        VB: AudioAnalyzerHandler(TrackConfig, List(Of AnalyzedSpectrumConfig), MappingContainer)
      nameWithType:
        CSharp: AudioAnalyzerHandler.AudioAnalyzerHandler(TrackConfig, List<AnalyzedSpectrumConfig>, MappingContainer)
        VB: AudioAnalyzerHandler.AudioAnalyzerHandler(TrackConfig, List(Of AnalyzedSpectrumConfig), MappingContainer)
      qualifiedName:
        CSharp: Audio.AudioAnalysis.AudioAnalyzerHandler.AudioAnalyzerHandler(Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig, System.Collections.Generic.List<Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig>, Audio.BeatMappingConfigs.MappingContainer)
        VB: Audio.AudioAnalysis.AudioAnalyzerHandler.AudioAnalyzerHandler(Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig, System.Collections.Generic.List(Of Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig), Audio.BeatMappingConfigs.MappingContainer)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis
      source:
        id: .ctor
        path: ''
        startLine: 458
      syntax:
        content:
          CSharp: public AudioAnalyzerHandler(TrackConfig trackConfig, List<AnalyzedSpectrumConfig> spectrumData, MappingContainer beatMappingContainer)
          VB: Public Sub New(trackConfig As TrackConfig, spectrumData As List(Of AnalyzedSpectrumConfig), beatMappingContainer As MappingContainer)
        parameters:
        - id: trackConfig
          type: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig
        - id: spectrumData
          type: System.Collections.Generic.List{Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig}
        - id: beatMappingContainer
          type: Audio.BeatMappingConfigs.MappingContainer
      overload: Audio.AudioAnalysis.AudioAnalyzerHandler.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Audio.AudioAnalysis.AudioAnalyzerHandler.getAnalyzedSpectrumData
      commentId: M:Audio.AudioAnalysis.AudioAnalyzerHandler.getAnalyzedSpectrumData
      language: CSharp
      name:
        CSharp: getAnalyzedSpectrumData()
        VB: getAnalyzedSpectrumData()
      nameWithType:
        CSharp: AudioAnalyzerHandler.getAnalyzedSpectrumData()
        VB: AudioAnalyzerHandler.getAnalyzedSpectrumData()
      qualifiedName:
        CSharp: Audio.AudioAnalysis.AudioAnalyzerHandler.getAnalyzedSpectrumData()
        VB: Audio.AudioAnalysis.AudioAnalyzerHandler.getAnalyzedSpectrumData()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis
      source:
        id: getAnalyzedSpectrumData
        path: ''
        startLine: 470
      syntax:
        content:
          CSharp: public List<AnalyzedSpectrumConfig> getAnalyzedSpectrumData()
          VB: Public Function getAnalyzedSpectrumData As List(Of AnalyzedSpectrumConfig)
        return:
          type: System.Collections.Generic.List{Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig}
      overload: Audio.AudioAnalysis.AudioAnalyzerHandler.getAnalyzedSpectrumData*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Audio.AudioAnalysis.AudioAnalyzerHandler.getBeatMappingContainer
      commentId: M:Audio.AudioAnalysis.AudioAnalyzerHandler.getBeatMappingContainer
      language: CSharp
      name:
        CSharp: getBeatMappingContainer()
        VB: getBeatMappingContainer()
      nameWithType:
        CSharp: AudioAnalyzerHandler.getBeatMappingContainer()
        VB: AudioAnalyzerHandler.getBeatMappingContainer()
      qualifiedName:
        CSharp: Audio.AudioAnalysis.AudioAnalyzerHandler.getBeatMappingContainer()
        VB: Audio.AudioAnalysis.AudioAnalyzerHandler.getBeatMappingContainer()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis
      source:
        id: getBeatMappingContainer
        path: ''
        startLine: 475
      syntax:
        content:
          CSharp: public MappingContainer getBeatMappingContainer()
          VB: Public Function getBeatMappingContainer As MappingContainer
        return:
          type: Audio.BeatMappingConfigs.MappingContainer
      overload: Audio.AudioAnalysis.AudioAnalyzerHandler.getBeatMappingContainer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Audio.AudioAnalysis.AudioAnalyzerHandler.analyzeSpectrumsList(Action)
      commentId: M:Audio.AudioAnalysis.AudioAnalyzerHandler.analyzeSpectrumsList(Action)
      language: CSharp
      name:
        CSharp: analyzeSpectrumsList(Action)
        VB: analyzeSpectrumsList(Action)
      nameWithType:
        CSharp: AudioAnalyzerHandler.analyzeSpectrumsList(Action)
        VB: AudioAnalyzerHandler.analyzeSpectrumsList(Action)
      qualifiedName:
        CSharp: Audio.AudioAnalysis.AudioAnalyzerHandler.analyzeSpectrumsList(Action)
        VB: Audio.AudioAnalysis.AudioAnalyzerHandler.analyzeSpectrumsList(Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis
      source:
        id: analyzeSpectrumsList
        path: ''
        startLine: 480
      syntax:
        content:
          CSharp: public void analyzeSpectrumsList(Action callback)
          VB: Public Sub analyzeSpectrumsList(callback As Action)
        parameters:
        - id: callback
          type: Action
      overload: Audio.AudioAnalysis.AudioAnalyzerHandler.analyzeSpectrumsList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Audio.AudioAnalysis.PeakDetector
    commentId: T:Audio.AudioAnalysis.PeakDetector
    language: CSharp
    name:
      CSharp: PeakDetector
      VB: PeakDetector
    nameWithType:
      CSharp: PeakDetector
      VB: PeakDetector
    qualifiedName:
      CSharp: Audio.AudioAnalysis.PeakDetector
      VB: Audio.AudioAnalysis.PeakDetector
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Audio.AudioAnalysis
    source:
      id: PeakDetector
      path: ''
      startLine: 511
    syntax:
      content:
        CSharp: public class PeakDetector
        VB: Public Class PeakDetector
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Audio.AudioAnalysis.PeakDetector.#ctor(System.Collections.Generic.List{Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig},System.Collections.Generic.List{Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig},Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig,Audio.BeatMappingConfigs.MappingContainer)
      commentId: M:Audio.AudioAnalysis.PeakDetector.#ctor(System.Collections.Generic.List{Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig},System.Collections.Generic.List{Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig},Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig,Audio.BeatMappingConfigs.MappingContainer)
      language: CSharp
      name:
        CSharp: PeakDetector(List<AnalyzerBandConfig>, List<AnalyzedSpectrumConfig>, TrackConfig, MappingContainer)
        VB: PeakDetector(List(Of AnalyzerBandConfig), List(Of AnalyzedSpectrumConfig), TrackConfig, MappingContainer)
      nameWithType:
        CSharp: PeakDetector.PeakDetector(List<AnalyzerBandConfig>, List<AnalyzedSpectrumConfig>, TrackConfig, MappingContainer)
        VB: PeakDetector.PeakDetector(List(Of AnalyzerBandConfig), List(Of AnalyzedSpectrumConfig), TrackConfig, MappingContainer)
      qualifiedName:
        CSharp: Audio.AudioAnalysis.PeakDetector.PeakDetector(System.Collections.Generic.List<Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig>, System.Collections.Generic.List<Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig>, Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig, Audio.BeatMappingConfigs.MappingContainer)
        VB: Audio.AudioAnalysis.PeakDetector.PeakDetector(System.Collections.Generic.List(Of Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig), System.Collections.Generic.List(Of Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig), Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig, Audio.BeatMappingConfigs.MappingContainer)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis
      source:
        id: .ctor
        path: ''
        startLine: 537
      syntax:
        content:
          CSharp: public PeakDetector(List<AnalyzerBandConfig> bandConfigs, List<AnalyzedSpectrumConfig> spectrumData, TrackConfig config, MappingContainer beatMappingContainer)
          VB: Public Sub New(bandConfigs As List(Of AnalyzerBandConfig), spectrumData As List(Of AnalyzedSpectrumConfig), config As TrackConfig, beatMappingContainer As MappingContainer)
        parameters:
        - id: bandConfigs
          type: System.Collections.Generic.List{Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig}
        - id: spectrumData
          type: System.Collections.Generic.List{Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig}
        - id: config
          type: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig
        - id: beatMappingContainer
          type: Audio.BeatMappingConfigs.MappingContainer
      overload: Audio.AudioAnalysis.PeakDetector.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Audio.AudioAnalysis.PeakDetector.analyze
      commentId: M:Audio.AudioAnalysis.PeakDetector.analyze
      language: CSharp
      name:
        CSharp: analyze()
        VB: analyze()
      nameWithType:
        CSharp: PeakDetector.analyze()
        VB: PeakDetector.analyze()
      qualifiedName:
        CSharp: Audio.AudioAnalysis.PeakDetector.analyze()
        VB: Audio.AudioAnalysis.PeakDetector.analyze()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis
      source:
        id: analyze
        path: ''
        startLine: 558
      syntax:
        content:
          CSharp: public void analyze()
          VB: Public Sub analyze
      overload: Audio.AudioAnalysis.PeakDetector.analyze*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Audio.AudioAnalysis.PeakDetector.getSpectrumDataList
      commentId: M:Audio.AudioAnalysis.PeakDetector.getSpectrumDataList
      language: CSharp
      name:
        CSharp: getSpectrumDataList()
        VB: getSpectrumDataList()
      nameWithType:
        CSharp: PeakDetector.getSpectrumDataList()
        VB: PeakDetector.getSpectrumDataList()
      qualifiedName:
        CSharp: Audio.AudioAnalysis.PeakDetector.getSpectrumDataList()
        VB: Audio.AudioAnalysis.PeakDetector.getSpectrumDataList()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis
      source:
        id: getSpectrumDataList
        path: ''
        startLine: 573
      syntax:
        content:
          CSharp: public List<AnalyzedSpectrumConfig> getSpectrumDataList()
          VB: Public Function getSpectrumDataList As List(Of AnalyzedSpectrumConfig)
        return:
          type: System.Collections.Generic.List{Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig}
      overload: Audio.AudioAnalysis.PeakDetector.getSpectrumDataList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Audio.AudioAnalysis.PeakDetector.getBeatMappingContainer
      commentId: M:Audio.AudioAnalysis.PeakDetector.getBeatMappingContainer
      language: CSharp
      name:
        CSharp: getBeatMappingContainer()
        VB: getBeatMappingContainer()
      nameWithType:
        CSharp: PeakDetector.getBeatMappingContainer()
        VB: PeakDetector.getBeatMappingContainer()
      qualifiedName:
        CSharp: Audio.AudioAnalysis.PeakDetector.getBeatMappingContainer()
        VB: Audio.AudioAnalysis.PeakDetector.getBeatMappingContainer()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis
      source:
        id: getBeatMappingContainer
        path: ''
        startLine: 578
      syntax:
        content:
          CSharp: public MappingContainer getBeatMappingContainer()
          VB: Public Function getBeatMappingContainer As MappingContainer
        return:
          type: Audio.BeatMappingConfigs.MappingContainer
      overload: Audio.AudioAnalysis.PeakDetector.getBeatMappingContainer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Audio.AudioAnalysis.PostOnsetAudioAnalyzer
    commentId: T:Audio.AudioAnalysis.PostOnsetAudioAnalyzer
    language: CSharp
    name:
      CSharp: PostOnsetAudioAnalyzer
      VB: PostOnsetAudioAnalyzer
    nameWithType:
      CSharp: PostOnsetAudioAnalyzer
      VB: PostOnsetAudioAnalyzer
    qualifiedName:
      CSharp: Audio.AudioAnalysis.PostOnsetAudioAnalyzer
      VB: Audio.AudioAnalysis.PostOnsetAudioAnalyzer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Audio.AudioAnalysis
    source:
      id: PostOnsetAudioAnalyzer
      path: ''
      startLine: 829
    syntax:
      content:
        CSharp: public class PostOnsetAudioAnalyzer
        VB: Public Class PostOnsetAudioAnalyzer
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Audio.AudioAnalysis.PostOnsetAudioAnalyzer.#ctor(Audio.BeatMappingConfigs.MappingContainer)
      commentId: M:Audio.AudioAnalysis.PostOnsetAudioAnalyzer.#ctor(Audio.BeatMappingConfigs.MappingContainer)
      language: CSharp
      name:
        CSharp: PostOnsetAudioAnalyzer(MappingContainer)
        VB: PostOnsetAudioAnalyzer(MappingContainer)
      nameWithType:
        CSharp: PostOnsetAudioAnalyzer.PostOnsetAudioAnalyzer(MappingContainer)
        VB: PostOnsetAudioAnalyzer.PostOnsetAudioAnalyzer(MappingContainer)
      qualifiedName:
        CSharp: Audio.AudioAnalysis.PostOnsetAudioAnalyzer.PostOnsetAudioAnalyzer(Audio.BeatMappingConfigs.MappingContainer)
        VB: Audio.AudioAnalysis.PostOnsetAudioAnalyzer.PostOnsetAudioAnalyzer(Audio.BeatMappingConfigs.MappingContainer)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis
      source:
        id: .ctor
        path: ''
        startLine: 844
      syntax:
        content:
          CSharp: public PostOnsetAudioAnalyzer(MappingContainer beatMappingContainer)
          VB: Public Sub New(beatMappingContainer As MappingContainer)
        parameters:
        - id: beatMappingContainer
          type: Audio.BeatMappingConfigs.MappingContainer
      overload: Audio.AudioAnalysis.PostOnsetAudioAnalyzer.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Audio.AudioAnalysis.PostOnsetAudioAnalyzer.analyze
      commentId: M:Audio.AudioAnalysis.PostOnsetAudioAnalyzer.analyze
      language: CSharp
      name:
        CSharp: analyze()
        VB: analyze()
      nameWithType:
        CSharp: PostOnsetAudioAnalyzer.analyze()
        VB: PostOnsetAudioAnalyzer.analyze()
      qualifiedName:
        CSharp: Audio.AudioAnalysis.PostOnsetAudioAnalyzer.analyze()
        VB: Audio.AudioAnalysis.PostOnsetAudioAnalyzer.analyze()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis
      source:
        id: analyze
        path: ''
        startLine: 850
      syntax:
        content:
          CSharp: public void analyze()
          VB: Public Sub analyze
      overload: Audio.AudioAnalysis.PostOnsetAudioAnalyzer.analyze*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Audio.AudioAnalysis.PostOnsetAudioAnalyzer.getBeatMappingContainer
      commentId: M:Audio.AudioAnalysis.PostOnsetAudioAnalyzer.getBeatMappingContainer
      language: CSharp
      name:
        CSharp: getBeatMappingContainer()
        VB: getBeatMappingContainer()
      nameWithType:
        CSharp: PostOnsetAudioAnalyzer.getBeatMappingContainer()
        VB: PostOnsetAudioAnalyzer.getBeatMappingContainer()
      qualifiedName:
        CSharp: Audio.AudioAnalysis.PostOnsetAudioAnalyzer.getBeatMappingContainer()
        VB: Audio.AudioAnalysis.PostOnsetAudioAnalyzer.getBeatMappingContainer()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis
      source:
        id: getBeatMappingContainer
        path: ''
        startLine: 858
      syntax:
        content:
          CSharp: public MappingContainer getBeatMappingContainer()
          VB: Public Function getBeatMappingContainer As MappingContainer
        return:
          type: Audio.BeatMappingConfigs.MappingContainer
      overload: Audio.AudioAnalysis.PostOnsetAudioAnalyzer.getBeatMappingContainer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Audio.AudioAnalysis.SpectrumAnalysisUtils
    commentId: T:Audio.AudioAnalysis.SpectrumAnalysisUtils
    language: CSharp
    name:
      CSharp: SpectrumAnalysisUtils
      VB: SpectrumAnalysisUtils
    nameWithType:
      CSharp: SpectrumAnalysisUtils
      VB: SpectrumAnalysisUtils
    qualifiedName:
      CSharp: Audio.AudioAnalysis.SpectrumAnalysisUtils
      VB: Audio.AudioAnalysis.SpectrumAnalysisUtils
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Audio.AudioAnalysis
    source:
      id: SpectrumAnalysisUtils
      path: ''
      startLine: 1322
    syntax:
      content:
        CSharp: public static class SpectrumAnalysisUtils
        VB: Public Module SpectrumAnalysisUtils
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Audio.AudioAnalysis.SpectrumAnalysisUtils.shouldBeExtraPeak(System.Single,System.Single)
      commentId: M:Audio.AudioAnalysis.SpectrumAnalysisUtils.shouldBeExtraPeak(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: shouldBeExtraPeak(Single, Single)
        VB: shouldBeExtraPeak(Single, Single)
      nameWithType:
        CSharp: SpectrumAnalysisUtils.shouldBeExtraPeak(Single, Single)
        VB: SpectrumAnalysisUtils.shouldBeExtraPeak(Single, Single)
      qualifiedName:
        CSharp: Audio.AudioAnalysis.SpectrumAnalysisUtils.shouldBeExtraPeak(System.Single, System.Single)
        VB: Audio.AudioAnalysis.SpectrumAnalysisUtils.shouldBeExtraPeak(System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis
      source:
        id: shouldBeExtraPeak
        path: ''
        startLine: 1324
      syntax:
        content:
          CSharp: public static bool shouldBeExtraPeak(float totalAverageFlux, float currentAverageFlux)
          VB: Public Shared Function shouldBeExtraPeak(totalAverageFlux As Single, currentAverageFlux As Single) As Boolean
        parameters:
        - id: totalAverageFlux
          type: System.Single
        - id: currentAverageFlux
          type: System.Single
        return:
          type: System.Boolean
      overload: Audio.AudioAnalysis.SpectrumAnalysisUtils.shouldBeExtraPeak*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Audio.AudioAnalysis.SpectrumAnalysisUtils.sampleIsCloser(System.Single,System.Single,System.Single)
      commentId: M:Audio.AudioAnalysis.SpectrumAnalysisUtils.sampleIsCloser(System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: sampleIsCloser(Single, Single, Single)
        VB: sampleIsCloser(Single, Single, Single)
      nameWithType:
        CSharp: SpectrumAnalysisUtils.sampleIsCloser(Single, Single, Single)
        VB: SpectrumAnalysisUtils.sampleIsCloser(Single, Single, Single)
      qualifiedName:
        CSharp: Audio.AudioAnalysis.SpectrumAnalysisUtils.sampleIsCloser(System.Single, System.Single, System.Single)
        VB: Audio.AudioAnalysis.SpectrumAnalysisUtils.sampleIsCloser(System.Single, System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis
      source:
        id: sampleIsCloser
        path: ''
        startLine: 1329
      syntax:
        content:
          CSharp: public static bool sampleIsCloser(float newVal, float oldVal, float trueVal)
          VB: Public Shared Function sampleIsCloser(newVal As Single, oldVal As Single, trueVal As Single) As Boolean
        parameters:
        - id: newVal
          type: System.Single
        - id: oldVal
          type: System.Single
        - id: trueVal
          type: System.Single
        return:
          type: System.Boolean
      overload: Audio.AudioAnalysis.SpectrumAnalysisUtils.sampleIsCloser*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
- id: Audio.AudioAnalysis.AudioAnalyzerConfigs
  commentId: N:Audio.AudioAnalysis.AudioAnalyzerConfigs
  language: CSharp
  name:
    CSharp: Audio.AudioAnalysis.AudioAnalyzerConfigs
    VB: Audio.AudioAnalysis.AudioAnalyzerConfigs
  nameWithType:
    CSharp: Audio.AudioAnalysis.AudioAnalyzerConfigs
    VB: Audio.AudioAnalysis.AudioAnalyzerConfigs
  qualifiedName:
    CSharp: Audio.AudioAnalysis.AudioAnalyzerConfigs
    VB: Audio.AudioAnalysis.AudioAnalyzerConfigs
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig
    commentId: T:Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig
    language: CSharp
    name:
      CSharp: TrackConfig
      VB: TrackConfig
    nameWithType:
      CSharp: TrackConfig
      VB: TrackConfig
    qualifiedName:
      CSharp: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig
      VB: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Audio.AudioAnalysis.AudioAnalyzerConfigs
    source:
      id: TrackConfig
      path: ''
      startLine: 322
    example: []
    syntax:
      content:
        CSharp: public class TrackConfig
        VB: Public Class TrackConfig
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.#ctor(System.Int32,System.String)
      commentId: M:Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.#ctor(System.Int32,System.String)
      language: CSharp
      name:
        CSharp: TrackConfig(Int32, String)
        VB: TrackConfig(Int32, String)
      nameWithType:
        CSharp: TrackConfig.TrackConfig(Int32, String)
        VB: TrackConfig.TrackConfig(Int32, String)
      qualifiedName:
        CSharp: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.TrackConfig(System.Int32, System.String)
        VB: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.TrackConfig(System.Int32, System.String)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis.AudioAnalyzerConfigs
      source:
        id: .ctor
        path: ''
        startLine: 332
      syntax:
        content:
          CSharp: public TrackConfig(int clipSampleRate, string trackName)
          VB: Public Sub New(clipSampleRate As Integer, trackName As String)
        parameters:
        - id: clipSampleRate
          type: System.Int32
        - id: trackName
          type: System.String
      overload: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.AnalyzerConfigs
      commentId: P:Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.AnalyzerConfigs
      language: CSharp
      name:
        CSharp: AnalyzerConfigs
        VB: AnalyzerConfigs
      nameWithType:
        CSharp: TrackConfig.AnalyzerConfigs
        VB: TrackConfig.AnalyzerConfigs
      qualifiedName:
        CSharp: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.AnalyzerConfigs
        VB: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.AnalyzerConfigs
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis.AudioAnalyzerConfigs
      source:
        id: AnalyzerConfigs
        path: ''
        startLine: 343
      syntax:
        content:
          CSharp: public List<AnalyzerBandConfig> AnalyzerConfigs { get; }
          VB: Public ReadOnly Property AnalyzerConfigs As List(Of AnalyzerBandConfig)
        parameters: []
        return:
          type: System.Collections.Generic.List{Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig}
      overload: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.AnalyzerConfigs*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.Bands
      commentId: P:Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.Bands
      language: CSharp
      name:
        CSharp: Bands
        VB: Bands
      nameWithType:
        CSharp: TrackConfig.Bands
        VB: TrackConfig.Bands
      qualifiedName:
        CSharp: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.Bands
        VB: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.Bands
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis.AudioAnalyzerConfigs
      source:
        id: Bands
        path: ''
        startLine: 344
      syntax:
        content:
          CSharp: public int Bands { get; }
          VB: Public ReadOnly Property Bands As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.Bands*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.ClipSampleRate
      commentId: P:Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.ClipSampleRate
      language: CSharp
      name:
        CSharp: ClipSampleRate
        VB: ClipSampleRate
      nameWithType:
        CSharp: TrackConfig.ClipSampleRate
        VB: TrackConfig.ClipSampleRate
      qualifiedName:
        CSharp: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.ClipSampleRate
        VB: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.ClipSampleRate
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis.AudioAnalyzerConfigs
      source:
        id: ClipSampleRate
        path: ''
        startLine: 345
      syntax:
        content:
          CSharp: public int ClipSampleRate { get; }
          VB: Public ReadOnly Property ClipSampleRate As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.ClipSampleRate*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.TrackName
      commentId: P:Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.TrackName
      language: CSharp
      name:
        CSharp: TrackName
        VB: TrackName
      nameWithType:
        CSharp: TrackConfig.TrackName
        VB: TrackConfig.TrackName
      qualifiedName:
        CSharp: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.TrackName
        VB: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.TrackName
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis.AudioAnalyzerConfigs
      source:
        id: TrackName
        path: ''
        startLine: 346
      syntax:
        content:
          CSharp: public string TrackName { get; }
          VB: Public ReadOnly Property TrackName As String
        parameters: []
        return:
          type: System.String
      overload: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.TrackName*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig
    commentId: T:Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig
    language: CSharp
    name:
      CSharp: AnalyzerBandConfig
      VB: AnalyzerBandConfig
    nameWithType:
      CSharp: AnalyzerBandConfig
      VB: AnalyzerBandConfig
    qualifiedName:
      CSharp: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig
      VB: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Audio.AudioAnalysis.AudioAnalyzerConfigs
    source:
      id: AnalyzerBandConfig
      path: ''
      startLine: 419
    example: []
    syntax:
      content:
        CSharp: public class AnalyzerBandConfig
        VB: Public Class AnalyzerBandConfig
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.Band
      commentId: P:Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.Band
      language: CSharp
      name:
        CSharp: Band
        VB: Band
      nameWithType:
        CSharp: AnalyzerBandConfig.Band
        VB: AnalyzerBandConfig.Band
      qualifiedName:
        CSharp: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.Band
        VB: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.Band
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis.AudioAnalyzerConfigs
      source:
        id: Band
        path: ''
        startLine: 421
      syntax:
        content:
          CSharp: public int Band { get; set; }
          VB: Public Property Band As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.Band*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartIndex
      commentId: P:Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartIndex
      language: CSharp
      name:
        CSharp: StartIndex
        VB: StartIndex
      nameWithType:
        CSharp: AnalyzerBandConfig.StartIndex
        VB: AnalyzerBandConfig.StartIndex
      qualifiedName:
        CSharp: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartIndex
        VB: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartIndex
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis.AudioAnalyzerConfigs
      source:
        id: StartIndex
        path: ''
        startLine: 422
      syntax:
        content:
          CSharp: public int StartIndex { get; set; }
          VB: Public Property StartIndex As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartIndex*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndIndex
      commentId: P:Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndIndex
      language: CSharp
      name:
        CSharp: EndIndex
        VB: EndIndex
      nameWithType:
        CSharp: AnalyzerBandConfig.EndIndex
        VB: AnalyzerBandConfig.EndIndex
      qualifiedName:
        CSharp: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndIndex
        VB: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndIndex
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis.AudioAnalyzerConfigs
      source:
        id: EndIndex
        path: ''
        startLine: 423
      syntax:
        content:
          CSharp: public int EndIndex { get; set; }
          VB: Public Property EndIndex As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndIndex*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.ThresholdSize
      commentId: P:Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.ThresholdSize
      language: CSharp
      name:
        CSharp: ThresholdSize
        VB: ThresholdSize
      nameWithType:
        CSharp: AnalyzerBandConfig.ThresholdSize
        VB: AnalyzerBandConfig.ThresholdSize
      qualifiedName:
        CSharp: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.ThresholdSize
        VB: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.ThresholdSize
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis.AudioAnalyzerConfigs
      source:
        id: ThresholdSize
        path: ''
        startLine: 424
      syntax:
        content:
          CSharp: public int ThresholdSize { get; set; }
          VB: Public Property ThresholdSize As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.ThresholdSize*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.BeatBlockCounter
      commentId: P:Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.BeatBlockCounter
      language: CSharp
      name:
        CSharp: BeatBlockCounter
        VB: BeatBlockCounter
      nameWithType:
        CSharp: AnalyzerBandConfig.BeatBlockCounter
        VB: AnalyzerBandConfig.BeatBlockCounter
      qualifiedName:
        CSharp: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.BeatBlockCounter
        VB: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.BeatBlockCounter
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis.AudioAnalyzerConfigs
      source:
        id: BeatBlockCounter
        path: ''
        startLine: 425
      syntax:
        content:
          CSharp: public int BeatBlockCounter { get; set; }
          VB: Public Property BeatBlockCounter As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.BeatBlockCounter*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartFrequency
      commentId: P:Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartFrequency
      language: CSharp
      name:
        CSharp: StartFrequency
        VB: StartFrequency
      nameWithType:
        CSharp: AnalyzerBandConfig.StartFrequency
        VB: AnalyzerBandConfig.StartFrequency
      qualifiedName:
        CSharp: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartFrequency
        VB: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartFrequency
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis.AudioAnalyzerConfigs
      source:
        id: StartFrequency
        path: ''
        startLine: 426
      syntax:
        content:
          CSharp: public float StartFrequency { get; set; }
          VB: Public Property StartFrequency As Single
        parameters: []
        return:
          type: System.Single
      overload: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartFrequency*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndFrequency
      commentId: P:Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndFrequency
      language: CSharp
      name:
        CSharp: EndFrequency
        VB: EndFrequency
      nameWithType:
        CSharp: AnalyzerBandConfig.EndFrequency
        VB: AnalyzerBandConfig.EndFrequency
      qualifiedName:
        CSharp: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndFrequency
        VB: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndFrequency
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis.AudioAnalyzerConfigs
      source:
        id: EndFrequency
        path: ''
        startLine: 427
      syntax:
        content:
          CSharp: public float EndFrequency { get; set; }
          VB: Public Property EndFrequency As Single
        parameters: []
        return:
          type: System.Single
      overload: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndFrequency*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.TresholdMult
      commentId: P:Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.TresholdMult
      language: CSharp
      name:
        CSharp: TresholdMult
        VB: TresholdMult
      nameWithType:
        CSharp: AnalyzerBandConfig.TresholdMult
        VB: AnalyzerBandConfig.TresholdMult
      qualifiedName:
        CSharp: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.TresholdMult
        VB: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.TresholdMult
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis.AudioAnalyzerConfigs
      source:
        id: TresholdMult
        path: ''
        startLine: 428
      syntax:
        content:
          CSharp: public float TresholdMult { get; set; }
          VB: Public Property TresholdMult As Single
        parameters: []
        return:
          type: System.Single
      overload: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.TresholdMult*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
- id: Audio.AudioAnalysis.SpectrumConfigs
  commentId: N:Audio.AudioAnalysis.SpectrumConfigs
  language: CSharp
  name:
    CSharp: Audio.AudioAnalysis.SpectrumConfigs
    VB: Audio.AudioAnalysis.SpectrumConfigs
  nameWithType:
    CSharp: Audio.AudioAnalysis.SpectrumConfigs
    VB: Audio.AudioAnalysis.SpectrumConfigs
  qualifiedName:
    CSharp: Audio.AudioAnalysis.SpectrumConfigs
    VB: Audio.AudioAnalysis.SpectrumConfigs
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig
    commentId: T:Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig
    language: CSharp
    name:
      CSharp: AnalyzedSpectrumConfig
      VB: AnalyzedSpectrumConfig
    nameWithType:
      CSharp: AnalyzedSpectrumConfig
      VB: AnalyzedSpectrumConfig
    qualifiedName:
      CSharp: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig
      VB: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Audio.AudioAnalysis.SpectrumConfigs
    source:
      id: AnalyzedSpectrumConfig
      path: ''
      startLine: 1354
    example: []
    syntax:
      content:
        CSharp: public class AnalyzedSpectrumConfig
        VB: Public Class AnalyzedSpectrumConfig
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Spectrum
      commentId: P:Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Spectrum
      language: CSharp
      name:
        CSharp: Spectrum
        VB: Spectrum
      nameWithType:
        CSharp: AnalyzedSpectrumConfig.Spectrum
        VB: AnalyzedSpectrumConfig.Spectrum
      qualifiedName:
        CSharp: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Spectrum
        VB: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Spectrum
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis.SpectrumConfigs
      source:
        id: Spectrum
        path: ''
        startLine: 1356
      syntax:
        content:
          CSharp: public float[] Spectrum { get; set; }
          VB: Public Property Spectrum As Single()
        parameters: []
        return:
          type: System.Single[]
      overload: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Spectrum*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Time
      commentId: P:Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Time
      language: CSharp
      name:
        CSharp: Time
        VB: Time
      nameWithType:
        CSharp: AnalyzedSpectrumConfig.Time
        VB: AnalyzedSpectrumConfig.Time
      qualifiedName:
        CSharp: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Time
        VB: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Time
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis.SpectrumConfigs
      source:
        id: Time
        path: ''
        startLine: 1357
      syntax:
        content:
          CSharp: public float Time { get; set; }
          VB: Public Property Time As Single
        parameters: []
        return:
          type: System.Single
      overload: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Time*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.HasPeak
      commentId: P:Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.HasPeak
      language: CSharp
      name:
        CSharp: HasPeak
        VB: HasPeak
      nameWithType:
        CSharp: AnalyzedSpectrumConfig.HasPeak
        VB: AnalyzedSpectrumConfig.HasPeak
      qualifiedName:
        CSharp: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.HasPeak
        VB: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.HasPeak
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis.SpectrumConfigs
      source:
        id: HasPeak
        path: ''
        startLine: 1358
      syntax:
        content:
          CSharp: public bool HasPeak { get; set; }
          VB: Public Property HasPeak As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.HasPeak*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.PeakBands
      commentId: P:Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.PeakBands
      language: CSharp
      name:
        CSharp: PeakBands
        VB: PeakBands
      nameWithType:
        CSharp: AnalyzedSpectrumConfig.PeakBands
        VB: AnalyzedSpectrumConfig.PeakBands
      qualifiedName:
        CSharp: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.PeakBands
        VB: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.PeakBands
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis.SpectrumConfigs
      source:
        id: PeakBands
        path: ''
        startLine: 1359
      syntax:
        content:
          CSharp: public List<int> PeakBands { get; set; }
          VB: Public Property PeakBands As List(Of Integer)
        parameters: []
        return:
          type: System.Collections.Generic.List{System.Int32}
      overload: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.PeakBands*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.BandBeatData
      commentId: P:Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.BandBeatData
      language: CSharp
      name:
        CSharp: BandBeatData
        VB: BandBeatData
      nameWithType:
        CSharp: AnalyzedSpectrumConfig.BandBeatData
        VB: AnalyzedSpectrumConfig.BandBeatData
      qualifiedName:
        CSharp: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.BandBeatData
        VB: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.BandBeatData
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis.SpectrumConfigs
      source:
        id: BandBeatData
        path: ''
        startLine: 1360
      syntax:
        content:
          CSharp: public List<BeatConfig> BandBeatData { get; set; }
          VB: Public Property BandBeatData As List(Of BeatConfig)
        parameters: []
        return:
          type: System.Collections.Generic.List{Audio.AudioAnalysis.SpectrumConfigs.BeatConfig}
      overload: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.BandBeatData*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig
    commentId: T:Audio.AudioAnalysis.SpectrumConfigs.BeatConfig
    language: CSharp
    name:
      CSharp: BeatConfig
      VB: BeatConfig
    nameWithType:
      CSharp: BeatConfig
      VB: BeatConfig
    qualifiedName:
      CSharp: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig
      VB: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Audio.AudioAnalysis.SpectrumConfigs
    source:
      id: BeatConfig
      path: ''
      startLine: 1366
    example: []
    syntax:
      content:
        CSharp: public class BeatConfig
        VB: Public Class BeatConfig
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.SpectralFlux
      commentId: P:Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.SpectralFlux
      language: CSharp
      name:
        CSharp: SpectralFlux
        VB: SpectralFlux
      nameWithType:
        CSharp: BeatConfig.SpectralFlux
        VB: BeatConfig.SpectralFlux
      qualifiedName:
        CSharp: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.SpectralFlux
        VB: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.SpectralFlux
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis.SpectrumConfigs
      source:
        id: SpectralFlux
        path: ''
        startLine: 1368
      syntax:
        content:
          CSharp: public float SpectralFlux { get; set; }
          VB: Public Property SpectralFlux As Single
        parameters: []
        return:
          type: System.Single
      overload: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.SpectralFlux*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.Threshold
      commentId: P:Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.Threshold
      language: CSharp
      name:
        CSharp: Threshold
        VB: Threshold
      nameWithType:
        CSharp: BeatConfig.Threshold
        VB: BeatConfig.Threshold
      qualifiedName:
        CSharp: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.Threshold
        VB: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.Threshold
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis.SpectrumConfigs
      source:
        id: Threshold
        path: ''
        startLine: 1369
      syntax:
        content:
          CSharp: public float Threshold { get; set; }
          VB: Public Property Threshold As Single
        parameters: []
        return:
          type: System.Single
      overload: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.Threshold*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.PrunedSpectralFlux
      commentId: P:Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.PrunedSpectralFlux
      language: CSharp
      name:
        CSharp: PrunedSpectralFlux
        VB: PrunedSpectralFlux
      nameWithType:
        CSharp: BeatConfig.PrunedSpectralFlux
        VB: BeatConfig.PrunedSpectralFlux
      qualifiedName:
        CSharp: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.PrunedSpectralFlux
        VB: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.PrunedSpectralFlux
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis.SpectrumConfigs
      source:
        id: PrunedSpectralFlux
        path: ''
        startLine: 1370
      syntax:
        content:
          CSharp: public float PrunedSpectralFlux { get; set; }
          VB: Public Property PrunedSpectralFlux As Single
        parameters: []
        return:
          type: System.Single
      overload: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.PrunedSpectralFlux*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.Band
      commentId: P:Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.Band
      language: CSharp
      name:
        CSharp: Band
        VB: Band
      nameWithType:
        CSharp: BeatConfig.Band
        VB: BeatConfig.Band
      qualifiedName:
        CSharp: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.Band
        VB: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.Band
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis.SpectrumConfigs
      source:
        id: Band
        path: ''
        startLine: 1371
      syntax:
        content:
          CSharp: public float Band { get; set; }
          VB: Public Property Band As Single
        parameters: []
        return:
          type: System.Single
      overload: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.Band*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.PeakBPM
      commentId: P:Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.PeakBPM
      language: CSharp
      name:
        CSharp: PeakBPM
        VB: PeakBPM
      nameWithType:
        CSharp: BeatConfig.PeakBPM
        VB: BeatConfig.PeakBPM
      qualifiedName:
        CSharp: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.PeakBPM
        VB: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.PeakBPM
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis.SpectrumConfigs
      source:
        id: PeakBPM
        path: ''
        startLine: 1372
      syntax:
        content:
          CSharp: public float PeakBPM { get; set; }
          VB: Public Property PeakBPM As Single
        parameters: []
        return:
          type: System.Single
      overload: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.PeakBPM*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.IsPeak
      commentId: P:Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.IsPeak
      language: CSharp
      name:
        CSharp: IsPeak
        VB: IsPeak
      nameWithType:
        CSharp: BeatConfig.IsPeak
        VB: BeatConfig.IsPeak
      qualifiedName:
        CSharp: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.IsPeak
        VB: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.IsPeak
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioAnalysis.SpectrumConfigs
      source:
        id: IsPeak
        path: ''
        startLine: 1373
      syntax:
        content:
          CSharp: public bool IsPeak { get; set; }
          VB: Public Property IsPeak As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.IsPeak*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
- id: Audio.AudioProviders
  commentId: N:Audio.AudioProviders
  language: CSharp
  name:
    CSharp: Audio.AudioProviders
    VB: Audio.AudioProviders
  nameWithType:
    CSharp: Audio.AudioProviders
    VB: Audio.AudioProviders
  qualifiedName:
    CSharp: Audio.AudioProviders
    VB: Audio.AudioProviders
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Audio.AudioProviders.AudioSampleProvider
    commentId: T:Audio.AudioProviders.AudioSampleProvider
    language: CSharp
    name:
      CSharp: AudioSampleProvider
      VB: AudioSampleProvider
    nameWithType:
      CSharp: AudioSampleProvider
      VB: AudioSampleProvider
    qualifiedName:
      CSharp: Audio.AudioProviders.AudioSampleProvider
      VB: Audio.AudioProviders.AudioSampleProvider
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Audio.AudioProviders
    source:
      id: AudioSampleProvider
      path: ''
      startLine: 1392
    syntax:
      content:
        CSharp: public static class AudioSampleProvider
        VB: Public Module AudioSampleProvider
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Audio.AudioProviders.AudioSampleProvider.getSamples(AudioClip)
      commentId: M:Audio.AudioProviders.AudioSampleProvider.getSamples(AudioClip)
      language: CSharp
      name:
        CSharp: getSamples(AudioClip)
        VB: getSamples(AudioClip)
      nameWithType:
        CSharp: AudioSampleProvider.getSamples(AudioClip)
        VB: AudioSampleProvider.getSamples(AudioClip)
      qualifiedName:
        CSharp: Audio.AudioProviders.AudioSampleProvider.getSamples(AudioClip)
        VB: Audio.AudioProviders.AudioSampleProvider.getSamples(AudioClip)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioProviders
      source:
        id: getSamples
        path: ''
        startLine: 1394
      syntax:
        content:
          CSharp: public static float[] getSamples(AudioClip audioClip)
          VB: Public Shared Function getSamples(audioClip As AudioClip) As Single()
        parameters:
        - id: audioClip
          type: AudioClip
        return:
          type: System.Single[]
      overload: Audio.AudioProviders.AudioSampleProvider.getSamples*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Audio.AudioProviders.AudioSampleProvider.getMonoSamples(System.Single[],System.Int32)
      commentId: M:Audio.AudioProviders.AudioSampleProvider.getMonoSamples(System.Single[],System.Int32)
      language: CSharp
      name:
        CSharp: getMonoSamples(Single[], Int32)
        VB: getMonoSamples(Single(), Int32)
      nameWithType:
        CSharp: AudioSampleProvider.getMonoSamples(Single[], Int32)
        VB: AudioSampleProvider.getMonoSamples(Single(), Int32)
      qualifiedName:
        CSharp: Audio.AudioProviders.AudioSampleProvider.getMonoSamples(System.Single[], System.Int32)
        VB: Audio.AudioProviders.AudioSampleProvider.getMonoSamples(System.Single(), System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioProviders
      source:
        id: getMonoSamples
        path: ''
        startLine: 1402
      syntax:
        content:
          CSharp: public static float[] getMonoSamples(float[] stereoSamples, int numChannels)
          VB: Public Shared Function getMonoSamples(stereoSamples As Single(), numChannels As Integer) As Single()
        parameters:
        - id: stereoSamples
          type: System.Single[]
        - id: numChannels
          type: System.Int32
        return:
          type: System.Single[]
      overload: Audio.AudioProviders.AudioSampleProvider.getMonoSamples*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Audio.AudioProviders.Mp3Loader
    commentId: T:Audio.AudioProviders.Mp3Loader
    language: CSharp
    name:
      CSharp: Mp3Loader
      VB: Mp3Loader
    nameWithType:
      CSharp: Mp3Loader
      VB: Mp3Loader
    qualifiedName:
      CSharp: Audio.AudioProviders.Mp3Loader
      VB: Audio.AudioProviders.Mp3Loader
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Audio.AudioProviders
    source:
      id: Mp3Loader
      path: ''
      startLine: 1436
    syntax:
      content:
        CSharp: public static class Mp3Loader
        VB: Public Module Mp3Loader
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Audio.AudioProviders.Mp3Loader.LoadMp3(System.String)
      commentId: M:Audio.AudioProviders.Mp3Loader.LoadMp3(System.String)
      language: CSharp
      name:
        CSharp: LoadMp3(String)
        VB: LoadMp3(String)
      nameWithType:
        CSharp: Mp3Loader.LoadMp3(String)
        VB: Mp3Loader.LoadMp3(String)
      qualifiedName:
        CSharp: Audio.AudioProviders.Mp3Loader.LoadMp3(System.String)
        VB: Audio.AudioProviders.Mp3Loader.LoadMp3(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioProviders
      source:
        id: LoadMp3
        path: ''
        startLine: 1441
      syntax:
        content:
          CSharp: public static AudioClip LoadMp3(string filePath)
          VB: Public Shared Function LoadMp3(filePath As String) As AudioClip
        parameters:
        - id: filePath
          type: System.String
        return:
          type: AudioClip
      overload: Audio.AudioProviders.Mp3Loader.LoadMp3*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Audio.AudioProviders.SpectrumProvider
    commentId: T:Audio.AudioProviders.SpectrumProvider
    language: CSharp
    name:
      CSharp: SpectrumProvider
      VB: SpectrumProvider
    nameWithType:
      CSharp: SpectrumProvider
      VB: SpectrumProvider
    qualifiedName:
      CSharp: Audio.AudioProviders.SpectrumProvider
      VB: Audio.AudioProviders.SpectrumProvider
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Audio.AudioProviders
    source:
      id: SpectrumProvider
      path: ''
      startLine: 1490
    syntax:
      content:
        CSharp: public class SpectrumProvider
        VB: Public Class SpectrumProvider
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Audio.AudioProviders.SpectrumProvider.SAMPLE_SIZE
      commentId: F:Audio.AudioProviders.SpectrumProvider.SAMPLE_SIZE
      language: CSharp
      name:
        CSharp: SAMPLE_SIZE
        VB: SAMPLE_SIZE
      nameWithType:
        CSharp: SpectrumProvider.SAMPLE_SIZE
        VB: SpectrumProvider.SAMPLE_SIZE
      qualifiedName:
        CSharp: Audio.AudioProviders.SpectrumProvider.SAMPLE_SIZE
        VB: Audio.AudioProviders.SpectrumProvider.SAMPLE_SIZE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioProviders
      source:
        id: SAMPLE_SIZE
        path: ''
        startLine: 1492
      syntax:
        content:
          CSharp: public const int SAMPLE_SIZE = 1024
          VB: Public Const SAMPLE_SIZE As Integer = 1024
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.AudioProviders.SpectrumProvider.NUM_BINS
      commentId: F:Audio.AudioProviders.SpectrumProvider.NUM_BINS
      language: CSharp
      name:
        CSharp: NUM_BINS
        VB: NUM_BINS
      nameWithType:
        CSharp: SpectrumProvider.NUM_BINS
        VB: SpectrumProvider.NUM_BINS
      qualifiedName:
        CSharp: Audio.AudioProviders.SpectrumProvider.NUM_BINS
        VB: Audio.AudioProviders.SpectrumProvider.NUM_BINS
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioProviders
      source:
        id: NUM_BINS
        path: ''
        startLine: 1493
      syntax:
        content:
          CSharp: public const int NUM_BINS = 513
          VB: Public Const NUM_BINS As Integer = 513
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.AudioProviders.SpectrumProvider.#ctor(System.Int32)
      commentId: M:Audio.AudioProviders.SpectrumProvider.#ctor(System.Int32)
      language: CSharp
      name:
        CSharp: SpectrumProvider(Int32)
        VB: SpectrumProvider(Int32)
      nameWithType:
        CSharp: SpectrumProvider.SpectrumProvider(Int32)
        VB: SpectrumProvider.SpectrumProvider(Int32)
      qualifiedName:
        CSharp: Audio.AudioProviders.SpectrumProvider.SpectrumProvider(System.Int32)
        VB: Audio.AudioProviders.SpectrumProvider.SpectrumProvider(System.Int32)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioProviders
      source:
        id: .ctor
        path: ''
        startLine: 1498
      syntax:
        content:
          CSharp: public SpectrumProvider(int audioClipSampleRate)
          VB: Public Sub New(audioClipSampleRate As Integer)
        parameters:
        - id: audioClipSampleRate
          type: System.Int32
      overload: Audio.AudioProviders.SpectrumProvider.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Audio.AudioProviders.SpectrumProvider.getSpectrums(System.Single[])
      commentId: M:Audio.AudioProviders.SpectrumProvider.getSpectrums(System.Single[])
      language: CSharp
      name:
        CSharp: getSpectrums(Single[])
        VB: getSpectrums(Single())
      nameWithType:
        CSharp: SpectrumProvider.getSpectrums(Single[])
        VB: SpectrumProvider.getSpectrums(Single())
      qualifiedName:
        CSharp: Audio.AudioProviders.SpectrumProvider.getSpectrums(System.Single[])
        VB: Audio.AudioProviders.SpectrumProvider.getSpectrums(System.Single())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioProviders
      source:
        id: getSpectrums
        path: ''
        startLine: 1506
      syntax:
        content:
          CSharp: public List<double[]> getSpectrums(float[] monoSamples)
          VB: Public Function getSpectrums(monoSamples As Single()) As List(Of Double())
        parameters:
        - id: monoSamples
          type: System.Single[]
        return:
          type: System.Collections.Generic.List{System.Double[]}
      overload: Audio.AudioProviders.SpectrumProvider.getSpectrums*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Audio.AudioProviders.SpectrumProvider.getSpectrumConfigs(System.Collections.Generic.List{System.Double[]},System.Int32)
      commentId: M:Audio.AudioProviders.SpectrumProvider.getSpectrumConfigs(System.Collections.Generic.List{System.Double[]},System.Int32)
      language: CSharp
      name:
        CSharp: getSpectrumConfigs(List<Double[]>, Int32)
        VB: getSpectrumConfigs(List(Of Double()), Int32)
      nameWithType:
        CSharp: SpectrumProvider.getSpectrumConfigs(List<Double[]>, Int32)
        VB: SpectrumProvider.getSpectrumConfigs(List(Of Double()), Int32)
      qualifiedName:
        CSharp: Audio.AudioProviders.SpectrumProvider.getSpectrumConfigs(System.Collections.Generic.List<System.Double[]>, System.Int32)
        VB: Audio.AudioProviders.SpectrumProvider.getSpectrumConfigs(System.Collections.Generic.List(Of System.Double()), System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Audio.AudioProviders
      source:
        id: getSpectrumConfigs
        path: ''
        startLine: 1549
      syntax:
        content:
          CSharp: public List<AnalyzedSpectrumConfig> getSpectrumConfigs(List<double[]> spectrums, int bands)
          VB: Public Function getSpectrumConfigs(spectrums As List(Of Double()), bands As Integer) As List(Of AnalyzedSpectrumConfig)
        parameters:
        - id: spectrums
          type: System.Collections.Generic.List{System.Double[]}
        - id: bands
          type: System.Int32
        return:
          type: System.Collections.Generic.List{Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig}
      overload: Audio.AudioProviders.SpectrumProvider.getSpectrumConfigs*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: SpinnerLightEffects
  commentId: N:SpinnerLightEffects
  language: CSharp
  name:
    CSharp: SpinnerLightEffects
    VB: SpinnerLightEffects
  nameWithType:
    CSharp: SpinnerLightEffects
    VB: SpinnerLightEffects
  qualifiedName:
    CSharp: SpinnerLightEffects
    VB: SpinnerLightEffects
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: SpinnerLightEffects.BaseSpinnerLightEffectHandler
    commentId: T:SpinnerLightEffects.BaseSpinnerLightEffectHandler
    language: CSharp
    name:
      CSharp: BaseSpinnerLightEffectHandler
      VB: BaseSpinnerLightEffectHandler
    nameWithType:
      CSharp: BaseSpinnerLightEffectHandler
      VB: BaseSpinnerLightEffectHandler
    qualifiedName:
      CSharp: SpinnerLightEffects.BaseSpinnerLightEffectHandler
      VB: SpinnerLightEffects.BaseSpinnerLightEffectHandler
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SpinnerLightEffects
    source:
      id: BaseSpinnerLightEffectHandler
      path: ''
      startLine: 2096
    example: []
    syntax:
      content:
        CSharp: public class BaseSpinnerLightEffectHandler
        VB: Public Class BaseSpinnerLightEffectHandler
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SpinnerLightEffects.BaseSpinnerLightEffectHandler._isDone
      commentId: F:SpinnerLightEffects.BaseSpinnerLightEffectHandler._isDone
      language: CSharp
      name:
        CSharp: _isDone
        VB: _isDone
      nameWithType:
        CSharp: BaseSpinnerLightEffectHandler._isDone
        VB: BaseSpinnerLightEffectHandler._isDone
      qualifiedName:
        CSharp: SpinnerLightEffects.BaseSpinnerLightEffectHandler._isDone
        VB: SpinnerLightEffects.BaseSpinnerLightEffectHandler._isDone
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SpinnerLightEffects
      source:
        id: _isDone
        path: ''
        startLine: 2098
      syntax:
        content:
          CSharp: protected bool _isDone
          VB: Protected _isDone As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone
      commentId: M:SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone
      language: CSharp
      name:
        CSharp: isDone()
        VB: isDone()
      nameWithType:
        CSharp: BaseSpinnerLightEffectHandler.isDone()
        VB: BaseSpinnerLightEffectHandler.isDone()
      qualifiedName:
        CSharp: SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone()
        VB: SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SpinnerLightEffects
      source:
        id: isDone
        path: ''
        startLine: 2100
      syntax:
        content:
          CSharp: public bool isDone()
          VB: Public Function isDone As Boolean
        return:
          type: System.Boolean
      overload: SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SpinnerLightEffects.BaseSpinnerLightEffectHandler.update
      commentId: M:SpinnerLightEffects.BaseSpinnerLightEffectHandler.update
      language: CSharp
      name:
        CSharp: update()
        VB: update()
      nameWithType:
        CSharp: BaseSpinnerLightEffectHandler.update()
        VB: BaseSpinnerLightEffectHandler.update()
      qualifiedName:
        CSharp: SpinnerLightEffects.BaseSpinnerLightEffectHandler.update()
        VB: SpinnerLightEffects.BaseSpinnerLightEffectHandler.update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SpinnerLightEffects
      source:
        id: update
        path: ''
        startLine: 2105
      syntax:
        content:
          CSharp: public virtual void update()
          VB: Public Overridable Sub update
      overload: SpinnerLightEffects.BaseSpinnerLightEffectHandler.update*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler
    commentId: T:SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler
    language: CSharp
    name:
      CSharp: FrontBackTransitionSpinnerLightEffectHandler
      VB: FrontBackTransitionSpinnerLightEffectHandler
    nameWithType:
      CSharp: FrontBackTransitionSpinnerLightEffectHandler
      VB: FrontBackTransitionSpinnerLightEffectHandler
    qualifiedName:
      CSharp: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler
      VB: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SpinnerLightEffects
    source:
      id: FrontBackTransitionSpinnerLightEffectHandler
      path: ''
      startLine: 2116
    example: []
    syntax:
      content:
        CSharp: 'public class FrontBackTransitionSpinnerLightEffectHandler : BaseSpinnerLightEffectHandler'
        VB: >-
          Public Class FrontBackTransitionSpinnerLightEffectHandler

              Inherits BaseSpinnerLightEffectHandler
    inheritance:
    - System.Object
    - SpinnerLightEffects.BaseSpinnerLightEffectHandler
    inheritedMembers:
    - SpinnerLightEffects.BaseSpinnerLightEffectHandler._isDone
    - SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.TRANSITION_DIRECTION_FRONT_TO_BACK
      commentId: F:SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.TRANSITION_DIRECTION_FRONT_TO_BACK
      language: CSharp
      name:
        CSharp: TRANSITION_DIRECTION_FRONT_TO_BACK
        VB: TRANSITION_DIRECTION_FRONT_TO_BACK
      nameWithType:
        CSharp: FrontBackTransitionSpinnerLightEffectHandler.TRANSITION_DIRECTION_FRONT_TO_BACK
        VB: FrontBackTransitionSpinnerLightEffectHandler.TRANSITION_DIRECTION_FRONT_TO_BACK
      qualifiedName:
        CSharp: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.TRANSITION_DIRECTION_FRONT_TO_BACK
        VB: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.TRANSITION_DIRECTION_FRONT_TO_BACK
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SpinnerLightEffects
      source:
        id: TRANSITION_DIRECTION_FRONT_TO_BACK
        path: ''
        startLine: 2118
      syntax:
        content:
          CSharp: public const string TRANSITION_DIRECTION_FRONT_TO_BACK = "TRANSITION_DIRECTION_FRONT_TO_BACK"
          VB: Public Const TRANSITION_DIRECTION_FRONT_TO_BACK As String = "TRANSITION_DIRECTION_FRONT_TO_BACK"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.TRANSITION_DIRECTION_BACK_TO_FRONT
      commentId: F:SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.TRANSITION_DIRECTION_BACK_TO_FRONT
      language: CSharp
      name:
        CSharp: TRANSITION_DIRECTION_BACK_TO_FRONT
        VB: TRANSITION_DIRECTION_BACK_TO_FRONT
      nameWithType:
        CSharp: FrontBackTransitionSpinnerLightEffectHandler.TRANSITION_DIRECTION_BACK_TO_FRONT
        VB: FrontBackTransitionSpinnerLightEffectHandler.TRANSITION_DIRECTION_BACK_TO_FRONT
      qualifiedName:
        CSharp: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.TRANSITION_DIRECTION_BACK_TO_FRONT
        VB: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.TRANSITION_DIRECTION_BACK_TO_FRONT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SpinnerLightEffects
      source:
        id: TRANSITION_DIRECTION_BACK_TO_FRONT
        path: ''
        startLine: 2119
      syntax:
        content:
          CSharp: public const string TRANSITION_DIRECTION_BACK_TO_FRONT = "TRANSITION_DIRECTION_BACK_TO_FRONT"
          VB: Public Const TRANSITION_DIRECTION_BACK_TO_FRONT As String = "TRANSITION_DIRECTION_BACK_TO_FRONT"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.TYPE_VERTICAL
      commentId: F:SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.TYPE_VERTICAL
      language: CSharp
      name:
        CSharp: TYPE_VERTICAL
        VB: TYPE_VERTICAL
      nameWithType:
        CSharp: FrontBackTransitionSpinnerLightEffectHandler.TYPE_VERTICAL
        VB: FrontBackTransitionSpinnerLightEffectHandler.TYPE_VERTICAL
      qualifiedName:
        CSharp: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.TYPE_VERTICAL
        VB: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.TYPE_VERTICAL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SpinnerLightEffects
      source:
        id: TYPE_VERTICAL
        path: ''
        startLine: 2120
      syntax:
        content:
          CSharp: public const string TYPE_VERTICAL = "TYPE_VERTICAL"
          VB: Public Const TYPE_VERTICAL As String = "TYPE_VERTICAL"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.TYPE_HORIZONTAL
      commentId: F:SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.TYPE_HORIZONTAL
      language: CSharp
      name:
        CSharp: TYPE_HORIZONTAL
        VB: TYPE_HORIZONTAL
      nameWithType:
        CSharp: FrontBackTransitionSpinnerLightEffectHandler.TYPE_HORIZONTAL
        VB: FrontBackTransitionSpinnerLightEffectHandler.TYPE_HORIZONTAL
      qualifiedName:
        CSharp: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.TYPE_HORIZONTAL
        VB: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.TYPE_HORIZONTAL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SpinnerLightEffects
      source:
        id: TYPE_HORIZONTAL
        path: ''
        startLine: 2121
      syntax:
        content:
          CSharp: public const string TYPE_HORIZONTAL = "TYPE_HORIZONTAL"
          VB: Public Const TYPE_HORIZONTAL As String = "TYPE_HORIZONTAL"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.LIGHT_TRANSITION_TIME
      commentId: F:SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.LIGHT_TRANSITION_TIME
      language: CSharp
      name:
        CSharp: LIGHT_TRANSITION_TIME
        VB: LIGHT_TRANSITION_TIME
      nameWithType:
        CSharp: FrontBackTransitionSpinnerLightEffectHandler.LIGHT_TRANSITION_TIME
        VB: FrontBackTransitionSpinnerLightEffectHandler.LIGHT_TRANSITION_TIME
      qualifiedName:
        CSharp: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.LIGHT_TRANSITION_TIME
        VB: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.LIGHT_TRANSITION_TIME
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SpinnerLightEffects
      source:
        id: LIGHT_TRANSITION_TIME
        path: ''
        startLine: 2123
      syntax:
        content:
          CSharp: public const int LIGHT_TRANSITION_TIME = 5
          VB: Public Const LIGHT_TRANSITION_TIME As Integer = 5
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.#ctor(System.Collections.Generic.List{SpinnerLight},System.String,System.String,System.Int32,System.Int32,System.Int32)
      commentId: M:SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.#ctor(System.Collections.Generic.List{SpinnerLight},System.String,System.String,System.Int32,System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: FrontBackTransitionSpinnerLightEffectHandler(List<SpinnerLight>, String, String, Int32, Int32, Int32)
        VB: FrontBackTransitionSpinnerLightEffectHandler(List(Of SpinnerLight), String, String, Int32, Int32, Int32)
      nameWithType:
        CSharp: FrontBackTransitionSpinnerLightEffectHandler.FrontBackTransitionSpinnerLightEffectHandler(List<SpinnerLight>, String, String, Int32, Int32, Int32)
        VB: FrontBackTransitionSpinnerLightEffectHandler.FrontBackTransitionSpinnerLightEffectHandler(List(Of SpinnerLight), String, String, Int32, Int32, Int32)
      qualifiedName:
        CSharp: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.FrontBackTransitionSpinnerLightEffectHandler(System.Collections.Generic.List<SpinnerLight>, System.String, System.String, System.Int32, System.Int32, System.Int32)
        VB: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.FrontBackTransitionSpinnerLightEffectHandler(System.Collections.Generic.List(Of SpinnerLight), System.String, System.String, System.Int32, System.Int32, System.Int32)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: SpinnerLightEffects
      source:
        id: .ctor
        path: ''
        startLine: 2134
      syntax:
        content:
          CSharp: public FrontBackTransitionSpinnerLightEffectHandler(List<SpinnerLight> spinners, string horizontalVertical, string direction, int flashDuration, int startDelay, int currentTransitionCounter)
          VB: Public Sub New(spinners As List(Of SpinnerLight), horizontalVertical As String, direction As String, flashDuration As Integer, startDelay As Integer, currentTransitionCounter As Integer)
        parameters:
        - id: spinners
          type: System.Collections.Generic.List{SpinnerLight}
        - id: horizontalVertical
          type: System.String
        - id: direction
          type: System.String
        - id: flashDuration
          type: System.Int32
        - id: startDelay
          type: System.Int32
        - id: currentTransitionCounter
          type: System.Int32
      overload: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.update
      commentId: M:SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.update
      language: CSharp
      name:
        CSharp: update()
        VB: update()
      nameWithType:
        CSharp: FrontBackTransitionSpinnerLightEffectHandler.update()
        VB: FrontBackTransitionSpinnerLightEffectHandler.update()
      qualifiedName:
        CSharp: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.update()
        VB: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SpinnerLightEffects
      source:
        id: update
        path: ''
        startLine: 2157
      syntax:
        content:
          CSharp: public override void update()
          VB: Public Overrides Sub update
      overload: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.update*
      overridden: SpinnerLightEffects.BaseSpinnerLightEffectHandler.update
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler
    commentId: T:SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler
    language: CSharp
    name:
      CSharp: BlinkAllSpinnerLightEffectHandler
      VB: BlinkAllSpinnerLightEffectHandler
    nameWithType:
      CSharp: BlinkAllSpinnerLightEffectHandler
      VB: BlinkAllSpinnerLightEffectHandler
    qualifiedName:
      CSharp: SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler
      VB: SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SpinnerLightEffects
    source:
      id: BlinkAllSpinnerLightEffectHandler
      path: ''
      startLine: 2191
    example: []
    syntax:
      content:
        CSharp: 'public class BlinkAllSpinnerLightEffectHandler : BaseSpinnerLightEffectHandler'
        VB: >-
          Public Class BlinkAllSpinnerLightEffectHandler

              Inherits BaseSpinnerLightEffectHandler
    inheritance:
    - System.Object
    - SpinnerLightEffects.BaseSpinnerLightEffectHandler
    inheritedMembers:
    - SpinnerLightEffects.BaseSpinnerLightEffectHandler._isDone
    - SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.TYPE_VERTICAL
      commentId: F:SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.TYPE_VERTICAL
      language: CSharp
      name:
        CSharp: TYPE_VERTICAL
        VB: TYPE_VERTICAL
      nameWithType:
        CSharp: BlinkAllSpinnerLightEffectHandler.TYPE_VERTICAL
        VB: BlinkAllSpinnerLightEffectHandler.TYPE_VERTICAL
      qualifiedName:
        CSharp: SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.TYPE_VERTICAL
        VB: SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.TYPE_VERTICAL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SpinnerLightEffects
      source:
        id: TYPE_VERTICAL
        path: ''
        startLine: 2193
      syntax:
        content:
          CSharp: public const string TYPE_VERTICAL = "TYPE_VERTICAL"
          VB: Public Const TYPE_VERTICAL As String = "TYPE_VERTICAL"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.TYPE_HORIZONTAL
      commentId: F:SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.TYPE_HORIZONTAL
      language: CSharp
      name:
        CSharp: TYPE_HORIZONTAL
        VB: TYPE_HORIZONTAL
      nameWithType:
        CSharp: BlinkAllSpinnerLightEffectHandler.TYPE_HORIZONTAL
        VB: BlinkAllSpinnerLightEffectHandler.TYPE_HORIZONTAL
      qualifiedName:
        CSharp: SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.TYPE_HORIZONTAL
        VB: SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.TYPE_HORIZONTAL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SpinnerLightEffects
      source:
        id: TYPE_HORIZONTAL
        path: ''
        startLine: 2194
      syntax:
        content:
          CSharp: public const string TYPE_HORIZONTAL = "TYPE_HORIZONTAL"
          VB: Public Const TYPE_HORIZONTAL As String = "TYPE_HORIZONTAL"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.#ctor(System.Collections.Generic.List{SpinnerLight},System.String,System.Int32)
      commentId: M:SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.#ctor(System.Collections.Generic.List{SpinnerLight},System.String,System.Int32)
      language: CSharp
      name:
        CSharp: BlinkAllSpinnerLightEffectHandler(List<SpinnerLight>, String, Int32)
        VB: BlinkAllSpinnerLightEffectHandler(List(Of SpinnerLight), String, Int32)
      nameWithType:
        CSharp: BlinkAllSpinnerLightEffectHandler.BlinkAllSpinnerLightEffectHandler(List<SpinnerLight>, String, Int32)
        VB: BlinkAllSpinnerLightEffectHandler.BlinkAllSpinnerLightEffectHandler(List(Of SpinnerLight), String, Int32)
      qualifiedName:
        CSharp: SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.BlinkAllSpinnerLightEffectHandler(System.Collections.Generic.List<SpinnerLight>, System.String, System.Int32)
        VB: SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.BlinkAllSpinnerLightEffectHandler(System.Collections.Generic.List(Of SpinnerLight), System.String, System.Int32)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: SpinnerLightEffects
      source:
        id: .ctor
        path: ''
        startLine: 2202
      syntax:
        content:
          CSharp: public BlinkAllSpinnerLightEffectHandler(List<SpinnerLight> spinners, string type, int duration)
          VB: Public Sub New(spinners As List(Of SpinnerLight), type As String, duration As Integer)
        parameters:
        - id: spinners
          type: System.Collections.Generic.List{SpinnerLight}
        - id: type
          type: System.String
        - id: duration
          type: System.Int32
      overload: SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.update
      commentId: M:SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.update
      language: CSharp
      name:
        CSharp: update()
        VB: update()
      nameWithType:
        CSharp: BlinkAllSpinnerLightEffectHandler.update()
        VB: BlinkAllSpinnerLightEffectHandler.update()
      qualifiedName:
        CSharp: SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.update()
        VB: SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SpinnerLightEffects
      source:
        id: update
        path: ''
        startLine: 2211
      syntax:
        content:
          CSharp: public override void update()
          VB: Public Overrides Sub update
      overload: SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.update*
      overridden: SpinnerLightEffects.BaseSpinnerLightEffectHandler.update
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
- id: JsonIOHandler
  commentId: N:JsonIOHandler
  language: CSharp
  name:
    CSharp: JsonIOHandler
    VB: JsonIOHandler
  nameWithType:
    CSharp: JsonIOHandler
    VB: JsonIOHandler
  qualifiedName:
    CSharp: JsonIOHandler
    VB: JsonIOHandler
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: JsonIOHandler.JsonFileWriter
    commentId: T:JsonIOHandler.JsonFileWriter
    language: CSharp
    name:
      CSharp: JsonFileWriter
      VB: JsonFileWriter
    nameWithType:
      CSharp: JsonFileWriter
      VB: JsonFileWriter
    qualifiedName:
      CSharp: JsonIOHandler.JsonFileWriter
      VB: JsonIOHandler.JsonFileWriter
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JsonIOHandler
    source:
      id: JsonFileWriter
      path: ''
      startLine: 3122
    example: []
    syntax:
      content:
        CSharp: public static class JsonFileWriter
        VB: Public Module JsonFileWriter
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: JsonIOHandler.JsonFileWriter.writeFile(System.String,FileInfo)
      commentId: M:JsonIOHandler.JsonFileWriter.writeFile(System.String,FileInfo)
      language: CSharp
      name:
        CSharp: writeFile(String, FileInfo)
        VB: writeFile(String, FileInfo)
      nameWithType:
        CSharp: JsonFileWriter.writeFile(String, FileInfo)
        VB: JsonFileWriter.writeFile(String, FileInfo)
      qualifiedName:
        CSharp: JsonIOHandler.JsonFileWriter.writeFile(System.String, FileInfo)
        VB: JsonIOHandler.JsonFileWriter.writeFile(System.String, FileInfo)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JsonIOHandler
      source:
        id: writeFile
        path: ''
        startLine: 3124
      syntax:
        content:
          CSharp: public static void writeFile(string json, FileInfo fileInfo)
          VB: Public Shared Sub writeFile(json As String, fileInfo As FileInfo)
        parameters:
        - id: json
          type: System.String
        - id: fileInfo
          type: FileInfo
      overload: JsonIOHandler.JsonFileWriter.writeFile*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: JsonIOHandler.JsonFileReader
    commentId: T:JsonIOHandler.JsonFileReader
    language: CSharp
    name:
      CSharp: JsonFileReader
      VB: JsonFileReader
    nameWithType:
      CSharp: JsonFileReader
      VB: JsonFileReader
    qualifiedName:
      CSharp: JsonIOHandler.JsonFileReader
      VB: JsonIOHandler.JsonFileReader
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JsonIOHandler
    source:
      id: JsonFileReader
      path: ''
      startLine: 3146
    example: []
    syntax:
      content:
        CSharp: public static class JsonFileReader
        VB: Public Module JsonFileReader
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: JsonIOHandler.JsonFileReader.readHighscoreFile(System.String)
      commentId: M:JsonIOHandler.JsonFileReader.readHighscoreFile(System.String)
      language: CSharp
      name:
        CSharp: readHighscoreFile(String)
        VB: readHighscoreFile(String)
      nameWithType:
        CSharp: JsonFileReader.readHighscoreFile(String)
        VB: JsonFileReader.readHighscoreFile(String)
      qualifiedName:
        CSharp: JsonIOHandler.JsonFileReader.readHighscoreFile(System.String)
        VB: JsonIOHandler.JsonFileReader.readHighscoreFile(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JsonIOHandler
      source:
        id: readHighscoreFile
        path: ''
        startLine: 3148
      syntax:
        content:
          CSharp: public static List<HighscoreData> readHighscoreFile(string filePath)
          VB: Public Shared Function readHighscoreFile(filePath As String) As List(Of HighscoreData)
        parameters:
        - id: filePath
          type: System.String
        return:
          type: System.Collections.Generic.List{HighscoreData}
      overload: JsonIOHandler.JsonFileReader.readHighscoreFile*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: JsonIOHandler.JsonFileReader.readInfoFile(System.String)
      commentId: M:JsonIOHandler.JsonFileReader.readInfoFile(System.String)
      language: CSharp
      name:
        CSharp: readInfoFile(String)
        VB: readInfoFile(String)
      nameWithType:
        CSharp: JsonFileReader.readInfoFile(String)
        VB: JsonFileReader.readInfoFile(String)
      qualifiedName:
        CSharp: JsonIOHandler.JsonFileReader.readInfoFile(System.String)
        VB: JsonIOHandler.JsonFileReader.readInfoFile(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JsonIOHandler
      source:
        id: readInfoFile
        path: ''
        startLine: 3169
      syntax:
        content:
          CSharp: public static MappingInfo readInfoFile(string filePath)
          VB: Public Shared Function readInfoFile(filePath As String) As MappingInfo
        parameters:
        - id: filePath
          type: System.String
        return:
          type: Audio.BeatMappingConfigs.MappingInfo
      overload: JsonIOHandler.JsonFileReader.readInfoFile*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: JsonIOHandler.JsonFileReader.readMappingFile(System.String)
      commentId: M:JsonIOHandler.JsonFileReader.readMappingFile(System.String)
      language: CSharp
      name:
        CSharp: readMappingFile(String)
        VB: readMappingFile(String)
      nameWithType:
        CSharp: JsonFileReader.readMappingFile(String)
        VB: JsonFileReader.readMappingFile(String)
      qualifiedName:
        CSharp: JsonIOHandler.JsonFileReader.readMappingFile(System.String)
        VB: JsonIOHandler.JsonFileReader.readMappingFile(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JsonIOHandler
      source:
        id: readMappingFile
        path: ''
        startLine: 3186
      syntax:
        content:
          CSharp: public static MappingContainer readMappingFile(string filePath)
          VB: Public Shared Function readMappingFile(filePath As String) As MappingContainer
        parameters:
        - id: filePath
          type: System.String
        return:
          type: Audio.BeatMappingConfigs.MappingContainer
      overload: JsonIOHandler.JsonFileReader.readMappingFile*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
- id: JsonStringBuilders
  commentId: N:JsonStringBuilders
  language: CSharp
  name:
    CSharp: JsonStringBuilders
    VB: JsonStringBuilders
  nameWithType:
    CSharp: JsonStringBuilders
    VB: JsonStringBuilders
  qualifiedName:
    CSharp: JsonStringBuilders
    VB: JsonStringBuilders
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: JsonStringBuilders.JsonHighscoreStringBuilder
    commentId: T:JsonStringBuilders.JsonHighscoreStringBuilder
    language: CSharp
    name:
      CSharp: JsonHighscoreStringBuilder
      VB: JsonHighscoreStringBuilder
    nameWithType:
      CSharp: JsonHighscoreStringBuilder
      VB: JsonHighscoreStringBuilder
    qualifiedName:
      CSharp: JsonStringBuilders.JsonHighscoreStringBuilder
      VB: JsonStringBuilders.JsonHighscoreStringBuilder
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JsonStringBuilders
    source:
      id: JsonHighscoreStringBuilder
      path: ''
      startLine: 3286
    example: []
    syntax:
      content:
        CSharp: public class JsonHighscoreStringBuilder
        VB: Public Class JsonHighscoreStringBuilder
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JsonStringBuilders.JsonHighscoreStringBuilder.setData(System.Collections.Generic.List{HighscoreData})
      commentId: M:JsonStringBuilders.JsonHighscoreStringBuilder.setData(System.Collections.Generic.List{HighscoreData})
      language: CSharp
      name:
        CSharp: setData(List<HighscoreData>)
        VB: setData(List(Of HighscoreData))
      nameWithType:
        CSharp: JsonHighscoreStringBuilder.setData(List<HighscoreData>)
        VB: JsonHighscoreStringBuilder.setData(List(Of HighscoreData))
      qualifiedName:
        CSharp: JsonStringBuilders.JsonHighscoreStringBuilder.setData(System.Collections.Generic.List<HighscoreData>)
        VB: JsonStringBuilders.JsonHighscoreStringBuilder.setData(System.Collections.Generic.List(Of HighscoreData))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JsonStringBuilders
      source:
        id: setData
        path: ''
        startLine: 3291
      syntax:
        content:
          CSharp: public void setData(List<HighscoreData> highscoreData)
          VB: Public Sub setData(highscoreData As List(Of HighscoreData))
        parameters:
        - id: highscoreData
          type: System.Collections.Generic.List{HighscoreData}
      overload: JsonStringBuilders.JsonHighscoreStringBuilder.setData*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JsonStringBuilders.JsonHighscoreStringBuilder.getJsonString
      commentId: M:JsonStringBuilders.JsonHighscoreStringBuilder.getJsonString
      language: CSharp
      name:
        CSharp: getJsonString()
        VB: getJsonString()
      nameWithType:
        CSharp: JsonHighscoreStringBuilder.getJsonString()
        VB: JsonHighscoreStringBuilder.getJsonString()
      qualifiedName:
        CSharp: JsonStringBuilders.JsonHighscoreStringBuilder.getJsonString()
        VB: JsonStringBuilders.JsonHighscoreStringBuilder.getJsonString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JsonStringBuilders
      source:
        id: getJsonString
        path: ''
        startLine: 3296
      syntax:
        content:
          CSharp: public string getJsonString()
          VB: Public Function getJsonString As String
        return:
          type: System.String
      overload: JsonStringBuilders.JsonHighscoreStringBuilder.getJsonString*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JsonStringBuilders.JsonMappingStringBuilder
    commentId: T:JsonStringBuilders.JsonMappingStringBuilder
    language: CSharp
    name:
      CSharp: JsonMappingStringBuilder
      VB: JsonMappingStringBuilder
    nameWithType:
      CSharp: JsonMappingStringBuilder
      VB: JsonMappingStringBuilder
    qualifiedName:
      CSharp: JsonStringBuilders.JsonMappingStringBuilder
      VB: JsonStringBuilders.JsonMappingStringBuilder
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JsonStringBuilders
    source:
      id: JsonMappingStringBuilder
      path: ''
      startLine: 3331
    example: []
    syntax:
      content:
        CSharp: public class JsonMappingStringBuilder
        VB: Public Class JsonMappingStringBuilder
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: JsonStringBuilders.JsonMappingStringBuilder.setData(Audio.BeatMappingConfigs.MappingContainer)
      commentId: M:JsonStringBuilders.JsonMappingStringBuilder.setData(Audio.BeatMappingConfigs.MappingContainer)
      language: CSharp
      name:
        CSharp: setData(MappingContainer)
        VB: setData(MappingContainer)
      nameWithType:
        CSharp: JsonMappingStringBuilder.setData(MappingContainer)
        VB: JsonMappingStringBuilder.setData(MappingContainer)
      qualifiedName:
        CSharp: JsonStringBuilders.JsonMappingStringBuilder.setData(Audio.BeatMappingConfigs.MappingContainer)
        VB: JsonStringBuilders.JsonMappingStringBuilder.setData(Audio.BeatMappingConfigs.MappingContainer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JsonStringBuilders
      source:
        id: setData
        path: ''
        startLine: 3344
      syntax:
        content:
          CSharp: public void setData(MappingContainer beatMappingContainer)
          VB: Public Sub setData(beatMappingContainer As MappingContainer)
        parameters:
        - id: beatMappingContainer
          type: Audio.BeatMappingConfigs.MappingContainer
      overload: JsonStringBuilders.JsonMappingStringBuilder.setData*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: JsonStringBuilders.JsonMappingStringBuilder.getJsonString
      commentId: M:JsonStringBuilders.JsonMappingStringBuilder.getJsonString
      language: CSharp
      name:
        CSharp: getJsonString()
        VB: getJsonString()
      nameWithType:
        CSharp: JsonMappingStringBuilder.getJsonString()
        VB: JsonMappingStringBuilder.getJsonString()
      qualifiedName:
        CSharp: JsonStringBuilders.JsonMappingStringBuilder.getJsonString()
        VB: JsonStringBuilders.JsonMappingStringBuilder.getJsonString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JsonStringBuilders
      source:
        id: getJsonString
        path: ''
        startLine: 3352
      syntax:
        content:
          CSharp: public string getJsonString()
          VB: Public Function getJsonString As String
        return:
          type: System.String
      overload: JsonStringBuilders.JsonMappingStringBuilder.getJsonString*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: JsonStringBuilders.JsonInfoStringBuilder
    commentId: T:JsonStringBuilders.JsonInfoStringBuilder
    language: CSharp
    name:
      CSharp: JsonInfoStringBuilder
      VB: JsonInfoStringBuilder
    nameWithType:
      CSharp: JsonInfoStringBuilder
      VB: JsonInfoStringBuilder
    qualifiedName:
      CSharp: JsonStringBuilders.JsonInfoStringBuilder
      VB: JsonStringBuilders.JsonInfoStringBuilder
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: JsonStringBuilders
    source:
      id: JsonInfoStringBuilder
      path: ''
      startLine: 3490
    example: []
    syntax:
      content:
        CSharp: public static class JsonInfoStringBuilder
        VB: Public Module JsonInfoStringBuilder
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: JsonStringBuilders.JsonInfoStringBuilder.getJsonString(System.String,System.Single)
      commentId: M:JsonStringBuilders.JsonInfoStringBuilder.getJsonString(System.String,System.Single)
      language: CSharp
      name:
        CSharp: getJsonString(String, Single)
        VB: getJsonString(String, Single)
      nameWithType:
        CSharp: JsonInfoStringBuilder.getJsonString(String, Single)
        VB: JsonInfoStringBuilder.getJsonString(String, Single)
      qualifiedName:
        CSharp: JsonStringBuilders.JsonInfoStringBuilder.getJsonString(System.String, System.Single)
        VB: JsonStringBuilders.JsonInfoStringBuilder.getJsonString(System.String, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: JsonStringBuilders
      source:
        id: getJsonString
        path: ''
        startLine: 3494
      syntax:
        content:
          CSharp: public static string getJsonString(string trackName, float bpm)
          VB: Public Shared Function getJsonString(trackName As String, bpm As Single) As String
        parameters:
        - id: trackName
          type: System.String
        - id: bpm
          type: System.Single
        return:
          type: System.String
      overload: JsonStringBuilders.JsonInfoStringBuilder.getJsonString*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
references:
  AudioSource:
    name:
      CSharp:
      - id: AudioSource
        name: AudioSource
        nameWithType: AudioSource
        qualifiedName: AudioSource
        isExternal: true
      VB:
      - id: AudioSource
        name: AudioSource
        nameWithType: AudioSource
        qualifiedName: AudioSource
        isExternal: true
    isDefinition: true
    commentId: '!:AudioSource'
  Audio.AudioController.processAudioData*:
    name:
      CSharp:
      - id: Audio.AudioController.processAudioData*
        name: processAudioData
        nameWithType: AudioController.processAudioData
        qualifiedName: Audio.AudioController.processAudioData
      VB:
      - id: Audio.AudioController.processAudioData*
        name: processAudioData
        nameWithType: AudioController.processAudioData
        qualifiedName: Audio.AudioController.processAudioData
    isDefinition: true
    commentId: Overload:Audio.AudioController.processAudioData
  Audio.AudioController:
    name:
      CSharp:
      - id: Audio.AudioController
        name: AudioController
        nameWithType: AudioController
        qualifiedName: Audio.AudioController
      VB:
      - id: Audio.AudioController
        name: AudioController
        nameWithType: AudioController
        qualifiedName: Audio.AudioController
    isDefinition: true
    commentId: T:Audio.AudioController
  Audio:
    name:
      CSharp:
      - name: Audio
        nameWithType: Audio
        qualifiedName: Audio
      VB:
      - name: Audio
        nameWithType: Audio
        qualifiedName: Audio
    isDefinition: true
    commentId: N:Audio
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.List{Audio.BeatMappingConfigs.EventConfig}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Audio.BeatMappingConfigs.EventConfig
        name: EventConfig
        nameWithType: EventConfig
        qualifiedName: Audio.BeatMappingConfigs.EventConfig
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Audio.BeatMappingConfigs.EventConfig
        name: EventConfig
        nameWithType: EventConfig
        qualifiedName: Audio.BeatMappingConfigs.EventConfig
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Audio.BeatMappingConfigs.EventConfig}
  Audio.BeatMappingConfigs.MappingContainer.EventData*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.MappingContainer.EventData*
        name: EventData
        nameWithType: MappingContainer.EventData
        qualifiedName: Audio.BeatMappingConfigs.MappingContainer.EventData
      VB:
      - id: Audio.BeatMappingConfigs.MappingContainer.EventData*
        name: EventData
        nameWithType: MappingContainer.EventData
        qualifiedName: Audio.BeatMappingConfigs.MappingContainer.EventData
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.MappingContainer.EventData
  System.Collections.Generic.List{Audio.BeatMappingConfigs.NoteConfig}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Audio.BeatMappingConfigs.NoteConfig
        name: NoteConfig
        nameWithType: NoteConfig
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Audio.BeatMappingConfigs.NoteConfig
        name: NoteConfig
        nameWithType: NoteConfig
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Audio.BeatMappingConfigs.NoteConfig}
  Audio.BeatMappingConfigs.MappingContainer.NoteData*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.MappingContainer.NoteData*
        name: NoteData
        nameWithType: MappingContainer.NoteData
        qualifiedName: Audio.BeatMappingConfigs.MappingContainer.NoteData
      VB:
      - id: Audio.BeatMappingConfigs.MappingContainer.NoteData*
        name: NoteData
        nameWithType: MappingContainer.NoteData
        qualifiedName: Audio.BeatMappingConfigs.MappingContainer.NoteData
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.MappingContainer.NoteData
  System.Collections.Generic.List{Audio.BeatMappingConfigs.ObstacleConfig}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Audio.BeatMappingConfigs.ObstacleConfig
        name: ObstacleConfig
        nameWithType: ObstacleConfig
        qualifiedName: Audio.BeatMappingConfigs.ObstacleConfig
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Audio.BeatMappingConfigs.ObstacleConfig
        name: ObstacleConfig
        nameWithType: ObstacleConfig
        qualifiedName: Audio.BeatMappingConfigs.ObstacleConfig
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Audio.BeatMappingConfigs.ObstacleConfig}
  Audio.BeatMappingConfigs.MappingContainer.ObstacleData*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.MappingContainer.ObstacleData*
        name: ObstacleData
        nameWithType: MappingContainer.ObstacleData
        qualifiedName: Audio.BeatMappingConfigs.MappingContainer.ObstacleData
      VB:
      - id: Audio.BeatMappingConfigs.MappingContainer.ObstacleData*
        name: ObstacleData
        nameWithType: MappingContainer.ObstacleData
        qualifiedName: Audio.BeatMappingConfigs.MappingContainer.ObstacleData
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.MappingContainer.ObstacleData
  System.Collections.Generic.List{Audio.BeatMappingConfigs.BookmarkConfig}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Audio.BeatMappingConfigs.BookmarkConfig
        name: BookmarkConfig
        nameWithType: BookmarkConfig
        qualifiedName: Audio.BeatMappingConfigs.BookmarkConfig
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Audio.BeatMappingConfigs.BookmarkConfig
        name: BookmarkConfig
        nameWithType: BookmarkConfig
        qualifiedName: Audio.BeatMappingConfigs.BookmarkConfig
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Audio.BeatMappingConfigs.BookmarkConfig}
  Audio.BeatMappingConfigs.MappingContainer.BookmarkData*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.MappingContainer.BookmarkData*
        name: BookmarkData
        nameWithType: MappingContainer.BookmarkData
        qualifiedName: Audio.BeatMappingConfigs.MappingContainer.BookmarkData
      VB:
      - id: Audio.BeatMappingConfigs.MappingContainer.BookmarkData*
        name: BookmarkData
        nameWithType: MappingContainer.BookmarkData
        qualifiedName: Audio.BeatMappingConfigs.MappingContainer.BookmarkData
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.MappingContainer.BookmarkData
  Audio.BeatMappingConfigs:
    name:
      CSharp:
      - name: Audio.BeatMappingConfigs
        nameWithType: Audio.BeatMappingConfigs
        qualifiedName: Audio.BeatMappingConfigs
      VB:
      - name: Audio.BeatMappingConfigs
        nameWithType: Audio.BeatMappingConfigs
        qualifiedName: Audio.BeatMappingConfigs
    isDefinition: true
    commentId: N:Audio.BeatMappingConfigs
  Audio.BeatMappingConfigs.MappingInfo:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.MappingInfo
        name: MappingInfo
        nameWithType: MappingInfo
        qualifiedName: Audio.BeatMappingConfigs.MappingInfo
      VB:
      - id: Audio.BeatMappingConfigs.MappingInfo
        name: MappingInfo
        nameWithType: MappingInfo
        qualifiedName: Audio.BeatMappingConfigs.MappingInfo
    isDefinition: true
    parent: Audio.BeatMappingConfigs
    commentId: T:Audio.BeatMappingConfigs.MappingInfo
  Audio.BeatMappingConfigs.MappingContainer.MappingInfo*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.MappingContainer.MappingInfo*
        name: MappingInfo
        nameWithType: MappingContainer.MappingInfo
        qualifiedName: Audio.BeatMappingConfigs.MappingContainer.MappingInfo
      VB:
      - id: Audio.BeatMappingConfigs.MappingContainer.MappingInfo*
        name: MappingInfo
        nameWithType: MappingContainer.MappingInfo
        qualifiedName: Audio.BeatMappingConfigs.MappingContainer.MappingInfo
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.MappingContainer.MappingInfo
  Audio.BeatMappingConfigs.MappingContainer.sortMappings*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.MappingContainer.sortMappings*
        name: sortMappings
        nameWithType: MappingContainer.sortMappings
        qualifiedName: Audio.BeatMappingConfigs.MappingContainer.sortMappings
      VB:
      - id: Audio.BeatMappingConfigs.MappingContainer.sortMappings*
        name: sortMappings
        nameWithType: MappingContainer.sortMappings
        qualifiedName: Audio.BeatMappingConfigs.MappingContainer.sortMappings
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.MappingContainer.sortMappings
  Audio.BeatMappingConfigs.MappingContainer:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.MappingContainer
        name: MappingContainer
        nameWithType: MappingContainer
        qualifiedName: Audio.BeatMappingConfigs.MappingContainer
      VB:
      - id: Audio.BeatMappingConfigs.MappingContainer
        name: MappingContainer
        nameWithType: MappingContainer
        qualifiedName: Audio.BeatMappingConfigs.MappingContainer
    isDefinition: true
    parent: Audio.BeatMappingConfigs
    commentId: T:Audio.BeatMappingConfigs.MappingContainer
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  Audio.BeatMappingConfigs.EventConfig.Time*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.EventConfig.Time*
        name: Time
        nameWithType: EventConfig.Time
        qualifiedName: Audio.BeatMappingConfigs.EventConfig.Time
      VB:
      - id: Audio.BeatMappingConfigs.EventConfig.Time*
        name: Time
        nameWithType: EventConfig.Time
        qualifiedName: Audio.BeatMappingConfigs.EventConfig.Time
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.EventConfig.Time
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  Audio.BeatMappingConfigs.EventConfig.Type*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.EventConfig.Type*
        name: Type
        nameWithType: EventConfig.Type
        qualifiedName: Audio.BeatMappingConfigs.EventConfig.Type
      VB:
      - id: Audio.BeatMappingConfigs.EventConfig.Type*
        name: Type
        nameWithType: EventConfig.Type
        qualifiedName: Audio.BeatMappingConfigs.EventConfig.Type
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.EventConfig.Type
  Audio.BeatMappingConfigs.EventConfig.Value*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.EventConfig.Value*
        name: Value
        nameWithType: EventConfig.Value
        qualifiedName: Audio.BeatMappingConfigs.EventConfig.Value
      VB:
      - id: Audio.BeatMappingConfigs.EventConfig.Value*
        name: Value
        nameWithType: EventConfig.Value
        qualifiedName: Audio.BeatMappingConfigs.EventConfig.Value
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.EventConfig.Value
  Audio.BeatMappingConfigs.EventConfig:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.EventConfig
        name: EventConfig
        nameWithType: EventConfig
        qualifiedName: Audio.BeatMappingConfigs.EventConfig
      VB:
      - id: Audio.BeatMappingConfigs.EventConfig
        name: EventConfig
        nameWithType: EventConfig
        qualifiedName: Audio.BeatMappingConfigs.EventConfig
    isDefinition: true
    commentId: T:Audio.BeatMappingConfigs.EventConfig
  Audio.BeatMappingConfigs.EventConfig.TYPES:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.EventConfig.TYPES
        name: EventConfig.TYPES
        nameWithType: EventConfig.TYPES
        qualifiedName: Audio.BeatMappingConfigs.EventConfig.TYPES
      VB:
      - id: Audio.BeatMappingConfigs.EventConfig.TYPES
        name: EventConfig.TYPES
        nameWithType: EventConfig.TYPES
        qualifiedName: Audio.BeatMappingConfigs.EventConfig.TYPES
    isDefinition: true
    parent: Audio.BeatMappingConfigs
    commentId: T:Audio.BeatMappingConfigs.EventConfig.TYPES
  Audio.BeatMappingConfigs.NoteConfig.Time*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.NoteConfig.Time*
        name: Time
        nameWithType: NoteConfig.Time
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig.Time
      VB:
      - id: Audio.BeatMappingConfigs.NoteConfig.Time*
        name: Time
        nameWithType: NoteConfig.Time
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig.Time
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.NoteConfig.Time
  Audio.BeatMappingConfigs.NoteConfig.LineIndex*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.NoteConfig.LineIndex*
        name: LineIndex
        nameWithType: NoteConfig.LineIndex
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig.LineIndex
      VB:
      - id: Audio.BeatMappingConfigs.NoteConfig.LineIndex*
        name: LineIndex
        nameWithType: NoteConfig.LineIndex
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig.LineIndex
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.NoteConfig.LineIndex
  Audio.BeatMappingConfigs.NoteConfig.LineLayer*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.NoteConfig.LineLayer*
        name: LineLayer
        nameWithType: NoteConfig.LineLayer
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig.LineLayer
      VB:
      - id: Audio.BeatMappingConfigs.NoteConfig.LineLayer*
        name: LineLayer
        nameWithType: NoteConfig.LineLayer
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig.LineLayer
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.NoteConfig.LineLayer
  Audio.BeatMappingConfigs.NoteConfig.Type*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.NoteConfig.Type*
        name: Type
        nameWithType: NoteConfig.Type
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig.Type
      VB:
      - id: Audio.BeatMappingConfigs.NoteConfig.Type*
        name: Type
        nameWithType: NoteConfig.Type
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig.Type
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.NoteConfig.Type
  Audio.BeatMappingConfigs.NoteConfig.CutDirection*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.NoteConfig.CutDirection*
        name: CutDirection
        nameWithType: NoteConfig.CutDirection
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig.CutDirection
      VB:
      - id: Audio.BeatMappingConfigs.NoteConfig.CutDirection*
        name: CutDirection
        nameWithType: NoteConfig.CutDirection
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig.CutDirection
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.NoteConfig.CutDirection
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  Audio.BeatMappingConfigs.NoteConfig.BelongsToDoubleNote*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.NoteConfig.BelongsToDoubleNote*
        name: BelongsToDoubleNote
        nameWithType: NoteConfig.BelongsToDoubleNote
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig.BelongsToDoubleNote
      VB:
      - id: Audio.BeatMappingConfigs.NoteConfig.BelongsToDoubleNote*
        name: BelongsToDoubleNote
        nameWithType: NoteConfig.BelongsToDoubleNote
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig.BelongsToDoubleNote
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.NoteConfig.BelongsToDoubleNote
  Audio.BeatMappingConfigs.NoteConfig.ObstacleLineIndex*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.NoteConfig.ObstacleLineIndex*
        name: ObstacleLineIndex
        nameWithType: NoteConfig.ObstacleLineIndex
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig.ObstacleLineIndex
      VB:
      - id: Audio.BeatMappingConfigs.NoteConfig.ObstacleLineIndex*
        name: ObstacleLineIndex
        nameWithType: NoteConfig.ObstacleLineIndex
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig.ObstacleLineIndex
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.NoteConfig.ObstacleLineIndex
  Audio.BeatMappingConfigs.NoteConfig:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.NoteConfig
        name: NoteConfig
        nameWithType: NoteConfig
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig
      VB:
      - id: Audio.BeatMappingConfigs.NoteConfig
        name: NoteConfig
        nameWithType: NoteConfig
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig
    isDefinition: true
    commentId: T:Audio.BeatMappingConfigs.NoteConfig
  Audio.BeatMappingConfigs.ObstacleConfig.Time*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.ObstacleConfig.Time*
        name: Time
        nameWithType: ObstacleConfig.Time
        qualifiedName: Audio.BeatMappingConfigs.ObstacleConfig.Time
      VB:
      - id: Audio.BeatMappingConfigs.ObstacleConfig.Time*
        name: Time
        nameWithType: ObstacleConfig.Time
        qualifiedName: Audio.BeatMappingConfigs.ObstacleConfig.Time
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.ObstacleConfig.Time
  Audio.BeatMappingConfigs.ObstacleConfig.LineIndex*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.ObstacleConfig.LineIndex*
        name: LineIndex
        nameWithType: ObstacleConfig.LineIndex
        qualifiedName: Audio.BeatMappingConfigs.ObstacleConfig.LineIndex
      VB:
      - id: Audio.BeatMappingConfigs.ObstacleConfig.LineIndex*
        name: LineIndex
        nameWithType: ObstacleConfig.LineIndex
        qualifiedName: Audio.BeatMappingConfigs.ObstacleConfig.LineIndex
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.ObstacleConfig.LineIndex
  Audio.BeatMappingConfigs.ObstacleConfig.Type*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.ObstacleConfig.Type*
        name: Type
        nameWithType: ObstacleConfig.Type
        qualifiedName: Audio.BeatMappingConfigs.ObstacleConfig.Type
      VB:
      - id: Audio.BeatMappingConfigs.ObstacleConfig.Type*
        name: Type
        nameWithType: ObstacleConfig.Type
        qualifiedName: Audio.BeatMappingConfigs.ObstacleConfig.Type
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.ObstacleConfig.Type
  Audio.BeatMappingConfigs.ObstacleConfig.Duration*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.ObstacleConfig.Duration*
        name: Duration
        nameWithType: ObstacleConfig.Duration
        qualifiedName: Audio.BeatMappingConfigs.ObstacleConfig.Duration
      VB:
      - id: Audio.BeatMappingConfigs.ObstacleConfig.Duration*
        name: Duration
        nameWithType: ObstacleConfig.Duration
        qualifiedName: Audio.BeatMappingConfigs.ObstacleConfig.Duration
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.ObstacleConfig.Duration
  Audio.BeatMappingConfigs.ObstacleConfig.Width*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.ObstacleConfig.Width*
        name: Width
        nameWithType: ObstacleConfig.Width
        qualifiedName: Audio.BeatMappingConfigs.ObstacleConfig.Width
      VB:
      - id: Audio.BeatMappingConfigs.ObstacleConfig.Width*
        name: Width
        nameWithType: ObstacleConfig.Width
        qualifiedName: Audio.BeatMappingConfigs.ObstacleConfig.Width
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.ObstacleConfig.Width
  Audio.BeatMappingConfigs.ObstacleConfig:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.ObstacleConfig
        name: ObstacleConfig
        nameWithType: ObstacleConfig
        qualifiedName: Audio.BeatMappingConfigs.ObstacleConfig
      VB:
      - id: Audio.BeatMappingConfigs.ObstacleConfig
        name: ObstacleConfig
        nameWithType: ObstacleConfig
        qualifiedName: Audio.BeatMappingConfigs.ObstacleConfig
    isDefinition: true
    commentId: T:Audio.BeatMappingConfigs.ObstacleConfig
  Audio.BeatMappingConfigs.BookmarkConfig.Time*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.BookmarkConfig.Time*
        name: Time
        nameWithType: BookmarkConfig.Time
        qualifiedName: Audio.BeatMappingConfigs.BookmarkConfig.Time
      VB:
      - id: Audio.BeatMappingConfigs.BookmarkConfig.Time*
        name: Time
        nameWithType: BookmarkConfig.Time
        qualifiedName: Audio.BeatMappingConfigs.BookmarkConfig.Time
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.BookmarkConfig.Time
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  Audio.BeatMappingConfigs.BookmarkConfig.Name*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.BookmarkConfig.Name*
        name: Name
        nameWithType: BookmarkConfig.Name
        qualifiedName: Audio.BeatMappingConfigs.BookmarkConfig.Name
      VB:
      - id: Audio.BeatMappingConfigs.BookmarkConfig.Name*
        name: Name
        nameWithType: BookmarkConfig.Name
        qualifiedName: Audio.BeatMappingConfigs.BookmarkConfig.Name
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.BookmarkConfig.Name
  Audio.BeatMappingConfigs.BookmarkConfig:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.BookmarkConfig
        name: BookmarkConfig
        nameWithType: BookmarkConfig
        qualifiedName: Audio.BeatMappingConfigs.BookmarkConfig
      VB:
      - id: Audio.BeatMappingConfigs.BookmarkConfig
        name: BookmarkConfig
        nameWithType: BookmarkConfig
        qualifiedName: Audio.BeatMappingConfigs.BookmarkConfig
    isDefinition: true
    commentId: T:Audio.BeatMappingConfigs.BookmarkConfig
  Audio.BeatMappingConfigs.MappingInfo.Bpm*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.MappingInfo.Bpm*
        name: Bpm
        nameWithType: MappingInfo.Bpm
        qualifiedName: Audio.BeatMappingConfigs.MappingInfo.Bpm
      VB:
      - id: Audio.BeatMappingConfigs.MappingInfo.Bpm*
        name: Bpm
        nameWithType: MappingInfo.Bpm
        qualifiedName: Audio.BeatMappingConfigs.MappingInfo.Bpm
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.MappingInfo.Bpm
  Audio.AudioAnalysis.AudioAnalyzerConfigs:
    name:
      CSharp:
      - name: Audio.AudioAnalysis.AudioAnalyzerConfigs
        nameWithType: Audio.AudioAnalysis.AudioAnalyzerConfigs
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs
      VB:
      - name: Audio.AudioAnalysis.AudioAnalyzerConfigs
        nameWithType: Audio.AudioAnalysis.AudioAnalyzerConfigs
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs
    isDefinition: true
    commentId: N:Audio.AudioAnalysis.AudioAnalyzerConfigs
  Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig
        name: TrackConfig
        nameWithType: TrackConfig
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig
      VB:
      - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig
        name: TrackConfig
        nameWithType: TrackConfig
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig
    isDefinition: true
    parent: Audio.AudioAnalysis.AudioAnalyzerConfigs
    commentId: T:Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig
  System.Collections.Generic.List{Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig
        name: AnalyzedSpectrumConfig
        nameWithType: AnalyzedSpectrumConfig
        qualifiedName: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig
        name: AnalyzedSpectrumConfig
        nameWithType: AnalyzedSpectrumConfig
        qualifiedName: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig}
  Audio.AudioAnalysis.AudioAnalyzerHandler.#ctor*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.AudioAnalyzerHandler.#ctor*
        name: AudioAnalyzerHandler
        nameWithType: AudioAnalyzerHandler.AudioAnalyzerHandler
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerHandler.AudioAnalyzerHandler
      VB:
      - id: Audio.AudioAnalysis.AudioAnalyzerHandler.#ctor*
        name: AudioAnalyzerHandler
        nameWithType: AudioAnalyzerHandler.AudioAnalyzerHandler
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerHandler.AudioAnalyzerHandler
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.AudioAnalyzerHandler.#ctor
  Audio.AudioAnalysis.AudioAnalyzerHandler.getAnalyzedSpectrumData*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.AudioAnalyzerHandler.getAnalyzedSpectrumData*
        name: getAnalyzedSpectrumData
        nameWithType: AudioAnalyzerHandler.getAnalyzedSpectrumData
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerHandler.getAnalyzedSpectrumData
      VB:
      - id: Audio.AudioAnalysis.AudioAnalyzerHandler.getAnalyzedSpectrumData*
        name: getAnalyzedSpectrumData
        nameWithType: AudioAnalyzerHandler.getAnalyzedSpectrumData
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerHandler.getAnalyzedSpectrumData
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.AudioAnalyzerHandler.getAnalyzedSpectrumData
  Audio.AudioAnalysis.AudioAnalyzerHandler.getBeatMappingContainer*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.AudioAnalyzerHandler.getBeatMappingContainer*
        name: getBeatMappingContainer
        nameWithType: AudioAnalyzerHandler.getBeatMappingContainer
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerHandler.getBeatMappingContainer
      VB:
      - id: Audio.AudioAnalysis.AudioAnalyzerHandler.getBeatMappingContainer*
        name: getBeatMappingContainer
        nameWithType: AudioAnalyzerHandler.getBeatMappingContainer
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerHandler.getBeatMappingContainer
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.AudioAnalyzerHandler.getBeatMappingContainer
  Action:
    name:
      CSharp:
      - id: Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      VB:
      - id: Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
    isDefinition: true
    commentId: '!:Action'
  Audio.AudioAnalysis.AudioAnalyzerHandler.analyzeSpectrumsList*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.AudioAnalyzerHandler.analyzeSpectrumsList*
        name: analyzeSpectrumsList
        nameWithType: AudioAnalyzerHandler.analyzeSpectrumsList
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerHandler.analyzeSpectrumsList
      VB:
      - id: Audio.AudioAnalysis.AudioAnalyzerHandler.analyzeSpectrumsList*
        name: analyzeSpectrumsList
        nameWithType: AudioAnalyzerHandler.analyzeSpectrumsList
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerHandler.analyzeSpectrumsList
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.AudioAnalyzerHandler.analyzeSpectrumsList
  Audio.AudioAnalysis.AudioAnalyzerHandler:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.AudioAnalyzerHandler
        name: AudioAnalyzerHandler
        nameWithType: AudioAnalyzerHandler
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerHandler
      VB:
      - id: Audio.AudioAnalysis.AudioAnalyzerHandler
        name: AudioAnalyzerHandler
        nameWithType: AudioAnalyzerHandler
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerHandler
    isDefinition: true
    commentId: T:Audio.AudioAnalysis.AudioAnalyzerHandler
  System.Collections.Generic.List{Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig
        name: AnalyzerBandConfig
        nameWithType: AnalyzerBandConfig
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig
        name: AnalyzerBandConfig
        nameWithType: AnalyzerBandConfig
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig}
  Audio.AudioAnalysis.PeakDetector.#ctor*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.PeakDetector.#ctor*
        name: PeakDetector
        nameWithType: PeakDetector.PeakDetector
        qualifiedName: Audio.AudioAnalysis.PeakDetector.PeakDetector
      VB:
      - id: Audio.AudioAnalysis.PeakDetector.#ctor*
        name: PeakDetector
        nameWithType: PeakDetector.PeakDetector
        qualifiedName: Audio.AudioAnalysis.PeakDetector.PeakDetector
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.PeakDetector.#ctor
  Audio.AudioAnalysis.PeakDetector.analyze*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.PeakDetector.analyze*
        name: analyze
        nameWithType: PeakDetector.analyze
        qualifiedName: Audio.AudioAnalysis.PeakDetector.analyze
      VB:
      - id: Audio.AudioAnalysis.PeakDetector.analyze*
        name: analyze
        nameWithType: PeakDetector.analyze
        qualifiedName: Audio.AudioAnalysis.PeakDetector.analyze
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.PeakDetector.analyze
  Audio.AudioAnalysis.PeakDetector.getSpectrumDataList*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.PeakDetector.getSpectrumDataList*
        name: getSpectrumDataList
        nameWithType: PeakDetector.getSpectrumDataList
        qualifiedName: Audio.AudioAnalysis.PeakDetector.getSpectrumDataList
      VB:
      - id: Audio.AudioAnalysis.PeakDetector.getSpectrumDataList*
        name: getSpectrumDataList
        nameWithType: PeakDetector.getSpectrumDataList
        qualifiedName: Audio.AudioAnalysis.PeakDetector.getSpectrumDataList
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.PeakDetector.getSpectrumDataList
  Audio.AudioAnalysis.PeakDetector.getBeatMappingContainer*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.PeakDetector.getBeatMappingContainer*
        name: getBeatMappingContainer
        nameWithType: PeakDetector.getBeatMappingContainer
        qualifiedName: Audio.AudioAnalysis.PeakDetector.getBeatMappingContainer
      VB:
      - id: Audio.AudioAnalysis.PeakDetector.getBeatMappingContainer*
        name: getBeatMappingContainer
        nameWithType: PeakDetector.getBeatMappingContainer
        qualifiedName: Audio.AudioAnalysis.PeakDetector.getBeatMappingContainer
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.PeakDetector.getBeatMappingContainer
  Audio.AudioAnalysis.PeakDetector:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.PeakDetector
        name: PeakDetector
        nameWithType: PeakDetector
        qualifiedName: Audio.AudioAnalysis.PeakDetector
      VB:
      - id: Audio.AudioAnalysis.PeakDetector
        name: PeakDetector
        nameWithType: PeakDetector
        qualifiedName: Audio.AudioAnalysis.PeakDetector
    isDefinition: true
    commentId: T:Audio.AudioAnalysis.PeakDetector
  Audio.AudioAnalysis.PostOnsetAudioAnalyzer.#ctor*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.PostOnsetAudioAnalyzer.#ctor*
        name: PostOnsetAudioAnalyzer
        nameWithType: PostOnsetAudioAnalyzer.PostOnsetAudioAnalyzer
        qualifiedName: Audio.AudioAnalysis.PostOnsetAudioAnalyzer.PostOnsetAudioAnalyzer
      VB:
      - id: Audio.AudioAnalysis.PostOnsetAudioAnalyzer.#ctor*
        name: PostOnsetAudioAnalyzer
        nameWithType: PostOnsetAudioAnalyzer.PostOnsetAudioAnalyzer
        qualifiedName: Audio.AudioAnalysis.PostOnsetAudioAnalyzer.PostOnsetAudioAnalyzer
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.PostOnsetAudioAnalyzer.#ctor
  Audio.AudioAnalysis.PostOnsetAudioAnalyzer.analyze*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.PostOnsetAudioAnalyzer.analyze*
        name: analyze
        nameWithType: PostOnsetAudioAnalyzer.analyze
        qualifiedName: Audio.AudioAnalysis.PostOnsetAudioAnalyzer.analyze
      VB:
      - id: Audio.AudioAnalysis.PostOnsetAudioAnalyzer.analyze*
        name: analyze
        nameWithType: PostOnsetAudioAnalyzer.analyze
        qualifiedName: Audio.AudioAnalysis.PostOnsetAudioAnalyzer.analyze
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.PostOnsetAudioAnalyzer.analyze
  Audio.AudioAnalysis.PostOnsetAudioAnalyzer.getBeatMappingContainer*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.PostOnsetAudioAnalyzer.getBeatMappingContainer*
        name: getBeatMappingContainer
        nameWithType: PostOnsetAudioAnalyzer.getBeatMappingContainer
        qualifiedName: Audio.AudioAnalysis.PostOnsetAudioAnalyzer.getBeatMappingContainer
      VB:
      - id: Audio.AudioAnalysis.PostOnsetAudioAnalyzer.getBeatMappingContainer*
        name: getBeatMappingContainer
        nameWithType: PostOnsetAudioAnalyzer.getBeatMappingContainer
        qualifiedName: Audio.AudioAnalysis.PostOnsetAudioAnalyzer.getBeatMappingContainer
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.PostOnsetAudioAnalyzer.getBeatMappingContainer
  Audio.AudioAnalysis.PostOnsetAudioAnalyzer:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.PostOnsetAudioAnalyzer
        name: PostOnsetAudioAnalyzer
        nameWithType: PostOnsetAudioAnalyzer
        qualifiedName: Audio.AudioAnalysis.PostOnsetAudioAnalyzer
      VB:
      - id: Audio.AudioAnalysis.PostOnsetAudioAnalyzer
        name: PostOnsetAudioAnalyzer
        nameWithType: PostOnsetAudioAnalyzer
        qualifiedName: Audio.AudioAnalysis.PostOnsetAudioAnalyzer
    isDefinition: true
    commentId: T:Audio.AudioAnalysis.PostOnsetAudioAnalyzer
  Audio.AudioAnalysis.SpectrumAnalysisUtils.shouldBeExtraPeak*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.SpectrumAnalysisUtils.shouldBeExtraPeak*
        name: shouldBeExtraPeak
        nameWithType: SpectrumAnalysisUtils.shouldBeExtraPeak
        qualifiedName: Audio.AudioAnalysis.SpectrumAnalysisUtils.shouldBeExtraPeak
      VB:
      - id: Audio.AudioAnalysis.SpectrumAnalysisUtils.shouldBeExtraPeak*
        name: shouldBeExtraPeak
        nameWithType: SpectrumAnalysisUtils.shouldBeExtraPeak
        qualifiedName: Audio.AudioAnalysis.SpectrumAnalysisUtils.shouldBeExtraPeak
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.SpectrumAnalysisUtils.shouldBeExtraPeak
  Audio.AudioAnalysis.SpectrumAnalysisUtils.sampleIsCloser*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.SpectrumAnalysisUtils.sampleIsCloser*
        name: sampleIsCloser
        nameWithType: SpectrumAnalysisUtils.sampleIsCloser
        qualifiedName: Audio.AudioAnalysis.SpectrumAnalysisUtils.sampleIsCloser
      VB:
      - id: Audio.AudioAnalysis.SpectrumAnalysisUtils.sampleIsCloser*
        name: sampleIsCloser
        nameWithType: SpectrumAnalysisUtils.sampleIsCloser
        qualifiedName: Audio.AudioAnalysis.SpectrumAnalysisUtils.sampleIsCloser
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.SpectrumAnalysisUtils.sampleIsCloser
  Audio.AudioAnalysis.SpectrumAnalysisUtils:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.SpectrumAnalysisUtils
        name: SpectrumAnalysisUtils
        nameWithType: SpectrumAnalysisUtils
        qualifiedName: Audio.AudioAnalysis.SpectrumAnalysisUtils
      VB:
      - id: Audio.AudioAnalysis.SpectrumAnalysisUtils
        name: SpectrumAnalysisUtils
        nameWithType: SpectrumAnalysisUtils
        qualifiedName: Audio.AudioAnalysis.SpectrumAnalysisUtils
    isDefinition: true
    commentId: T:Audio.AudioAnalysis.SpectrumAnalysisUtils
  Audio.AudioAnalysis:
    name:
      CSharp:
      - name: Audio.AudioAnalysis
        nameWithType: Audio.AudioAnalysis
        qualifiedName: Audio.AudioAnalysis
      VB:
      - name: Audio.AudioAnalysis
        nameWithType: Audio.AudioAnalysis
        qualifiedName: Audio.AudioAnalysis
    isDefinition: true
    commentId: N:Audio.AudioAnalysis
  Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.#ctor*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.#ctor*
        name: TrackConfig
        nameWithType: TrackConfig.TrackConfig
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.TrackConfig
      VB:
      - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.#ctor*
        name: TrackConfig
        nameWithType: TrackConfig.TrackConfig
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.TrackConfig
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.#ctor
  Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.AnalyzerConfigs*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.AnalyzerConfigs*
        name: AnalyzerConfigs
        nameWithType: TrackConfig.AnalyzerConfigs
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.AnalyzerConfigs
      VB:
      - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.AnalyzerConfigs*
        name: AnalyzerConfigs
        nameWithType: TrackConfig.AnalyzerConfigs
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.AnalyzerConfigs
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.AnalyzerConfigs
  Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.Bands*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.Bands*
        name: Bands
        nameWithType: TrackConfig.Bands
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.Bands
      VB:
      - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.Bands*
        name: Bands
        nameWithType: TrackConfig.Bands
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.Bands
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.Bands
  Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.ClipSampleRate*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.ClipSampleRate*
        name: ClipSampleRate
        nameWithType: TrackConfig.ClipSampleRate
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.ClipSampleRate
      VB:
      - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.ClipSampleRate*
        name: ClipSampleRate
        nameWithType: TrackConfig.ClipSampleRate
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.ClipSampleRate
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.ClipSampleRate
  Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.TrackName*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.TrackName*
        name: TrackName
        nameWithType: TrackConfig.TrackName
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.TrackName
      VB:
      - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.TrackName*
        name: TrackName
        nameWithType: TrackConfig.TrackName
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.TrackName
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.TrackName
  Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.Band*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.Band*
        name: Band
        nameWithType: AnalyzerBandConfig.Band
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.Band
      VB:
      - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.Band*
        name: Band
        nameWithType: AnalyzerBandConfig.Band
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.Band
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.Band
  Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartIndex*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartIndex*
        name: StartIndex
        nameWithType: AnalyzerBandConfig.StartIndex
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartIndex
      VB:
      - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartIndex*
        name: StartIndex
        nameWithType: AnalyzerBandConfig.StartIndex
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartIndex
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartIndex
  Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndIndex*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndIndex*
        name: EndIndex
        nameWithType: AnalyzerBandConfig.EndIndex
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndIndex
      VB:
      - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndIndex*
        name: EndIndex
        nameWithType: AnalyzerBandConfig.EndIndex
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndIndex
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndIndex
  Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.ThresholdSize*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.ThresholdSize*
        name: ThresholdSize
        nameWithType: AnalyzerBandConfig.ThresholdSize
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.ThresholdSize
      VB:
      - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.ThresholdSize*
        name: ThresholdSize
        nameWithType: AnalyzerBandConfig.ThresholdSize
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.ThresholdSize
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.ThresholdSize
  Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.BeatBlockCounter*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.BeatBlockCounter*
        name: BeatBlockCounter
        nameWithType: AnalyzerBandConfig.BeatBlockCounter
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.BeatBlockCounter
      VB:
      - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.BeatBlockCounter*
        name: BeatBlockCounter
        nameWithType: AnalyzerBandConfig.BeatBlockCounter
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.BeatBlockCounter
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.BeatBlockCounter
  Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartFrequency*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartFrequency*
        name: StartFrequency
        nameWithType: AnalyzerBandConfig.StartFrequency
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartFrequency
      VB:
      - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartFrequency*
        name: StartFrequency
        nameWithType: AnalyzerBandConfig.StartFrequency
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartFrequency
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartFrequency
  Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndFrequency*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndFrequency*
        name: EndFrequency
        nameWithType: AnalyzerBandConfig.EndFrequency
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndFrequency
      VB:
      - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndFrequency*
        name: EndFrequency
        nameWithType: AnalyzerBandConfig.EndFrequency
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndFrequency
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndFrequency
  Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.TresholdMult*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.TresholdMult*
        name: TresholdMult
        nameWithType: AnalyzerBandConfig.TresholdMult
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.TresholdMult
      VB:
      - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.TresholdMult*
        name: TresholdMult
        nameWithType: AnalyzerBandConfig.TresholdMult
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.TresholdMult
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.TresholdMult
  Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig
        name: AnalyzerBandConfig
        nameWithType: AnalyzerBandConfig
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig
      VB:
      - id: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig
        name: AnalyzerBandConfig
        nameWithType: AnalyzerBandConfig
        qualifiedName: Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig
    isDefinition: true
    commentId: T:Audio.AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig
  System.Single[]:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Spectrum*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Spectrum*
        name: Spectrum
        nameWithType: AnalyzedSpectrumConfig.Spectrum
        qualifiedName: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Spectrum
      VB:
      - id: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Spectrum*
        name: Spectrum
        nameWithType: AnalyzedSpectrumConfig.Spectrum
        qualifiedName: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Spectrum
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Spectrum
  Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Time*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Time*
        name: Time
        nameWithType: AnalyzedSpectrumConfig.Time
        qualifiedName: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Time
      VB:
      - id: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Time*
        name: Time
        nameWithType: AnalyzedSpectrumConfig.Time
        qualifiedName: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Time
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Time
  Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.HasPeak*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.HasPeak*
        name: HasPeak
        nameWithType: AnalyzedSpectrumConfig.HasPeak
        qualifiedName: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.HasPeak
      VB:
      - id: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.HasPeak*
        name: HasPeak
        nameWithType: AnalyzedSpectrumConfig.HasPeak
        qualifiedName: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.HasPeak
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.HasPeak
  System.Collections.Generic.List{System.Int32}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Int32}
  Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.PeakBands*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.PeakBands*
        name: PeakBands
        nameWithType: AnalyzedSpectrumConfig.PeakBands
        qualifiedName: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.PeakBands
      VB:
      - id: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.PeakBands*
        name: PeakBands
        nameWithType: AnalyzedSpectrumConfig.PeakBands
        qualifiedName: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.PeakBands
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.PeakBands
  System.Collections.Generic.List{Audio.AudioAnalysis.SpectrumConfigs.BeatConfig}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig
        name: BeatConfig
        nameWithType: BeatConfig
        qualifiedName: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig
        name: BeatConfig
        nameWithType: BeatConfig
        qualifiedName: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Audio.AudioAnalysis.SpectrumConfigs.BeatConfig}
  Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.BandBeatData*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.BandBeatData*
        name: BandBeatData
        nameWithType: AnalyzedSpectrumConfig.BandBeatData
        qualifiedName: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.BandBeatData
      VB:
      - id: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.BandBeatData*
        name: BandBeatData
        nameWithType: AnalyzedSpectrumConfig.BandBeatData
        qualifiedName: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.BandBeatData
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.BandBeatData
  Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig
        name: AnalyzedSpectrumConfig
        nameWithType: AnalyzedSpectrumConfig
        qualifiedName: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig
      VB:
      - id: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig
        name: AnalyzedSpectrumConfig
        nameWithType: AnalyzedSpectrumConfig
        qualifiedName: Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig
    isDefinition: true
    commentId: T:Audio.AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig
  Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.SpectralFlux*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.SpectralFlux*
        name: SpectralFlux
        nameWithType: BeatConfig.SpectralFlux
        qualifiedName: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.SpectralFlux
      VB:
      - id: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.SpectralFlux*
        name: SpectralFlux
        nameWithType: BeatConfig.SpectralFlux
        qualifiedName: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.SpectralFlux
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.SpectralFlux
  Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.Threshold*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.Threshold*
        name: Threshold
        nameWithType: BeatConfig.Threshold
        qualifiedName: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.Threshold
      VB:
      - id: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.Threshold*
        name: Threshold
        nameWithType: BeatConfig.Threshold
        qualifiedName: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.Threshold
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.Threshold
  Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.PrunedSpectralFlux*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.PrunedSpectralFlux*
        name: PrunedSpectralFlux
        nameWithType: BeatConfig.PrunedSpectralFlux
        qualifiedName: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.PrunedSpectralFlux
      VB:
      - id: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.PrunedSpectralFlux*
        name: PrunedSpectralFlux
        nameWithType: BeatConfig.PrunedSpectralFlux
        qualifiedName: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.PrunedSpectralFlux
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.PrunedSpectralFlux
  Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.Band*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.Band*
        name: Band
        nameWithType: BeatConfig.Band
        qualifiedName: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.Band
      VB:
      - id: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.Band*
        name: Band
        nameWithType: BeatConfig.Band
        qualifiedName: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.Band
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.Band
  Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.PeakBPM*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.PeakBPM*
        name: PeakBPM
        nameWithType: BeatConfig.PeakBPM
        qualifiedName: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.PeakBPM
      VB:
      - id: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.PeakBPM*
        name: PeakBPM
        nameWithType: BeatConfig.PeakBPM
        qualifiedName: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.PeakBPM
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.PeakBPM
  Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.IsPeak*:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.IsPeak*
        name: IsPeak
        nameWithType: BeatConfig.IsPeak
        qualifiedName: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.IsPeak
      VB:
      - id: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.IsPeak*
        name: IsPeak
        nameWithType: BeatConfig.IsPeak
        qualifiedName: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.IsPeak
    isDefinition: true
    commentId: Overload:Audio.AudioAnalysis.SpectrumConfigs.BeatConfig.IsPeak
  Audio.AudioAnalysis.SpectrumConfigs.BeatConfig:
    name:
      CSharp:
      - id: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig
        name: BeatConfig
        nameWithType: BeatConfig
        qualifiedName: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig
      VB:
      - id: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig
        name: BeatConfig
        nameWithType: BeatConfig
        qualifiedName: Audio.AudioAnalysis.SpectrumConfigs.BeatConfig
    isDefinition: true
    commentId: T:Audio.AudioAnalysis.SpectrumConfigs.BeatConfig
  Audio.AudioAnalysis.SpectrumConfigs:
    name:
      CSharp:
      - name: Audio.AudioAnalysis.SpectrumConfigs
        nameWithType: Audio.AudioAnalysis.SpectrumConfigs
        qualifiedName: Audio.AudioAnalysis.SpectrumConfigs
      VB:
      - name: Audio.AudioAnalysis.SpectrumConfigs
        nameWithType: Audio.AudioAnalysis.SpectrumConfigs
        qualifiedName: Audio.AudioAnalysis.SpectrumConfigs
    isDefinition: true
    commentId: N:Audio.AudioAnalysis.SpectrumConfigs
  AudioClip:
    name:
      CSharp:
      - id: AudioClip
        name: AudioClip
        nameWithType: AudioClip
        qualifiedName: AudioClip
        isExternal: true
      VB:
      - id: AudioClip
        name: AudioClip
        nameWithType: AudioClip
        qualifiedName: AudioClip
        isExternal: true
    isDefinition: true
  Audio.AudioProviders.AudioSampleProvider.getSamples*:
    name:
      CSharp:
      - id: Audio.AudioProviders.AudioSampleProvider.getSamples*
        name: getSamples
        nameWithType: AudioSampleProvider.getSamples
        qualifiedName: Audio.AudioProviders.AudioSampleProvider.getSamples
      VB:
      - id: Audio.AudioProviders.AudioSampleProvider.getSamples*
        name: getSamples
        nameWithType: AudioSampleProvider.getSamples
        qualifiedName: Audio.AudioProviders.AudioSampleProvider.getSamples
    isDefinition: true
    commentId: Overload:Audio.AudioProviders.AudioSampleProvider.getSamples
  Audio.AudioProviders.AudioSampleProvider.getMonoSamples*:
    name:
      CSharp:
      - id: Audio.AudioProviders.AudioSampleProvider.getMonoSamples*
        name: getMonoSamples
        nameWithType: AudioSampleProvider.getMonoSamples
        qualifiedName: Audio.AudioProviders.AudioSampleProvider.getMonoSamples
      VB:
      - id: Audio.AudioProviders.AudioSampleProvider.getMonoSamples*
        name: getMonoSamples
        nameWithType: AudioSampleProvider.getMonoSamples
        qualifiedName: Audio.AudioProviders.AudioSampleProvider.getMonoSamples
    isDefinition: true
    commentId: Overload:Audio.AudioProviders.AudioSampleProvider.getMonoSamples
  Audio.AudioProviders.AudioSampleProvider:
    name:
      CSharp:
      - id: Audio.AudioProviders.AudioSampleProvider
        name: AudioSampleProvider
        nameWithType: AudioSampleProvider
        qualifiedName: Audio.AudioProviders.AudioSampleProvider
      VB:
      - id: Audio.AudioProviders.AudioSampleProvider
        name: AudioSampleProvider
        nameWithType: AudioSampleProvider
        qualifiedName: Audio.AudioProviders.AudioSampleProvider
    isDefinition: true
    commentId: T:Audio.AudioProviders.AudioSampleProvider
  Audio.AudioProviders.Mp3Loader.LoadMp3*:
    name:
      CSharp:
      - id: Audio.AudioProviders.Mp3Loader.LoadMp3*
        name: LoadMp3
        nameWithType: Mp3Loader.LoadMp3
        qualifiedName: Audio.AudioProviders.Mp3Loader.LoadMp3
      VB:
      - id: Audio.AudioProviders.Mp3Loader.LoadMp3*
        name: LoadMp3
        nameWithType: Mp3Loader.LoadMp3
        qualifiedName: Audio.AudioProviders.Mp3Loader.LoadMp3
    isDefinition: true
    commentId: Overload:Audio.AudioProviders.Mp3Loader.LoadMp3
  Audio.AudioProviders.Mp3Loader:
    name:
      CSharp:
      - id: Audio.AudioProviders.Mp3Loader
        name: Mp3Loader
        nameWithType: Mp3Loader
        qualifiedName: Audio.AudioProviders.Mp3Loader
      VB:
      - id: Audio.AudioProviders.Mp3Loader
        name: Mp3Loader
        nameWithType: Mp3Loader
        qualifiedName: Audio.AudioProviders.Mp3Loader
    isDefinition: true
    commentId: T:Audio.AudioProviders.Mp3Loader
  Audio.AudioProviders.SpectrumProvider.#ctor*:
    name:
      CSharp:
      - id: Audio.AudioProviders.SpectrumProvider.#ctor*
        name: SpectrumProvider
        nameWithType: SpectrumProvider.SpectrumProvider
        qualifiedName: Audio.AudioProviders.SpectrumProvider.SpectrumProvider
      VB:
      - id: Audio.AudioProviders.SpectrumProvider.#ctor*
        name: SpectrumProvider
        nameWithType: SpectrumProvider.SpectrumProvider
        qualifiedName: Audio.AudioProviders.SpectrumProvider.SpectrumProvider
    isDefinition: true
    commentId: Overload:Audio.AudioProviders.SpectrumProvider.#ctor
  System.Collections.Generic.List{System.Double[]}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Double[]}
  Audio.AudioProviders.SpectrumProvider.getSpectrums*:
    name:
      CSharp:
      - id: Audio.AudioProviders.SpectrumProvider.getSpectrums*
        name: getSpectrums
        nameWithType: SpectrumProvider.getSpectrums
        qualifiedName: Audio.AudioProviders.SpectrumProvider.getSpectrums
      VB:
      - id: Audio.AudioProviders.SpectrumProvider.getSpectrums*
        name: getSpectrums
        nameWithType: SpectrumProvider.getSpectrums
        qualifiedName: Audio.AudioProviders.SpectrumProvider.getSpectrums
    isDefinition: true
    commentId: Overload:Audio.AudioProviders.SpectrumProvider.getSpectrums
  Audio.AudioProviders.SpectrumProvider.getSpectrumConfigs*:
    name:
      CSharp:
      - id: Audio.AudioProviders.SpectrumProvider.getSpectrumConfigs*
        name: getSpectrumConfigs
        nameWithType: SpectrumProvider.getSpectrumConfigs
        qualifiedName: Audio.AudioProviders.SpectrumProvider.getSpectrumConfigs
      VB:
      - id: Audio.AudioProviders.SpectrumProvider.getSpectrumConfigs*
        name: getSpectrumConfigs
        nameWithType: SpectrumProvider.getSpectrumConfigs
        qualifiedName: Audio.AudioProviders.SpectrumProvider.getSpectrumConfigs
    isDefinition: true
    commentId: Overload:Audio.AudioProviders.SpectrumProvider.getSpectrumConfigs
  Audio.AudioProviders.SpectrumProvider:
    name:
      CSharp:
      - id: Audio.AudioProviders.SpectrumProvider
        name: SpectrumProvider
        nameWithType: SpectrumProvider
        qualifiedName: Audio.AudioProviders.SpectrumProvider
      VB:
      - id: Audio.AudioProviders.SpectrumProvider
        name: SpectrumProvider
        nameWithType: SpectrumProvider
        qualifiedName: Audio.AudioProviders.SpectrumProvider
    isDefinition: true
    commentId: T:Audio.AudioProviders.SpectrumProvider
  Audio.AudioProviders:
    name:
      CSharp:
      - name: Audio.AudioProviders
        nameWithType: Audio.AudioProviders
        qualifiedName: Audio.AudioProviders
      VB:
      - name: Audio.AudioProviders
        nameWithType: Audio.AudioProviders
        qualifiedName: Audio.AudioProviders
    isDefinition: true
    commentId: N:Audio.AudioProviders
  SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone*:
    name:
      CSharp:
      - id: SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone*
        name: isDone
        nameWithType: BaseSpinnerLightEffectHandler.isDone
        qualifiedName: SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone
      VB:
      - id: SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone*
        name: isDone
        nameWithType: BaseSpinnerLightEffectHandler.isDone
        qualifiedName: SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone
    isDefinition: true
    commentId: Overload:SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone
  SpinnerLightEffects.BaseSpinnerLightEffectHandler.update*:
    name:
      CSharp:
      - id: SpinnerLightEffects.BaseSpinnerLightEffectHandler.update*
        name: update
        nameWithType: BaseSpinnerLightEffectHandler.update
        qualifiedName: SpinnerLightEffects.BaseSpinnerLightEffectHandler.update
      VB:
      - id: SpinnerLightEffects.BaseSpinnerLightEffectHandler.update*
        name: update
        nameWithType: BaseSpinnerLightEffectHandler.update
        qualifiedName: SpinnerLightEffects.BaseSpinnerLightEffectHandler.update
    isDefinition: true
    commentId: Overload:SpinnerLightEffects.BaseSpinnerLightEffectHandler.update
  SpinnerLightEffects.BaseSpinnerLightEffectHandler:
    name:
      CSharp:
      - id: SpinnerLightEffects.BaseSpinnerLightEffectHandler
        name: BaseSpinnerLightEffectHandler
        nameWithType: BaseSpinnerLightEffectHandler
        qualifiedName: SpinnerLightEffects.BaseSpinnerLightEffectHandler
      VB:
      - id: SpinnerLightEffects.BaseSpinnerLightEffectHandler
        name: BaseSpinnerLightEffectHandler
        nameWithType: BaseSpinnerLightEffectHandler
        qualifiedName: SpinnerLightEffects.BaseSpinnerLightEffectHandler
    isDefinition: true
    parent: SpinnerLightEffects
    commentId: T:SpinnerLightEffects.BaseSpinnerLightEffectHandler
  SpinnerLightEffects:
    name:
      CSharp:
      - name: SpinnerLightEffects
        nameWithType: SpinnerLightEffects
        qualifiedName: SpinnerLightEffects
      VB:
      - name: SpinnerLightEffects
        nameWithType: SpinnerLightEffects
        qualifiedName: SpinnerLightEffects
    isDefinition: true
    commentId: N:SpinnerLightEffects
  SpinnerLightEffects.BaseSpinnerLightEffectHandler._isDone:
    name:
      CSharp:
      - id: SpinnerLightEffects.BaseSpinnerLightEffectHandler._isDone
        name: _isDone
        nameWithType: BaseSpinnerLightEffectHandler._isDone
        qualifiedName: SpinnerLightEffects.BaseSpinnerLightEffectHandler._isDone
      VB:
      - id: SpinnerLightEffects.BaseSpinnerLightEffectHandler._isDone
        name: _isDone
        nameWithType: BaseSpinnerLightEffectHandler._isDone
        qualifiedName: SpinnerLightEffects.BaseSpinnerLightEffectHandler._isDone
    isDefinition: true
    parent: SpinnerLightEffects.BaseSpinnerLightEffectHandler
    commentId: F:SpinnerLightEffects.BaseSpinnerLightEffectHandler._isDone
  SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone:
    name:
      CSharp:
      - id: SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone
        name: isDone
        nameWithType: BaseSpinnerLightEffectHandler.isDone
        qualifiedName: SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone
        name: isDone
        nameWithType: BaseSpinnerLightEffectHandler.isDone
        qualifiedName: SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: SpinnerLightEffects.BaseSpinnerLightEffectHandler
    commentId: M:SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone
  System.Collections.Generic.List{SpinnerLight}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: SpinnerLight
        name: SpinnerLight
        nameWithType: SpinnerLight
        qualifiedName: SpinnerLight
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: SpinnerLight
        name: SpinnerLight
        nameWithType: SpinnerLight
        qualifiedName: SpinnerLight
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{SpinnerLight}
  SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.#ctor*:
    name:
      CSharp:
      - id: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.#ctor*
        name: FrontBackTransitionSpinnerLightEffectHandler
        nameWithType: FrontBackTransitionSpinnerLightEffectHandler.FrontBackTransitionSpinnerLightEffectHandler
        qualifiedName: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.FrontBackTransitionSpinnerLightEffectHandler
      VB:
      - id: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.#ctor*
        name: FrontBackTransitionSpinnerLightEffectHandler
        nameWithType: FrontBackTransitionSpinnerLightEffectHandler.FrontBackTransitionSpinnerLightEffectHandler
        qualifiedName: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.FrontBackTransitionSpinnerLightEffectHandler
    isDefinition: true
    commentId: Overload:SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.#ctor
  SpinnerLightEffects.BaseSpinnerLightEffectHandler.update:
    name:
      CSharp:
      - id: SpinnerLightEffects.BaseSpinnerLightEffectHandler.update
        name: update
        nameWithType: BaseSpinnerLightEffectHandler.update
        qualifiedName: SpinnerLightEffects.BaseSpinnerLightEffectHandler.update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: SpinnerLightEffects.BaseSpinnerLightEffectHandler.update
        name: update
        nameWithType: BaseSpinnerLightEffectHandler.update
        qualifiedName: SpinnerLightEffects.BaseSpinnerLightEffectHandler.update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: SpinnerLightEffects.BaseSpinnerLightEffectHandler
    commentId: M:SpinnerLightEffects.BaseSpinnerLightEffectHandler.update
  SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.update*:
    name:
      CSharp:
      - id: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.update*
        name: update
        nameWithType: FrontBackTransitionSpinnerLightEffectHandler.update
        qualifiedName: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.update
      VB:
      - id: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.update*
        name: update
        nameWithType: FrontBackTransitionSpinnerLightEffectHandler.update
        qualifiedName: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.update
    isDefinition: true
    commentId: Overload:SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.update
  SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler:
    name:
      CSharp:
      - id: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler
        name: FrontBackTransitionSpinnerLightEffectHandler
        nameWithType: FrontBackTransitionSpinnerLightEffectHandler
        qualifiedName: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler
      VB:
      - id: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler
        name: FrontBackTransitionSpinnerLightEffectHandler
        nameWithType: FrontBackTransitionSpinnerLightEffectHandler
        qualifiedName: SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler
    isDefinition: true
    commentId: T:SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler
  SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.#ctor*:
    name:
      CSharp:
      - id: SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.#ctor*
        name: BlinkAllSpinnerLightEffectHandler
        nameWithType: BlinkAllSpinnerLightEffectHandler.BlinkAllSpinnerLightEffectHandler
        qualifiedName: SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.BlinkAllSpinnerLightEffectHandler
      VB:
      - id: SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.#ctor*
        name: BlinkAllSpinnerLightEffectHandler
        nameWithType: BlinkAllSpinnerLightEffectHandler.BlinkAllSpinnerLightEffectHandler
        qualifiedName: SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.BlinkAllSpinnerLightEffectHandler
    isDefinition: true
    commentId: Overload:SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.#ctor
  SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.update*:
    name:
      CSharp:
      - id: SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.update*
        name: update
        nameWithType: BlinkAllSpinnerLightEffectHandler.update
        qualifiedName: SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.update
      VB:
      - id: SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.update*
        name: update
        nameWithType: BlinkAllSpinnerLightEffectHandler.update
        qualifiedName: SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.update
    isDefinition: true
    commentId: Overload:SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.update
  SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler:
    name:
      CSharp:
      - id: SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler
        name: BlinkAllSpinnerLightEffectHandler
        nameWithType: BlinkAllSpinnerLightEffectHandler
        qualifiedName: SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler
      VB:
      - id: SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler
        name: BlinkAllSpinnerLightEffectHandler
        nameWithType: BlinkAllSpinnerLightEffectHandler
        qualifiedName: SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler
    isDefinition: true
    commentId: T:SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler
  FileInfo:
    name:
      CSharp:
      - id: FileInfo
        name: FileInfo
        nameWithType: FileInfo
        qualifiedName: FileInfo
        isExternal: true
      VB:
      - id: FileInfo
        name: FileInfo
        nameWithType: FileInfo
        qualifiedName: FileInfo
        isExternal: true
    isDefinition: true
    commentId: '!:FileInfo'
  JsonIOHandler.JsonFileWriter.writeFile*:
    name:
      CSharp:
      - id: JsonIOHandler.JsonFileWriter.writeFile*
        name: writeFile
        nameWithType: JsonFileWriter.writeFile
        qualifiedName: JsonIOHandler.JsonFileWriter.writeFile
      VB:
      - id: JsonIOHandler.JsonFileWriter.writeFile*
        name: writeFile
        nameWithType: JsonFileWriter.writeFile
        qualifiedName: JsonIOHandler.JsonFileWriter.writeFile
    isDefinition: true
    commentId: Overload:JsonIOHandler.JsonFileWriter.writeFile
  JsonIOHandler.JsonFileWriter:
    name:
      CSharp:
      - id: JsonIOHandler.JsonFileWriter
        name: JsonFileWriter
        nameWithType: JsonFileWriter
        qualifiedName: JsonIOHandler.JsonFileWriter
      VB:
      - id: JsonIOHandler.JsonFileWriter
        name: JsonFileWriter
        nameWithType: JsonFileWriter
        qualifiedName: JsonIOHandler.JsonFileWriter
    isDefinition: true
    commentId: T:JsonIOHandler.JsonFileWriter
  System.Collections.Generic.List{HighscoreData}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: HighscoreData
        name: HighscoreData
        nameWithType: HighscoreData
        qualifiedName: HighscoreData
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: HighscoreData
        name: HighscoreData
        nameWithType: HighscoreData
        qualifiedName: HighscoreData
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{HighscoreData}
  JsonIOHandler.JsonFileReader.readHighscoreFile*:
    name:
      CSharp:
      - id: JsonIOHandler.JsonFileReader.readHighscoreFile*
        name: readHighscoreFile
        nameWithType: JsonFileReader.readHighscoreFile
        qualifiedName: JsonIOHandler.JsonFileReader.readHighscoreFile
      VB:
      - id: JsonIOHandler.JsonFileReader.readHighscoreFile*
        name: readHighscoreFile
        nameWithType: JsonFileReader.readHighscoreFile
        qualifiedName: JsonIOHandler.JsonFileReader.readHighscoreFile
    isDefinition: true
    commentId: Overload:JsonIOHandler.JsonFileReader.readHighscoreFile
  JsonIOHandler.JsonFileReader.readInfoFile*:
    name:
      CSharp:
      - id: JsonIOHandler.JsonFileReader.readInfoFile*
        name: readInfoFile
        nameWithType: JsonFileReader.readInfoFile
        qualifiedName: JsonIOHandler.JsonFileReader.readInfoFile
      VB:
      - id: JsonIOHandler.JsonFileReader.readInfoFile*
        name: readInfoFile
        nameWithType: JsonFileReader.readInfoFile
        qualifiedName: JsonIOHandler.JsonFileReader.readInfoFile
    isDefinition: true
    commentId: Overload:JsonIOHandler.JsonFileReader.readInfoFile
  JsonIOHandler.JsonFileReader.readMappingFile*:
    name:
      CSharp:
      - id: JsonIOHandler.JsonFileReader.readMappingFile*
        name: readMappingFile
        nameWithType: JsonFileReader.readMappingFile
        qualifiedName: JsonIOHandler.JsonFileReader.readMappingFile
      VB:
      - id: JsonIOHandler.JsonFileReader.readMappingFile*
        name: readMappingFile
        nameWithType: JsonFileReader.readMappingFile
        qualifiedName: JsonIOHandler.JsonFileReader.readMappingFile
    isDefinition: true
    commentId: Overload:JsonIOHandler.JsonFileReader.readMappingFile
  JsonIOHandler.JsonFileReader:
    name:
      CSharp:
      - id: JsonIOHandler.JsonFileReader
        name: JsonFileReader
        nameWithType: JsonFileReader
        qualifiedName: JsonIOHandler.JsonFileReader
      VB:
      - id: JsonIOHandler.JsonFileReader
        name: JsonFileReader
        nameWithType: JsonFileReader
        qualifiedName: JsonIOHandler.JsonFileReader
    isDefinition: true
    commentId: T:JsonIOHandler.JsonFileReader
  JsonIOHandler:
    name:
      CSharp:
      - name: JsonIOHandler
        nameWithType: JsonIOHandler
        qualifiedName: JsonIOHandler
      VB:
      - name: JsonIOHandler
        nameWithType: JsonIOHandler
        qualifiedName: JsonIOHandler
    isDefinition: true
    commentId: N:JsonIOHandler
  JsonStringBuilders.JsonHighscoreStringBuilder.setData*:
    name:
      CSharp:
      - id: JsonStringBuilders.JsonHighscoreStringBuilder.setData*
        name: setData
        nameWithType: JsonHighscoreStringBuilder.setData
        qualifiedName: JsonStringBuilders.JsonHighscoreStringBuilder.setData
      VB:
      - id: JsonStringBuilders.JsonHighscoreStringBuilder.setData*
        name: setData
        nameWithType: JsonHighscoreStringBuilder.setData
        qualifiedName: JsonStringBuilders.JsonHighscoreStringBuilder.setData
    isDefinition: true
    commentId: Overload:JsonStringBuilders.JsonHighscoreStringBuilder.setData
  JsonStringBuilders.JsonHighscoreStringBuilder.getJsonString*:
    name:
      CSharp:
      - id: JsonStringBuilders.JsonHighscoreStringBuilder.getJsonString*
        name: getJsonString
        nameWithType: JsonHighscoreStringBuilder.getJsonString
        qualifiedName: JsonStringBuilders.JsonHighscoreStringBuilder.getJsonString
      VB:
      - id: JsonStringBuilders.JsonHighscoreStringBuilder.getJsonString*
        name: getJsonString
        nameWithType: JsonHighscoreStringBuilder.getJsonString
        qualifiedName: JsonStringBuilders.JsonHighscoreStringBuilder.getJsonString
    isDefinition: true
    commentId: Overload:JsonStringBuilders.JsonHighscoreStringBuilder.getJsonString
  JsonStringBuilders.JsonHighscoreStringBuilder:
    name:
      CSharp:
      - id: JsonStringBuilders.JsonHighscoreStringBuilder
        name: JsonHighscoreStringBuilder
        nameWithType: JsonHighscoreStringBuilder
        qualifiedName: JsonStringBuilders.JsonHighscoreStringBuilder
      VB:
      - id: JsonStringBuilders.JsonHighscoreStringBuilder
        name: JsonHighscoreStringBuilder
        nameWithType: JsonHighscoreStringBuilder
        qualifiedName: JsonStringBuilders.JsonHighscoreStringBuilder
    isDefinition: true
    commentId: T:JsonStringBuilders.JsonHighscoreStringBuilder
  JsonStringBuilders.JsonMappingStringBuilder.setData*:
    name:
      CSharp:
      - id: JsonStringBuilders.JsonMappingStringBuilder.setData*
        name: setData
        nameWithType: JsonMappingStringBuilder.setData
        qualifiedName: JsonStringBuilders.JsonMappingStringBuilder.setData
      VB:
      - id: JsonStringBuilders.JsonMappingStringBuilder.setData*
        name: setData
        nameWithType: JsonMappingStringBuilder.setData
        qualifiedName: JsonStringBuilders.JsonMappingStringBuilder.setData
    isDefinition: true
    commentId: Overload:JsonStringBuilders.JsonMappingStringBuilder.setData
  JsonStringBuilders.JsonMappingStringBuilder.getJsonString*:
    name:
      CSharp:
      - id: JsonStringBuilders.JsonMappingStringBuilder.getJsonString*
        name: getJsonString
        nameWithType: JsonMappingStringBuilder.getJsonString
        qualifiedName: JsonStringBuilders.JsonMappingStringBuilder.getJsonString
      VB:
      - id: JsonStringBuilders.JsonMappingStringBuilder.getJsonString*
        name: getJsonString
        nameWithType: JsonMappingStringBuilder.getJsonString
        qualifiedName: JsonStringBuilders.JsonMappingStringBuilder.getJsonString
    isDefinition: true
    commentId: Overload:JsonStringBuilders.JsonMappingStringBuilder.getJsonString
  JsonStringBuilders.JsonMappingStringBuilder:
    name:
      CSharp:
      - id: JsonStringBuilders.JsonMappingStringBuilder
        name: JsonMappingStringBuilder
        nameWithType: JsonMappingStringBuilder
        qualifiedName: JsonStringBuilders.JsonMappingStringBuilder
      VB:
      - id: JsonStringBuilders.JsonMappingStringBuilder
        name: JsonMappingStringBuilder
        nameWithType: JsonMappingStringBuilder
        qualifiedName: JsonStringBuilders.JsonMappingStringBuilder
    isDefinition: true
    commentId: T:JsonStringBuilders.JsonMappingStringBuilder
  JsonStringBuilders.JsonInfoStringBuilder.getJsonString*:
    name:
      CSharp:
      - id: JsonStringBuilders.JsonInfoStringBuilder.getJsonString*
        name: getJsonString
        nameWithType: JsonInfoStringBuilder.getJsonString
        qualifiedName: JsonStringBuilders.JsonInfoStringBuilder.getJsonString
      VB:
      - id: JsonStringBuilders.JsonInfoStringBuilder.getJsonString*
        name: getJsonString
        nameWithType: JsonInfoStringBuilder.getJsonString
        qualifiedName: JsonStringBuilders.JsonInfoStringBuilder.getJsonString
    isDefinition: true
    commentId: Overload:JsonStringBuilders.JsonInfoStringBuilder.getJsonString
  JsonStringBuilders.JsonInfoStringBuilder:
    name:
      CSharp:
      - id: JsonStringBuilders.JsonInfoStringBuilder
        name: JsonInfoStringBuilder
        nameWithType: JsonInfoStringBuilder
        qualifiedName: JsonStringBuilders.JsonInfoStringBuilder
      VB:
      - id: JsonStringBuilders.JsonInfoStringBuilder
        name: JsonInfoStringBuilder
        nameWithType: JsonInfoStringBuilder
        qualifiedName: JsonStringBuilders.JsonInfoStringBuilder
    isDefinition: true
    commentId: T:JsonStringBuilders.JsonInfoStringBuilder
  JsonStringBuilders:
    name:
      CSharp:
      - name: JsonStringBuilders
        nameWithType: JsonStringBuilders
        qualifiedName: JsonStringBuilders
      VB:
      - name: JsonStringBuilders
        nameWithType: JsonStringBuilders
        qualifiedName: JsonStringBuilders
    isDefinition: true
    commentId: N:JsonStringBuilders
