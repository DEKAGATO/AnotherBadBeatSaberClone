id: cs.temp.dll
language: CSharp
name:
  Default: cs.temp.dll
qualifiedName:
  Default: cs.temp.dll
type: Assembly
modifiers: {}
items:
- id: Audio
  commentId: N:Audio
  language: CSharp
  name:
    CSharp: Audio
    VB: Audio
  nameWithType:
    CSharp: Audio
    VB: Audio
  qualifiedName:
    CSharp: Audio
    VB: Audio
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Audio.AudioController
    commentId: T:Audio.AudioController
    language: CSharp
    name:
      CSharp: AudioController
      VB: AudioController
    nameWithType:
      CSharp: AudioController
      VB: AudioController
    qualifiedName:
      CSharp: Audio.AudioController
      VB: Audio.AudioController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Audio
    source:
      id: AudioController
      path: ''
      startLine: 31
    summary: "\nLoads an audio file and then triggers the AudioAnalyzerHandler.\nFirst a .mp3 file or a .ogg file  (may also be named.egg for whatever reason, but it&apos;s exactly the same)\nis loaded.This can unforunately not happen in a thread, because functions from the Unity package are needed\nfor this, which are not threadsafe. May lead to small ~ 1 second spikes.\n\nAfter that, a Thread is created which handles the audio analysis, so that the main thread is not blocked and\nthe player can still move and look around while the processing is done.\n\nIf a beat mapping for the chosen audio file and the chosen difficulty level already exists, that mapping is\nloaded from cache and the audio analysis is skipped.This is much faster obviously.\nMappings are saved in the same json format as mappings from bsaber.com.This allows any custom mapping from\nexternal sources to also be loaded, unless they have bpm changes which is not supported and will mess up some\ntiming.\nAfter the loading is done, the Game scene is loaded.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class AudioController : MonoBehaviour'
        VB: >-
          Public Class AudioController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Audio.AudioController.testAudioSource
      commentId: F:Audio.AudioController.testAudioSource
      language: CSharp
      name:
        CSharp: testAudioSource
        VB: testAudioSource
      nameWithType:
        CSharp: AudioController.testAudioSource
        VB: AudioController.testAudioSource
      qualifiedName:
        CSharp: Audio.AudioController.testAudioSource
        VB: Audio.AudioController.testAudioSource
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio
      source:
        id: testAudioSource
        path: ''
        startLine: 33
      syntax:
        content:
          CSharp: public AudioSource testAudioSource
          VB: Public testAudioSource As AudioSource
        return:
          type: AudioSource
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Audio.AudioController.processAudioData
      commentId: M:Audio.AudioController.processAudioData
      language: CSharp
      name:
        CSharp: processAudioData()
        VB: processAudioData()
      nameWithType:
        CSharp: AudioController.processAudioData()
        VB: AudioController.processAudioData()
      qualifiedName:
        CSharp: Audio.AudioController.processAudioData()
        VB: Audio.AudioController.processAudioData()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Audio
      source:
        id: processAudioData
        path: ''
        startLine: 132
      syntax:
        content:
          CSharp: public void processAudioData()
          VB: Public Sub processAudioData
      overload: Audio.AudioController.processAudioData*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Audio.BeatMappingConfigs
  commentId: N:Audio.BeatMappingConfigs
  language: CSharp
  name:
    CSharp: Audio.BeatMappingConfigs
    VB: Audio.BeatMappingConfigs
  nameWithType:
    CSharp: Audio.BeatMappingConfigs
    VB: Audio.BeatMappingConfigs
  qualifiedName:
    CSharp: Audio.BeatMappingConfigs
    VB: Audio.BeatMappingConfigs
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Audio.BeatMappingConfigs.MappingContainer
    commentId: T:Audio.BeatMappingConfigs.MappingContainer
    language: CSharp
    name:
      CSharp: MappingContainer
      VB: MappingContainer
    nameWithType:
      CSharp: MappingContainer
      VB: MappingContainer
    qualifiedName:
      CSharp: Audio.BeatMappingConfigs.MappingContainer
      VB: Audio.BeatMappingConfigs.MappingContainer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Audio.BeatMappingConfigs
    source:
      id: MappingContainer
      path: ''
      startLine: 194
    summary: "\nContainer for all beat mapping information.\nThis contains lists of event configs, obstacle configs, note configs etc. - Basically all relevant\ninformatio needed to display a beat mapping in the game.\n\nThe mapping have to be sorted, because the audio data is analyzed in different bands, so the timing\nof the created configs is not nessecarily consecutive.\nThe configs are sorted based on the timing values during the song.\n"
    example: []
    syntax:
      content:
        CSharp: public class MappingContainer
        VB: Public Class MappingContainer
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Audio.BeatMappingConfigs.MappingContainer.EventData
      commentId: P:Audio.BeatMappingConfigs.MappingContainer.EventData
      language: CSharp
      name:
        CSharp: EventData
        VB: EventData
      nameWithType:
        CSharp: MappingContainer.EventData
        VB: MappingContainer.EventData
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.MappingContainer.EventData
        VB: Audio.BeatMappingConfigs.MappingContainer.EventData
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: EventData
        path: ''
        startLine: 196
      syntax:
        content:
          CSharp: public List<EventConfig> EventData { get; set; }
          VB: Public Property EventData As List(Of EventConfig)
        parameters: []
        return:
          type: System.Collections.Generic.List{Audio.BeatMappingConfigs.EventConfig}
      overload: Audio.BeatMappingConfigs.MappingContainer.EventData*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.MappingContainer.NoteData
      commentId: P:Audio.BeatMappingConfigs.MappingContainer.NoteData
      language: CSharp
      name:
        CSharp: NoteData
        VB: NoteData
      nameWithType:
        CSharp: MappingContainer.NoteData
        VB: MappingContainer.NoteData
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.MappingContainer.NoteData
        VB: Audio.BeatMappingConfigs.MappingContainer.NoteData
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: NoteData
        path: ''
        startLine: 197
      syntax:
        content:
          CSharp: public List<NoteConfig> NoteData { get; set; }
          VB: Public Property NoteData As List(Of NoteConfig)
        parameters: []
        return:
          type: System.Collections.Generic.List{Audio.BeatMappingConfigs.NoteConfig}
      overload: Audio.BeatMappingConfigs.MappingContainer.NoteData*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.MappingContainer.ObstacleData
      commentId: P:Audio.BeatMappingConfigs.MappingContainer.ObstacleData
      language: CSharp
      name:
        CSharp: ObstacleData
        VB: ObstacleData
      nameWithType:
        CSharp: MappingContainer.ObstacleData
        VB: MappingContainer.ObstacleData
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.MappingContainer.ObstacleData
        VB: Audio.BeatMappingConfigs.MappingContainer.ObstacleData
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: ObstacleData
        path: ''
        startLine: 198
      syntax:
        content:
          CSharp: public List<ObstacleConfig> ObstacleData { get; set; }
          VB: Public Property ObstacleData As List(Of ObstacleConfig)
        parameters: []
        return:
          type: System.Collections.Generic.List{Audio.BeatMappingConfigs.ObstacleConfig}
      overload: Audio.BeatMappingConfigs.MappingContainer.ObstacleData*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.MappingContainer.BookmarkData
      commentId: P:Audio.BeatMappingConfigs.MappingContainer.BookmarkData
      language: CSharp
      name:
        CSharp: BookmarkData
        VB: BookmarkData
      nameWithType:
        CSharp: MappingContainer.BookmarkData
        VB: MappingContainer.BookmarkData
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.MappingContainer.BookmarkData
        VB: Audio.BeatMappingConfigs.MappingContainer.BookmarkData
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: BookmarkData
        path: ''
        startLine: 199
      syntax:
        content:
          CSharp: public List<BookmarkConfig> BookmarkData { get; set; }
          VB: Public Property BookmarkData As List(Of BookmarkConfig)
        parameters: []
        return:
          type: System.Collections.Generic.List{Audio.BeatMappingConfigs.BookmarkConfig}
      overload: Audio.BeatMappingConfigs.MappingContainer.BookmarkData*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.MappingContainer.MappingInfo
      commentId: P:Audio.BeatMappingConfigs.MappingContainer.MappingInfo
      language: CSharp
      name:
        CSharp: MappingInfo
        VB: MappingInfo
      nameWithType:
        CSharp: MappingContainer.MappingInfo
        VB: MappingContainer.MappingInfo
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.MappingContainer.MappingInfo
        VB: Audio.BeatMappingConfigs.MappingContainer.MappingInfo
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: MappingInfo
        path: ''
        startLine: 200
      syntax:
        content:
          CSharp: public MappingInfo MappingInfo { get; set; }
          VB: Public Property MappingInfo As MappingInfo
        parameters: []
        return:
          type: Audio.BeatMappingConfigs.MappingInfo
      overload: Audio.BeatMappingConfigs.MappingContainer.MappingInfo*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.MappingContainer.sortMappings
      commentId: M:Audio.BeatMappingConfigs.MappingContainer.sortMappings
      language: CSharp
      name:
        CSharp: sortMappings()
        VB: sortMappings()
      nameWithType:
        CSharp: MappingContainer.sortMappings()
        VB: MappingContainer.sortMappings()
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.MappingContainer.sortMappings()
        VB: Audio.BeatMappingConfigs.MappingContainer.sortMappings()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: sortMappings
        path: ''
        startLine: 202
      syntax:
        content:
          CSharp: public void sortMappings()
          VB: Public Sub sortMappings
      overload: Audio.BeatMappingConfigs.MappingContainer.sortMappings*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Audio.BeatMappingConfigs.EventConfig
    commentId: T:Audio.BeatMappingConfigs.EventConfig
    language: CSharp
    name:
      CSharp: EventConfig
      VB: EventConfig
    nameWithType:
      CSharp: EventConfig
      VB: EventConfig
    qualifiedName:
      CSharp: Audio.BeatMappingConfigs.EventConfig
      VB: Audio.BeatMappingConfigs.EventConfig
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Audio.BeatMappingConfigs
    source:
      id: EventConfig
      path: ''
      startLine: 215
    example: []
    syntax:
      content:
        CSharp: public class EventConfig
        VB: Public Class EventConfig
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Audio.BeatMappingConfigs.EventConfig.Time
      commentId: P:Audio.BeatMappingConfigs.EventConfig.Time
      language: CSharp
      name:
        CSharp: Time
        VB: Time
      nameWithType:
        CSharp: EventConfig.Time
        VB: EventConfig.Time
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.EventConfig.Time
        VB: Audio.BeatMappingConfigs.EventConfig.Time
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: Time
        path: ''
        startLine: 223
      syntax:
        content:
          CSharp: public float Time { get; set; }
          VB: Public Property Time As Single
        parameters: []
        return:
          type: System.Single
      overload: Audio.BeatMappingConfigs.EventConfig.Time*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.EventConfig.Type
      commentId: P:Audio.BeatMappingConfigs.EventConfig.Type
      language: CSharp
      name:
        CSharp: Type
        VB: Type
      nameWithType:
        CSharp: EventConfig.Type
        VB: EventConfig.Type
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.EventConfig.Type
        VB: Audio.BeatMappingConfigs.EventConfig.Type
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: Type
        path: ''
        startLine: 224
      syntax:
        content:
          CSharp: public int Type { get; set; }
          VB: Public Property Type As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Audio.BeatMappingConfigs.EventConfig.Type*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.EventConfig.Value
      commentId: P:Audio.BeatMappingConfigs.EventConfig.Value
      language: CSharp
      name:
        CSharp: Value
        VB: Value
      nameWithType:
        CSharp: EventConfig.Value
        VB: EventConfig.Value
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.EventConfig.Value
        VB: Audio.BeatMappingConfigs.EventConfig.Value
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: Value
        path: ''
        startLine: 225
      syntax:
        content:
          CSharp: public int Value { get; set; }
          VB: Public Property Value As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Audio.BeatMappingConfigs.EventConfig.Value*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: Audio.BeatMappingConfigs.EventConfig.TYPES
    commentId: T:Audio.BeatMappingConfigs.EventConfig.TYPES
    language: CSharp
    name:
      CSharp: EventConfig.TYPES
      VB: EventConfig.TYPES
    nameWithType:
      CSharp: EventConfig.TYPES
      VB: EventConfig.TYPES
    qualifiedName:
      CSharp: Audio.BeatMappingConfigs.EventConfig.TYPES
      VB: Audio.BeatMappingConfigs.EventConfig.TYPES
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Audio.BeatMappingConfigs
    source:
      id: TYPES
      path: ''
      startLine: 217
    syntax:
      content:
        CSharp: public enum TYPES
        VB: Public Enum TYPES
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Audio.BeatMappingConfigs.EventConfig.TYPES.BLINK_LASERS
      commentId: F:Audio.BeatMappingConfigs.EventConfig.TYPES.BLINK_LASERS
      language: CSharp
      name:
        CSharp: BLINK_LASERS
        VB: BLINK_LASERS
      nameWithType:
        CSharp: EventConfig.TYPES.BLINK_LASERS
        VB: EventConfig.TYPES.BLINK_LASERS
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.EventConfig.TYPES.BLINK_LASERS
        VB: Audio.BeatMappingConfigs.EventConfig.TYPES.BLINK_LASERS
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: BLINK_LASERS
        path: ''
        startLine: 219
      syntax:
        content:
          CSharp: BLINK_LASERS = 0
          VB: BLINK_LASERS = 0
        return:
          type: Audio.BeatMappingConfigs.EventConfig.TYPES
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.EventConfig.TYPES.ROTATE_LIGHTS_1
      commentId: F:Audio.BeatMappingConfigs.EventConfig.TYPES.ROTATE_LIGHTS_1
      language: CSharp
      name:
        CSharp: ROTATE_LIGHTS_1
        VB: ROTATE_LIGHTS_1
      nameWithType:
        CSharp: EventConfig.TYPES.ROTATE_LIGHTS_1
        VB: EventConfig.TYPES.ROTATE_LIGHTS_1
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.EventConfig.TYPES.ROTATE_LIGHTS_1
        VB: Audio.BeatMappingConfigs.EventConfig.TYPES.ROTATE_LIGHTS_1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: ROTATE_LIGHTS_1
        path: ''
        startLine: 219
      syntax:
        content:
          CSharp: ROTATE_LIGHTS_1 = 1
          VB: ROTATE_LIGHTS_1 = 1
        return:
          type: Audio.BeatMappingConfigs.EventConfig.TYPES
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.EventConfig.TYPES.ROTATE_LIGHTS_2
      commentId: F:Audio.BeatMappingConfigs.EventConfig.TYPES.ROTATE_LIGHTS_2
      language: CSharp
      name:
        CSharp: ROTATE_LIGHTS_2
        VB: ROTATE_LIGHTS_2
      nameWithType:
        CSharp: EventConfig.TYPES.ROTATE_LIGHTS_2
        VB: EventConfig.TYPES.ROTATE_LIGHTS_2
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.EventConfig.TYPES.ROTATE_LIGHTS_2
        VB: Audio.BeatMappingConfigs.EventConfig.TYPES.ROTATE_LIGHTS_2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: ROTATE_LIGHTS_2
        path: ''
        startLine: 219
      syntax:
        content:
          CSharp: ROTATE_LIGHTS_2 = 2
          VB: ROTATE_LIGHTS_2 = 2
        return:
          type: Audio.BeatMappingConfigs.EventConfig.TYPES
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.EventConfig.TYPES.ROTATE_LIGHTS_3
      commentId: F:Audio.BeatMappingConfigs.EventConfig.TYPES.ROTATE_LIGHTS_3
      language: CSharp
      name:
        CSharp: ROTATE_LIGHTS_3
        VB: ROTATE_LIGHTS_3
      nameWithType:
        CSharp: EventConfig.TYPES.ROTATE_LIGHTS_3
        VB: EventConfig.TYPES.ROTATE_LIGHTS_3
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.EventConfig.TYPES.ROTATE_LIGHTS_3
        VB: Audio.BeatMappingConfigs.EventConfig.TYPES.ROTATE_LIGHTS_3
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: ROTATE_LIGHTS_3
        path: ''
        startLine: 219
      syntax:
        content:
          CSharp: ROTATE_LIGHTS_3 = 3
          VB: ROTATE_LIGHTS_3 = 3
        return:
          type: Audio.BeatMappingConfigs.EventConfig.TYPES
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.EventConfig.TYPES.BLINK_LASERS_1
      commentId: F:Audio.BeatMappingConfigs.EventConfig.TYPES.BLINK_LASERS_1
      language: CSharp
      name:
        CSharp: BLINK_LASERS_1
        VB: BLINK_LASERS_1
      nameWithType:
        CSharp: EventConfig.TYPES.BLINK_LASERS_1
        VB: EventConfig.TYPES.BLINK_LASERS_1
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.EventConfig.TYPES.BLINK_LASERS_1
        VB: Audio.BeatMappingConfigs.EventConfig.TYPES.BLINK_LASERS_1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: BLINK_LASERS_1
        path: ''
        startLine: 220
      syntax:
        content:
          CSharp: BLINK_LASERS_1 = 4
          VB: BLINK_LASERS_1 = 4
        return:
          type: Audio.BeatMappingConfigs.EventConfig.TYPES
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.EventConfig.TYPES.BLINK_LASERS_2
      commentId: F:Audio.BeatMappingConfigs.EventConfig.TYPES.BLINK_LASERS_2
      language: CSharp
      name:
        CSharp: BLINK_LASERS_2
        VB: BLINK_LASERS_2
      nameWithType:
        CSharp: EventConfig.TYPES.BLINK_LASERS_2
        VB: EventConfig.TYPES.BLINK_LASERS_2
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.EventConfig.TYPES.BLINK_LASERS_2
        VB: Audio.BeatMappingConfigs.EventConfig.TYPES.BLINK_LASERS_2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: BLINK_LASERS_2
        path: ''
        startLine: 220
      syntax:
        content:
          CSharp: BLINK_LASERS_2 = 5
          VB: BLINK_LASERS_2 = 5
        return:
          type: Audio.BeatMappingConfigs.EventConfig.TYPES
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.EventConfig.TYPES.CHANGE_SPINNER_DIRECTION
      commentId: F:Audio.BeatMappingConfigs.EventConfig.TYPES.CHANGE_SPINNER_DIRECTION
      language: CSharp
      name:
        CSharp: CHANGE_SPINNER_DIRECTION
        VB: CHANGE_SPINNER_DIRECTION
      nameWithType:
        CSharp: EventConfig.TYPES.CHANGE_SPINNER_DIRECTION
        VB: EventConfig.TYPES.CHANGE_SPINNER_DIRECTION
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.EventConfig.TYPES.CHANGE_SPINNER_DIRECTION
        VB: Audio.BeatMappingConfigs.EventConfig.TYPES.CHANGE_SPINNER_DIRECTION
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: CHANGE_SPINNER_DIRECTION
        path: ''
        startLine: 220
      syntax:
        content:
          CSharp: CHANGE_SPINNER_DIRECTION = 6
          VB: CHANGE_SPINNER_DIRECTION = 6
        return:
          type: Audio.BeatMappingConfigs.EventConfig.TYPES
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.EventConfig.TYPES.CHANGE_SPINNER_SPEED
      commentId: F:Audio.BeatMappingConfigs.EventConfig.TYPES.CHANGE_SPINNER_SPEED
      language: CSharp
      name:
        CSharp: CHANGE_SPINNER_SPEED
        VB: CHANGE_SPINNER_SPEED
      nameWithType:
        CSharp: EventConfig.TYPES.CHANGE_SPINNER_SPEED
        VB: EventConfig.TYPES.CHANGE_SPINNER_SPEED
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.EventConfig.TYPES.CHANGE_SPINNER_SPEED
        VB: Audio.BeatMappingConfigs.EventConfig.TYPES.CHANGE_SPINNER_SPEED
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: CHANGE_SPINNER_SPEED
        path: ''
        startLine: 220
      syntax:
        content:
          CSharp: CHANGE_SPINNER_SPEED = 7
          VB: CHANGE_SPINNER_SPEED = 7
        return:
          type: Audio.BeatMappingConfigs.EventConfig.TYPES
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Audio.BeatMappingConfigs.NoteConfig
    commentId: T:Audio.BeatMappingConfigs.NoteConfig
    language: CSharp
    name:
      CSharp: NoteConfig
      VB: NoteConfig
    nameWithType:
      CSharp: NoteConfig
      VB: NoteConfig
    qualifiedName:
      CSharp: Audio.BeatMappingConfigs.NoteConfig
      VB: Audio.BeatMappingConfigs.NoteConfig
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Audio.BeatMappingConfigs
    source:
      id: NoteConfig
      path: ''
      startLine: 232
    example: []
    syntax:
      content:
        CSharp: public class NoteConfig
        VB: Public Class NoteConfig
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_180
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_180
      language: CSharp
      name:
        CSharp: CUT_DIRECTION_180
        VB: CUT_DIRECTION_180
      nameWithType:
        CSharp: NoteConfig.CUT_DIRECTION_180
        VB: NoteConfig.CUT_DIRECTION_180
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_180
        VB: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_180
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: CUT_DIRECTION_180
        path: ''
        startLine: 234
      syntax:
        content:
          CSharp: public const int CUT_DIRECTION_180 = 0
          VB: Public Const CUT_DIRECTION_180 As Integer = 0
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_0
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_0
      language: CSharp
      name:
        CSharp: CUT_DIRECTION_0
        VB: CUT_DIRECTION_0
      nameWithType:
        CSharp: NoteConfig.CUT_DIRECTION_0
        VB: NoteConfig.CUT_DIRECTION_0
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_0
        VB: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_0
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: CUT_DIRECTION_0
        path: ''
        startLine: 235
      syntax:
        content:
          CSharp: public const int CUT_DIRECTION_0 = 1
          VB: Public Const CUT_DIRECTION_0 As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_90
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_90
      language: CSharp
      name:
        CSharp: CUT_DIRECTION_90
        VB: CUT_DIRECTION_90
      nameWithType:
        CSharp: NoteConfig.CUT_DIRECTION_90
        VB: NoteConfig.CUT_DIRECTION_90
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_90
        VB: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_90
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: CUT_DIRECTION_90
        path: ''
        startLine: 236
      syntax:
        content:
          CSharp: public const int CUT_DIRECTION_90 = 2
          VB: Public Const CUT_DIRECTION_90 As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_270
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_270
      language: CSharp
      name:
        CSharp: CUT_DIRECTION_270
        VB: CUT_DIRECTION_270
      nameWithType:
        CSharp: NoteConfig.CUT_DIRECTION_270
        VB: NoteConfig.CUT_DIRECTION_270
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_270
        VB: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_270
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: CUT_DIRECTION_270
        path: ''
        startLine: 237
      syntax:
        content:
          CSharp: public const int CUT_DIRECTION_270 = 3
          VB: Public Const CUT_DIRECTION_270 As Integer = 3
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_135
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_135
      language: CSharp
      name:
        CSharp: CUT_DIRECTION_135
        VB: CUT_DIRECTION_135
      nameWithType:
        CSharp: NoteConfig.CUT_DIRECTION_135
        VB: NoteConfig.CUT_DIRECTION_135
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_135
        VB: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_135
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: CUT_DIRECTION_135
        path: ''
        startLine: 239
      syntax:
        content:
          CSharp: public const int CUT_DIRECTION_135 = 4
          VB: Public Const CUT_DIRECTION_135 As Integer = 4
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_225
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_225
      language: CSharp
      name:
        CSharp: CUT_DIRECTION_225
        VB: CUT_DIRECTION_225
      nameWithType:
        CSharp: NoteConfig.CUT_DIRECTION_225
        VB: NoteConfig.CUT_DIRECTION_225
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_225
        VB: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_225
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: CUT_DIRECTION_225
        path: ''
        startLine: 240
      syntax:
        content:
          CSharp: public const int CUT_DIRECTION_225 = 5
          VB: Public Const CUT_DIRECTION_225 As Integer = 5
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_45
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_45
      language: CSharp
      name:
        CSharp: CUT_DIRECTION_45
        VB: CUT_DIRECTION_45
      nameWithType:
        CSharp: NoteConfig.CUT_DIRECTION_45
        VB: NoteConfig.CUT_DIRECTION_45
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_45
        VB: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_45
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: CUT_DIRECTION_45
        path: ''
        startLine: 241
      syntax:
        content:
          CSharp: public const int CUT_DIRECTION_45 = 6
          VB: Public Const CUT_DIRECTION_45 As Integer = 6
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_315
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_315
      language: CSharp
      name:
        CSharp: CUT_DIRECTION_315
        VB: CUT_DIRECTION_315
      nameWithType:
        CSharp: NoteConfig.CUT_DIRECTION_315
        VB: NoteConfig.CUT_DIRECTION_315
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_315
        VB: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_315
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: CUT_DIRECTION_315
        path: ''
        startLine: 242
      syntax:
        content:
          CSharp: public const int CUT_DIRECTION_315 = 7
          VB: Public Const CUT_DIRECTION_315 As Integer = 7
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_NONE
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_NONE
      language: CSharp
      name:
        CSharp: CUT_DIRECTION_NONE
        VB: CUT_DIRECTION_NONE
      nameWithType:
        CSharp: NoteConfig.CUT_DIRECTION_NONE
        VB: NoteConfig.CUT_DIRECTION_NONE
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_NONE
        VB: Audio.BeatMappingConfigs.NoteConfig.CUT_DIRECTION_NONE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: CUT_DIRECTION_NONE
        path: ''
        startLine: 244
      syntax:
        content:
          CSharp: public const int CUT_DIRECTION_NONE = 8
          VB: Public Const CUT_DIRECTION_NONE As Integer = 8
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.LINE_INDEX_0
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.LINE_INDEX_0
      language: CSharp
      name:
        CSharp: LINE_INDEX_0
        VB: LINE_INDEX_0
      nameWithType:
        CSharp: NoteConfig.LINE_INDEX_0
        VB: NoteConfig.LINE_INDEX_0
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.LINE_INDEX_0
        VB: Audio.BeatMappingConfigs.NoteConfig.LINE_INDEX_0
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: LINE_INDEX_0
        path: ''
        startLine: 246
      syntax:
        content:
          CSharp: public const int LINE_INDEX_0 = 0
          VB: Public Const LINE_INDEX_0 As Integer = 0
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.LINE_INDEX_1
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.LINE_INDEX_1
      language: CSharp
      name:
        CSharp: LINE_INDEX_1
        VB: LINE_INDEX_1
      nameWithType:
        CSharp: NoteConfig.LINE_INDEX_1
        VB: NoteConfig.LINE_INDEX_1
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.LINE_INDEX_1
        VB: Audio.BeatMappingConfigs.NoteConfig.LINE_INDEX_1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: LINE_INDEX_1
        path: ''
        startLine: 247
      syntax:
        content:
          CSharp: public const int LINE_INDEX_1 = 1
          VB: Public Const LINE_INDEX_1 As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.LINE_INDEX_2
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.LINE_INDEX_2
      language: CSharp
      name:
        CSharp: LINE_INDEX_2
        VB: LINE_INDEX_2
      nameWithType:
        CSharp: NoteConfig.LINE_INDEX_2
        VB: NoteConfig.LINE_INDEX_2
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.LINE_INDEX_2
        VB: Audio.BeatMappingConfigs.NoteConfig.LINE_INDEX_2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: LINE_INDEX_2
        path: ''
        startLine: 248
      syntax:
        content:
          CSharp: public const int LINE_INDEX_2 = 2
          VB: Public Const LINE_INDEX_2 As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.LINE_INDEX_3
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.LINE_INDEX_3
      language: CSharp
      name:
        CSharp: LINE_INDEX_3
        VB: LINE_INDEX_3
      nameWithType:
        CSharp: NoteConfig.LINE_INDEX_3
        VB: NoteConfig.LINE_INDEX_3
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.LINE_INDEX_3
        VB: Audio.BeatMappingConfigs.NoteConfig.LINE_INDEX_3
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: LINE_INDEX_3
        path: ''
        startLine: 249
      syntax:
        content:
          CSharp: public const int LINE_INDEX_3 = 3
          VB: Public Const LINE_INDEX_3 As Integer = 3
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.LINE_LAYER_0
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.LINE_LAYER_0
      language: CSharp
      name:
        CSharp: LINE_LAYER_0
        VB: LINE_LAYER_0
      nameWithType:
        CSharp: NoteConfig.LINE_LAYER_0
        VB: NoteConfig.LINE_LAYER_0
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.LINE_LAYER_0
        VB: Audio.BeatMappingConfigs.NoteConfig.LINE_LAYER_0
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: LINE_LAYER_0
        path: ''
        startLine: 251
      syntax:
        content:
          CSharp: public const int LINE_LAYER_0 = 0
          VB: Public Const LINE_LAYER_0 As Integer = 0
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.LINE_LAYER_1
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.LINE_LAYER_1
      language: CSharp
      name:
        CSharp: LINE_LAYER_1
        VB: LINE_LAYER_1
      nameWithType:
        CSharp: NoteConfig.LINE_LAYER_1
        VB: NoteConfig.LINE_LAYER_1
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.LINE_LAYER_1
        VB: Audio.BeatMappingConfigs.NoteConfig.LINE_LAYER_1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: LINE_LAYER_1
        path: ''
        startLine: 252
      syntax:
        content:
          CSharp: public const int LINE_LAYER_1 = 1
          VB: Public Const LINE_LAYER_1 As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.LINE_LAYER_2
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.LINE_LAYER_2
      language: CSharp
      name:
        CSharp: LINE_LAYER_2
        VB: LINE_LAYER_2
      nameWithType:
        CSharp: NoteConfig.LINE_LAYER_2
        VB: NoteConfig.LINE_LAYER_2
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.LINE_LAYER_2
        VB: Audio.BeatMappingConfigs.NoteConfig.LINE_LAYER_2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: LINE_LAYER_2
        path: ''
        startLine: 253
      syntax:
        content:
          CSharp: public const int LINE_LAYER_2 = 2
          VB: Public Const LINE_LAYER_2 As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.LINE_LAYER_3
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.LINE_LAYER_3
      language: CSharp
      name:
        CSharp: LINE_LAYER_3
        VB: LINE_LAYER_3
      nameWithType:
        CSharp: NoteConfig.LINE_LAYER_3
        VB: NoteConfig.LINE_LAYER_3
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.LINE_LAYER_3
        VB: Audio.BeatMappingConfigs.NoteConfig.LINE_LAYER_3
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: LINE_LAYER_3
        path: ''
        startLine: 254
      syntax:
        content:
          CSharp: public const int LINE_LAYER_3 = 3
          VB: Public Const LINE_LAYER_3 As Integer = 3
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.NOTE_TYPE_LEFT
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.NOTE_TYPE_LEFT
      language: CSharp
      name:
        CSharp: NOTE_TYPE_LEFT
        VB: NOTE_TYPE_LEFT
      nameWithType:
        CSharp: NoteConfig.NOTE_TYPE_LEFT
        VB: NoteConfig.NOTE_TYPE_LEFT
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.NOTE_TYPE_LEFT
        VB: Audio.BeatMappingConfigs.NoteConfig.NOTE_TYPE_LEFT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: NOTE_TYPE_LEFT
        path: ''
        startLine: 256
      syntax:
        content:
          CSharp: public const int NOTE_TYPE_LEFT = 0
          VB: Public Const NOTE_TYPE_LEFT As Integer = 0
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.NOTE_TYPE_RIGHT
      commentId: F:Audio.BeatMappingConfigs.NoteConfig.NOTE_TYPE_RIGHT
      language: CSharp
      name:
        CSharp: NOTE_TYPE_RIGHT
        VB: NOTE_TYPE_RIGHT
      nameWithType:
        CSharp: NoteConfig.NOTE_TYPE_RIGHT
        VB: NoteConfig.NOTE_TYPE_RIGHT
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.NOTE_TYPE_RIGHT
        VB: Audio.BeatMappingConfigs.NoteConfig.NOTE_TYPE_RIGHT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: NOTE_TYPE_RIGHT
        path: ''
        startLine: 257
      syntax:
        content:
          CSharp: public const int NOTE_TYPE_RIGHT = 1
          VB: Public Const NOTE_TYPE_RIGHT As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Audio.BeatMappingConfigs.NoteConfig.Time
      commentId: P:Audio.BeatMappingConfigs.NoteConfig.Time
      language: CSharp
      name:
        CSharp: Time
        VB: Time
      nameWithType:
        CSharp: NoteConfig.Time
        VB: NoteConfig.Time
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.Time
        VB: Audio.BeatMappingConfigs.NoteConfig.Time
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: Time
        path: ''
        startLine: 259
      syntax:
        content:
          CSharp: public float Time { get; set; }
          VB: Public Property Time As Single
        parameters: []
        return:
          type: System.Single
      overload: Audio.BeatMappingConfigs.NoteConfig.Time*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.NoteConfig.LineIndex
      commentId: P:Audio.BeatMappingConfigs.NoteConfig.LineIndex
      language: CSharp
      name:
        CSharp: LineIndex
        VB: LineIndex
      nameWithType:
        CSharp: NoteConfig.LineIndex
        VB: NoteConfig.LineIndex
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.LineIndex
        VB: Audio.BeatMappingConfigs.NoteConfig.LineIndex
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: LineIndex
        path: ''
        startLine: 260
      syntax:
        content:
          CSharp: public int LineIndex { get; set; }
          VB: Public Property LineIndex As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Audio.BeatMappingConfigs.NoteConfig.LineIndex*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.NoteConfig.LineLayer
      commentId: P:Audio.BeatMappingConfigs.NoteConfig.LineLayer
      language: CSharp
      name:
        CSharp: LineLayer
        VB: LineLayer
      nameWithType:
        CSharp: NoteConfig.LineLayer
        VB: NoteConfig.LineLayer
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.LineLayer
        VB: Audio.BeatMappingConfigs.NoteConfig.LineLayer
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: LineLayer
        path: ''
        startLine: 261
      syntax:
        content:
          CSharp: public int LineLayer { get; set; }
          VB: Public Property LineLayer As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Audio.BeatMappingConfigs.NoteConfig.LineLayer*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.NoteConfig.Type
      commentId: P:Audio.BeatMappingConfigs.NoteConfig.Type
      language: CSharp
      name:
        CSharp: Type
        VB: Type
      nameWithType:
        CSharp: NoteConfig.Type
        VB: NoteConfig.Type
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.Type
        VB: Audio.BeatMappingConfigs.NoteConfig.Type
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: Type
        path: ''
        startLine: 262
      syntax:
        content:
          CSharp: public int Type { get; set; }
          VB: Public Property Type As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Audio.BeatMappingConfigs.NoteConfig.Type*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.NoteConfig.CutDirection
      commentId: P:Audio.BeatMappingConfigs.NoteConfig.CutDirection
      language: CSharp
      name:
        CSharp: CutDirection
        VB: CutDirection
      nameWithType:
        CSharp: NoteConfig.CutDirection
        VB: NoteConfig.CutDirection
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.CutDirection
        VB: Audio.BeatMappingConfigs.NoteConfig.CutDirection
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: CutDirection
        path: ''
        startLine: 263
      syntax:
        content:
          CSharp: public int CutDirection { get; set; }
          VB: Public Property CutDirection As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Audio.BeatMappingConfigs.NoteConfig.CutDirection*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.NoteConfig.BelongsToDoubleNote
      commentId: P:Audio.BeatMappingConfigs.NoteConfig.BelongsToDoubleNote
      language: CSharp
      name:
        CSharp: BelongsToDoubleNote
        VB: BelongsToDoubleNote
      nameWithType:
        CSharp: NoteConfig.BelongsToDoubleNote
        VB: NoteConfig.BelongsToDoubleNote
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.BelongsToDoubleNote
        VB: Audio.BeatMappingConfigs.NoteConfig.BelongsToDoubleNote
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: BelongsToDoubleNote
        path: ''
        startLine: 264
      syntax:
        content:
          CSharp: public bool BelongsToDoubleNote { get; set; }
          VB: Public Property BelongsToDoubleNote As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Audio.BeatMappingConfigs.NoteConfig.BelongsToDoubleNote*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.NoteConfig.ObstacleLineIndex
      commentId: P:Audio.BeatMappingConfigs.NoteConfig.ObstacleLineIndex
      language: CSharp
      name:
        CSharp: ObstacleLineIndex
        VB: ObstacleLineIndex
      nameWithType:
        CSharp: NoteConfig.ObstacleLineIndex
        VB: NoteConfig.ObstacleLineIndex
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.NoteConfig.ObstacleLineIndex
        VB: Audio.BeatMappingConfigs.NoteConfig.ObstacleLineIndex
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: ObstacleLineIndex
        path: ''
        startLine: 265
      syntax:
        content:
          CSharp: public int ObstacleLineIndex { get; set; }
          VB: Public Property ObstacleLineIndex As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Audio.BeatMappingConfigs.NoteConfig.ObstacleLineIndex*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: Audio.BeatMappingConfigs.ObstacleConfig
    commentId: T:Audio.BeatMappingConfigs.ObstacleConfig
    language: CSharp
    name:
      CSharp: ObstacleConfig
      VB: ObstacleConfig
    nameWithType:
      CSharp: ObstacleConfig
      VB: ObstacleConfig
    qualifiedName:
      CSharp: Audio.BeatMappingConfigs.ObstacleConfig
      VB: Audio.BeatMappingConfigs.ObstacleConfig
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Audio.BeatMappingConfigs
    source:
      id: ObstacleConfig
      path: ''
      startLine: 273
    example: []
    syntax:
      content:
        CSharp: public class ObstacleConfig
        VB: Public Class ObstacleConfig
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Audio.BeatMappingConfigs.ObstacleConfig.Time
      commentId: P:Audio.BeatMappingConfigs.ObstacleConfig.Time
      language: CSharp
      name:
        CSharp: Time
        VB: Time
      nameWithType:
        CSharp: ObstacleConfig.Time
        VB: ObstacleConfig.Time
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.ObstacleConfig.Time
        VB: Audio.BeatMappingConfigs.ObstacleConfig.Time
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: Time
        path: ''
        startLine: 275
      syntax:
        content:
          CSharp: public float Time { get; set; }
          VB: Public Property Time As Single
        parameters: []
        return:
          type: System.Single
      overload: Audio.BeatMappingConfigs.ObstacleConfig.Time*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.ObstacleConfig.LineIndex
      commentId: P:Audio.BeatMappingConfigs.ObstacleConfig.LineIndex
      language: CSharp
      name:
        CSharp: LineIndex
        VB: LineIndex
      nameWithType:
        CSharp: ObstacleConfig.LineIndex
        VB: ObstacleConfig.LineIndex
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.ObstacleConfig.LineIndex
        VB: Audio.BeatMappingConfigs.ObstacleConfig.LineIndex
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: LineIndex
        path: ''
        startLine: 276
      syntax:
        content:
          CSharp: public int LineIndex { get; set; }
          VB: Public Property LineIndex As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Audio.BeatMappingConfigs.ObstacleConfig.LineIndex*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.ObstacleConfig.Type
      commentId: P:Audio.BeatMappingConfigs.ObstacleConfig.Type
      language: CSharp
      name:
        CSharp: Type
        VB: Type
      nameWithType:
        CSharp: ObstacleConfig.Type
        VB: ObstacleConfig.Type
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.ObstacleConfig.Type
        VB: Audio.BeatMappingConfigs.ObstacleConfig.Type
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: Type
        path: ''
        startLine: 277
      syntax:
        content:
          CSharp: public int Type { get; set; }
          VB: Public Property Type As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Audio.BeatMappingConfigs.ObstacleConfig.Type*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.ObstacleConfig.Duration
      commentId: P:Audio.BeatMappingConfigs.ObstacleConfig.Duration
      language: CSharp
      name:
        CSharp: Duration
        VB: Duration
      nameWithType:
        CSharp: ObstacleConfig.Duration
        VB: ObstacleConfig.Duration
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.ObstacleConfig.Duration
        VB: Audio.BeatMappingConfigs.ObstacleConfig.Duration
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: Duration
        path: ''
        startLine: 278
      syntax:
        content:
          CSharp: public float Duration { get; set; }
          VB: Public Property Duration As Single
        parameters: []
        return:
          type: System.Single
      overload: Audio.BeatMappingConfigs.ObstacleConfig.Duration*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.ObstacleConfig.Width
      commentId: P:Audio.BeatMappingConfigs.ObstacleConfig.Width
      language: CSharp
      name:
        CSharp: Width
        VB: Width
      nameWithType:
        CSharp: ObstacleConfig.Width
        VB: ObstacleConfig.Width
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.ObstacleConfig.Width
        VB: Audio.BeatMappingConfigs.ObstacleConfig.Width
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: Width
        path: ''
        startLine: 279
      syntax:
        content:
          CSharp: public float Width { get; set; }
          VB: Public Property Width As Single
        parameters: []
        return:
          type: System.Single
      overload: Audio.BeatMappingConfigs.ObstacleConfig.Width*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: Audio.BeatMappingConfigs.BookmarkConfig
    commentId: T:Audio.BeatMappingConfigs.BookmarkConfig
    language: CSharp
    name:
      CSharp: BookmarkConfig
      VB: BookmarkConfig
    nameWithType:
      CSharp: BookmarkConfig
      VB: BookmarkConfig
    qualifiedName:
      CSharp: Audio.BeatMappingConfigs.BookmarkConfig
      VB: Audio.BeatMappingConfigs.BookmarkConfig
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Audio.BeatMappingConfigs
    source:
      id: BookmarkConfig
      path: ''
      startLine: 286
    example: []
    syntax:
      content:
        CSharp: public class BookmarkConfig
        VB: Public Class BookmarkConfig
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Audio.BeatMappingConfigs.BookmarkConfig.Time
      commentId: P:Audio.BeatMappingConfigs.BookmarkConfig.Time
      language: CSharp
      name:
        CSharp: Time
        VB: Time
      nameWithType:
        CSharp: BookmarkConfig.Time
        VB: BookmarkConfig.Time
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.BookmarkConfig.Time
        VB: Audio.BeatMappingConfigs.BookmarkConfig.Time
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: Time
        path: ''
        startLine: 288
      syntax:
        content:
          CSharp: public float Time { get; set; }
          VB: Public Property Time As Single
        parameters: []
        return:
          type: System.Single
      overload: Audio.BeatMappingConfigs.BookmarkConfig.Time*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Audio.BeatMappingConfigs.BookmarkConfig.Name
      commentId: P:Audio.BeatMappingConfigs.BookmarkConfig.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: BookmarkConfig.Name
        VB: BookmarkConfig.Name
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.BookmarkConfig.Name
        VB: Audio.BeatMappingConfigs.BookmarkConfig.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: Name
        path: ''
        startLine: 289
      syntax:
        content:
          CSharp: public string Name { get; set; }
          VB: Public Property Name As String
        parameters: []
        return:
          type: System.String
      overload: Audio.BeatMappingConfigs.BookmarkConfig.Name*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: Audio.BeatMappingConfigs.MappingInfo
    commentId: T:Audio.BeatMappingConfigs.MappingInfo
    language: CSharp
    name:
      CSharp: MappingInfo
      VB: MappingInfo
    nameWithType:
      CSharp: MappingInfo
      VB: MappingInfo
    qualifiedName:
      CSharp: Audio.BeatMappingConfigs.MappingInfo
      VB: Audio.BeatMappingConfigs.MappingInfo
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Audio.BeatMappingConfigs
    source:
      id: MappingInfo
      path: ''
      startLine: 296
    example: []
    syntax:
      content:
        CSharp: public class MappingInfo
        VB: Public Class MappingInfo
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Audio.BeatMappingConfigs.MappingInfo.Bpm
      commentId: P:Audio.BeatMappingConfigs.MappingInfo.Bpm
      language: CSharp
      name:
        CSharp: Bpm
        VB: Bpm
      nameWithType:
        CSharp: MappingInfo.Bpm
        VB: MappingInfo.Bpm
      qualifiedName:
        CSharp: Audio.BeatMappingConfigs.MappingInfo.Bpm
        VB: Audio.BeatMappingConfigs.MappingInfo.Bpm
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Audio.BeatMappingConfigs
      source:
        id: Bpm
        path: ''
        startLine: 300
      syntax:
        content:
          CSharp: public float Bpm { get; set; }
          VB: Public Property Bpm As Single
        parameters: []
        return:
          type: System.Single
      overload: Audio.BeatMappingConfigs.MappingInfo.Bpm*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
- id: AudioAnalysis
  commentId: N:AudioAnalysis
  language: CSharp
  name:
    CSharp: AudioAnalysis
    VB: AudioAnalysis
  nameWithType:
    CSharp: AudioAnalysis
    VB: AudioAnalysis
  qualifiedName:
    CSharp: AudioAnalysis
    VB: AudioAnalysis
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: AudioAnalysis.AudioAnalyzerHandler
    commentId: T:AudioAnalysis.AudioAnalyzerHandler
    language: CSharp
    name:
      CSharp: AudioAnalyzerHandler
      VB: AudioAnalyzerHandler
    nameWithType:
      CSharp: AudioAnalyzerHandler
      VB: AudioAnalyzerHandler
    qualifiedName:
      CSharp: AudioAnalysis.AudioAnalyzerHandler
      VB: AudioAnalysis.AudioAnalyzerHandler
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AudioAnalysis
    source:
      id: AudioAnalyzerHandler
      path: ''
      startLine: 448
    summary: "\nStarts the spectrum analysis of a given audio file. Creates and handles the nessecary objects for the initial and post analysis.\nSaves the generated mapping data. Performs a callback when the analysis is done.\n"
    example: []
    syntax:
      content:
        CSharp: public class AudioAnalyzerHandler
        VB: Public Class AudioAnalyzerHandler
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AudioAnalysis.AudioAnalyzerHandler.#ctor(AudioAnalysis.AudioAnalyzerConfigs.TrackConfig,System.Collections.Generic.List{AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig},Audio.BeatMappingConfigs.MappingContainer)
      commentId: M:AudioAnalysis.AudioAnalyzerHandler.#ctor(AudioAnalysis.AudioAnalyzerConfigs.TrackConfig,System.Collections.Generic.List{AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig},Audio.BeatMappingConfigs.MappingContainer)
      language: CSharp
      name:
        CSharp: AudioAnalyzerHandler(TrackConfig, List<AnalyzedSpectrumConfig>, MappingContainer)
        VB: AudioAnalyzerHandler(TrackConfig, List(Of AnalyzedSpectrumConfig), MappingContainer)
      nameWithType:
        CSharp: AudioAnalyzerHandler.AudioAnalyzerHandler(TrackConfig, List<AnalyzedSpectrumConfig>, MappingContainer)
        VB: AudioAnalyzerHandler.AudioAnalyzerHandler(TrackConfig, List(Of AnalyzedSpectrumConfig), MappingContainer)
      qualifiedName:
        CSharp: AudioAnalysis.AudioAnalyzerHandler.AudioAnalyzerHandler(AudioAnalysis.AudioAnalyzerConfigs.TrackConfig, System.Collections.Generic.List<AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig>, Audio.BeatMappingConfigs.MappingContainer)
        VB: AudioAnalysis.AudioAnalyzerHandler.AudioAnalyzerHandler(AudioAnalysis.AudioAnalyzerConfigs.TrackConfig, System.Collections.Generic.List(Of AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig), Audio.BeatMappingConfigs.MappingContainer)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis
      source:
        id: .ctor
        path: ''
        startLine: 454
      syntax:
        content:
          CSharp: public AudioAnalyzerHandler(TrackConfig trackConfig, List<AnalyzedSpectrumConfig> spectrumData, MappingContainer beatMappingContainer)
          VB: Public Sub New(trackConfig As TrackConfig, spectrumData As List(Of AnalyzedSpectrumConfig), beatMappingContainer As MappingContainer)
        parameters:
        - id: trackConfig
          type: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig
        - id: spectrumData
          type: System.Collections.Generic.List{AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig}
        - id: beatMappingContainer
          type: Audio.BeatMappingConfigs.MappingContainer
      overload: AudioAnalysis.AudioAnalyzerHandler.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AudioAnalysis.AudioAnalyzerHandler.getAnalyzedSpectrumData
      commentId: M:AudioAnalysis.AudioAnalyzerHandler.getAnalyzedSpectrumData
      language: CSharp
      name:
        CSharp: getAnalyzedSpectrumData()
        VB: getAnalyzedSpectrumData()
      nameWithType:
        CSharp: AudioAnalyzerHandler.getAnalyzedSpectrumData()
        VB: AudioAnalyzerHandler.getAnalyzedSpectrumData()
      qualifiedName:
        CSharp: AudioAnalysis.AudioAnalyzerHandler.getAnalyzedSpectrumData()
        VB: AudioAnalysis.AudioAnalyzerHandler.getAnalyzedSpectrumData()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis
      source:
        id: getAnalyzedSpectrumData
        path: ''
        startLine: 466
      syntax:
        content:
          CSharp: public List<AnalyzedSpectrumConfig> getAnalyzedSpectrumData()
          VB: Public Function getAnalyzedSpectrumData As List(Of AnalyzedSpectrumConfig)
        return:
          type: System.Collections.Generic.List{AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig}
      overload: AudioAnalysis.AudioAnalyzerHandler.getAnalyzedSpectrumData*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AudioAnalysis.AudioAnalyzerHandler.getBeatMappingContainer
      commentId: M:AudioAnalysis.AudioAnalyzerHandler.getBeatMappingContainer
      language: CSharp
      name:
        CSharp: getBeatMappingContainer()
        VB: getBeatMappingContainer()
      nameWithType:
        CSharp: AudioAnalyzerHandler.getBeatMappingContainer()
        VB: AudioAnalyzerHandler.getBeatMappingContainer()
      qualifiedName:
        CSharp: AudioAnalysis.AudioAnalyzerHandler.getBeatMappingContainer()
        VB: AudioAnalysis.AudioAnalyzerHandler.getBeatMappingContainer()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis
      source:
        id: getBeatMappingContainer
        path: ''
        startLine: 471
      syntax:
        content:
          CSharp: public MappingContainer getBeatMappingContainer()
          VB: Public Function getBeatMappingContainer As MappingContainer
        return:
          type: Audio.BeatMappingConfigs.MappingContainer
      overload: AudioAnalysis.AudioAnalyzerHandler.getBeatMappingContainer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AudioAnalysis.AudioAnalyzerHandler.analyzeSpectrumsList(Action)
      commentId: M:AudioAnalysis.AudioAnalyzerHandler.analyzeSpectrumsList(Action)
      language: CSharp
      name:
        CSharp: analyzeSpectrumsList(Action)
        VB: analyzeSpectrumsList(Action)
      nameWithType:
        CSharp: AudioAnalyzerHandler.analyzeSpectrumsList(Action)
        VB: AudioAnalyzerHandler.analyzeSpectrumsList(Action)
      qualifiedName:
        CSharp: AudioAnalysis.AudioAnalyzerHandler.analyzeSpectrumsList(Action)
        VB: AudioAnalysis.AudioAnalyzerHandler.analyzeSpectrumsList(Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis
      source:
        id: analyzeSpectrumsList
        path: ''
        startLine: 476
      syntax:
        content:
          CSharp: public void analyzeSpectrumsList(Action callback)
          VB: Public Sub analyzeSpectrumsList(callback As Action)
        parameters:
        - id: callback
          type: Action
      overload: AudioAnalysis.AudioAnalyzerHandler.analyzeSpectrumsList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AudioAnalysis.PeakDetector
    commentId: T:AudioAnalysis.PeakDetector
    language: CSharp
    name:
      CSharp: PeakDetector
      VB: PeakDetector
    nameWithType:
      CSharp: PeakDetector
      VB: PeakDetector
    qualifiedName:
      CSharp: AudioAnalysis.PeakDetector
      VB: AudioAnalysis.PeakDetector
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AudioAnalysis
    source:
      id: PeakDetector
      path: ''
      startLine: 513
    summary: "\nThis is the actual Onset Detection class. Audio data is analyzed and beats are found using the Spectral Flux approach.Spectral Flux\nis a value that gives information about how big the increase of energy is compared to the last sample.\nThere are several frequency bands for which this analysis is applied.\nFirst, we iterate over all data to calculate the spectral flux (and the pruned spectral flux, taking the threshold into account).\nSecond, we iterate over all spectral flux values and try to determine beats by compared the current flux value to a window of\nprevious flux levels. If a certain threshold is exceeded and some conditions are met, there is a peak.\n\nSee the documentation for further information.\n"
    example: []
    syntax:
      content:
        CSharp: public class PeakDetector
        VB: Public Class PeakDetector
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AudioAnalysis.PeakDetector.#ctor(System.Collections.Generic.List{AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig},System.Collections.Generic.List{AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig},AudioAnalysis.AudioAnalyzerConfigs.TrackConfig,Audio.BeatMappingConfigs.MappingContainer)
      commentId: M:AudioAnalysis.PeakDetector.#ctor(System.Collections.Generic.List{AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig},System.Collections.Generic.List{AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig},AudioAnalysis.AudioAnalyzerConfigs.TrackConfig,Audio.BeatMappingConfigs.MappingContainer)
      language: CSharp
      name:
        CSharp: PeakDetector(List<AnalyzerBandConfig>, List<AnalyzedSpectrumConfig>, TrackConfig, MappingContainer)
        VB: PeakDetector(List(Of AnalyzerBandConfig), List(Of AnalyzedSpectrumConfig), TrackConfig, MappingContainer)
      nameWithType:
        CSharp: PeakDetector.PeakDetector(List<AnalyzerBandConfig>, List<AnalyzedSpectrumConfig>, TrackConfig, MappingContainer)
        VB: PeakDetector.PeakDetector(List(Of AnalyzerBandConfig), List(Of AnalyzedSpectrumConfig), TrackConfig, MappingContainer)
      qualifiedName:
        CSharp: AudioAnalysis.PeakDetector.PeakDetector(System.Collections.Generic.List<AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig>, System.Collections.Generic.List<AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig>, AudioAnalysis.AudioAnalyzerConfigs.TrackConfig, Audio.BeatMappingConfigs.MappingContainer)
        VB: AudioAnalysis.PeakDetector.PeakDetector(System.Collections.Generic.List(Of AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig), System.Collections.Generic.List(Of AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig), AudioAnalysis.AudioAnalyzerConfigs.TrackConfig, Audio.BeatMappingConfigs.MappingContainer)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis
      source:
        id: .ctor
        path: ''
        startLine: 539
      syntax:
        content:
          CSharp: public PeakDetector(List<AnalyzerBandConfig> bandConfigs, List<AnalyzedSpectrumConfig> spectrumData, TrackConfig config, MappingContainer beatMappingContainer)
          VB: Public Sub New(bandConfigs As List(Of AnalyzerBandConfig), spectrumData As List(Of AnalyzedSpectrumConfig), config As TrackConfig, beatMappingContainer As MappingContainer)
        parameters:
        - id: bandConfigs
          type: System.Collections.Generic.List{AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig}
        - id: spectrumData
          type: System.Collections.Generic.List{AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig}
        - id: config
          type: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig
        - id: beatMappingContainer
          type: Audio.BeatMappingConfigs.MappingContainer
      overload: AudioAnalysis.PeakDetector.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AudioAnalysis.PeakDetector.analyze
      commentId: M:AudioAnalysis.PeakDetector.analyze
      language: CSharp
      name:
        CSharp: analyze()
        VB: analyze()
      nameWithType:
        CSharp: PeakDetector.analyze()
        VB: PeakDetector.analyze()
      qualifiedName:
        CSharp: AudioAnalysis.PeakDetector.analyze()
        VB: AudioAnalysis.PeakDetector.analyze()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis
      source:
        id: analyze
        path: ''
        startLine: 560
      syntax:
        content:
          CSharp: public void analyze()
          VB: Public Sub analyze
      overload: AudioAnalysis.PeakDetector.analyze*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AudioAnalysis.PeakDetector.getSpectrumDataList
      commentId: M:AudioAnalysis.PeakDetector.getSpectrumDataList
      language: CSharp
      name:
        CSharp: getSpectrumDataList()
        VB: getSpectrumDataList()
      nameWithType:
        CSharp: PeakDetector.getSpectrumDataList()
        VB: PeakDetector.getSpectrumDataList()
      qualifiedName:
        CSharp: AudioAnalysis.PeakDetector.getSpectrumDataList()
        VB: AudioAnalysis.PeakDetector.getSpectrumDataList()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis
      source:
        id: getSpectrumDataList
        path: ''
        startLine: 575
      syntax:
        content:
          CSharp: public List<AnalyzedSpectrumConfig> getSpectrumDataList()
          VB: Public Function getSpectrumDataList As List(Of AnalyzedSpectrumConfig)
        return:
          type: System.Collections.Generic.List{AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig}
      overload: AudioAnalysis.PeakDetector.getSpectrumDataList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AudioAnalysis.PeakDetector.getBeatMappingContainer
      commentId: M:AudioAnalysis.PeakDetector.getBeatMappingContainer
      language: CSharp
      name:
        CSharp: getBeatMappingContainer()
        VB: getBeatMappingContainer()
      nameWithType:
        CSharp: PeakDetector.getBeatMappingContainer()
        VB: PeakDetector.getBeatMappingContainer()
      qualifiedName:
        CSharp: AudioAnalysis.PeakDetector.getBeatMappingContainer()
        VB: AudioAnalysis.PeakDetector.getBeatMappingContainer()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis
      source:
        id: getBeatMappingContainer
        path: ''
        startLine: 580
      syntax:
        content:
          CSharp: public MappingContainer getBeatMappingContainer()
          VB: Public Function getBeatMappingContainer As MappingContainer
        return:
          type: Audio.BeatMappingConfigs.MappingContainer
      overload: AudioAnalysis.PeakDetector.getBeatMappingContainer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AudioAnalysis.PostOnsetAudioAnalyzer
    commentId: T:AudioAnalysis.PostOnsetAudioAnalyzer
    language: CSharp
    name:
      CSharp: PostOnsetAudioAnalyzer
      VB: PostOnsetAudioAnalyzer
    nameWithType:
      CSharp: PostOnsetAudioAnalyzer
      VB: PostOnsetAudioAnalyzer
    qualifiedName:
      CSharp: AudioAnalysis.PostOnsetAudioAnalyzer
      VB: AudioAnalysis.PostOnsetAudioAnalyzer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AudioAnalysis
    source:
      id: PostOnsetAudioAnalyzer
      path: ''
      startLine: 827
    summary: "\nAfter the initial analysis of the audio data and the creation of the note data, we iterate over those created blocks again.\nSome rule based behavior is used to create double notes and influence the positioning of the blocks, according to variables\nlike their cut direction or obstacles next to them.\nIn this process, also the timing of notes is changed and notes are deleted if nessecary.\n"
    example: []
    syntax:
      content:
        CSharp: public class PostOnsetAudioAnalyzer
        VB: Public Class PostOnsetAudioAnalyzer
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AudioAnalysis.PostOnsetAudioAnalyzer.#ctor(Audio.BeatMappingConfigs.MappingContainer)
      commentId: M:AudioAnalysis.PostOnsetAudioAnalyzer.#ctor(Audio.BeatMappingConfigs.MappingContainer)
      language: CSharp
      name:
        CSharp: PostOnsetAudioAnalyzer(MappingContainer)
        VB: PostOnsetAudioAnalyzer(MappingContainer)
      nameWithType:
        CSharp: PostOnsetAudioAnalyzer.PostOnsetAudioAnalyzer(MappingContainer)
        VB: PostOnsetAudioAnalyzer.PostOnsetAudioAnalyzer(MappingContainer)
      qualifiedName:
        CSharp: AudioAnalysis.PostOnsetAudioAnalyzer.PostOnsetAudioAnalyzer(Audio.BeatMappingConfigs.MappingContainer)
        VB: AudioAnalysis.PostOnsetAudioAnalyzer.PostOnsetAudioAnalyzer(Audio.BeatMappingConfigs.MappingContainer)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis
      source:
        id: .ctor
        path: ''
        startLine: 842
      syntax:
        content:
          CSharp: public PostOnsetAudioAnalyzer(MappingContainer beatMappingContainer)
          VB: Public Sub New(beatMappingContainer As MappingContainer)
        parameters:
        - id: beatMappingContainer
          type: Audio.BeatMappingConfigs.MappingContainer
      overload: AudioAnalysis.PostOnsetAudioAnalyzer.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AudioAnalysis.PostOnsetAudioAnalyzer.analyze
      commentId: M:AudioAnalysis.PostOnsetAudioAnalyzer.analyze
      language: CSharp
      name:
        CSharp: analyze()
        VB: analyze()
      nameWithType:
        CSharp: PostOnsetAudioAnalyzer.analyze()
        VB: PostOnsetAudioAnalyzer.analyze()
      qualifiedName:
        CSharp: AudioAnalysis.PostOnsetAudioAnalyzer.analyze()
        VB: AudioAnalysis.PostOnsetAudioAnalyzer.analyze()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis
      source:
        id: analyze
        path: ''
        startLine: 848
      syntax:
        content:
          CSharp: public void analyze()
          VB: Public Sub analyze
      overload: AudioAnalysis.PostOnsetAudioAnalyzer.analyze*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AudioAnalysis.PostOnsetAudioAnalyzer.getBeatMappingContainer
      commentId: M:AudioAnalysis.PostOnsetAudioAnalyzer.getBeatMappingContainer
      language: CSharp
      name:
        CSharp: getBeatMappingContainer()
        VB: getBeatMappingContainer()
      nameWithType:
        CSharp: PostOnsetAudioAnalyzer.getBeatMappingContainer()
        VB: PostOnsetAudioAnalyzer.getBeatMappingContainer()
      qualifiedName:
        CSharp: AudioAnalysis.PostOnsetAudioAnalyzer.getBeatMappingContainer()
        VB: AudioAnalysis.PostOnsetAudioAnalyzer.getBeatMappingContainer()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis
      source:
        id: getBeatMappingContainer
        path: ''
        startLine: 856
      syntax:
        content:
          CSharp: public MappingContainer getBeatMappingContainer()
          VB: Public Function getBeatMappingContainer As MappingContainer
        return:
          type: Audio.BeatMappingConfigs.MappingContainer
      overload: AudioAnalysis.PostOnsetAudioAnalyzer.getBeatMappingContainer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AudioAnalysis.SpectrumAnalysisUtils
    commentId: T:AudioAnalysis.SpectrumAnalysisUtils
    language: CSharp
    name:
      CSharp: SpectrumAnalysisUtils
      VB: SpectrumAnalysisUtils
    nameWithType:
      CSharp: SpectrumAnalysisUtils
      VB: SpectrumAnalysisUtils
    qualifiedName:
      CSharp: AudioAnalysis.SpectrumAnalysisUtils
      VB: AudioAnalysis.SpectrumAnalysisUtils
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AudioAnalysis
    source:
      id: SpectrumAnalysisUtils
      path: ''
      startLine: 1316
    syntax:
      content:
        CSharp: public static class SpectrumAnalysisUtils
        VB: Public Module SpectrumAnalysisUtils
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: AudioAnalysis.SpectrumAnalysisUtils.shouldBeExtraPeak(System.Single,System.Single)
      commentId: M:AudioAnalysis.SpectrumAnalysisUtils.shouldBeExtraPeak(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: shouldBeExtraPeak(Single, Single)
        VB: shouldBeExtraPeak(Single, Single)
      nameWithType:
        CSharp: SpectrumAnalysisUtils.shouldBeExtraPeak(Single, Single)
        VB: SpectrumAnalysisUtils.shouldBeExtraPeak(Single, Single)
      qualifiedName:
        CSharp: AudioAnalysis.SpectrumAnalysisUtils.shouldBeExtraPeak(System.Single, System.Single)
        VB: AudioAnalysis.SpectrumAnalysisUtils.shouldBeExtraPeak(System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis
      source:
        id: shouldBeExtraPeak
        path: ''
        startLine: 1318
      syntax:
        content:
          CSharp: public static bool shouldBeExtraPeak(float totalAverageFlux, float currentAverageFlux)
          VB: Public Shared Function shouldBeExtraPeak(totalAverageFlux As Single, currentAverageFlux As Single) As Boolean
        parameters:
        - id: totalAverageFlux
          type: System.Single
        - id: currentAverageFlux
          type: System.Single
        return:
          type: System.Boolean
      overload: AudioAnalysis.SpectrumAnalysisUtils.shouldBeExtraPeak*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AudioAnalysis.SpectrumAnalysisUtils.sampleIsCloser(System.Single,System.Single,System.Single)
      commentId: M:AudioAnalysis.SpectrumAnalysisUtils.sampleIsCloser(System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: sampleIsCloser(Single, Single, Single)
        VB: sampleIsCloser(Single, Single, Single)
      nameWithType:
        CSharp: SpectrumAnalysisUtils.sampleIsCloser(Single, Single, Single)
        VB: SpectrumAnalysisUtils.sampleIsCloser(Single, Single, Single)
      qualifiedName:
        CSharp: AudioAnalysis.SpectrumAnalysisUtils.sampleIsCloser(System.Single, System.Single, System.Single)
        VB: AudioAnalysis.SpectrumAnalysisUtils.sampleIsCloser(System.Single, System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis
      source:
        id: sampleIsCloser
        path: ''
        startLine: 1323
      syntax:
        content:
          CSharp: public static bool sampleIsCloser(float newVal, float oldVal, float trueVal)
          VB: Public Shared Function sampleIsCloser(newVal As Single, oldVal As Single, trueVal As Single) As Boolean
        parameters:
        - id: newVal
          type: System.Single
        - id: oldVal
          type: System.Single
        - id: trueVal
          type: System.Single
        return:
          type: System.Boolean
      overload: AudioAnalysis.SpectrumAnalysisUtils.sampleIsCloser*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
- id: AudioAnalysis.AudioAnalyzerConfigs
  commentId: N:AudioAnalysis.AudioAnalyzerConfigs
  language: CSharp
  name:
    CSharp: AudioAnalysis.AudioAnalyzerConfigs
    VB: AudioAnalysis.AudioAnalyzerConfigs
  nameWithType:
    CSharp: AudioAnalysis.AudioAnalyzerConfigs
    VB: AudioAnalysis.AudioAnalyzerConfigs
  qualifiedName:
    CSharp: AudioAnalysis.AudioAnalyzerConfigs
    VB: AudioAnalysis.AudioAnalyzerConfigs
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig
    commentId: T:AudioAnalysis.AudioAnalyzerConfigs.TrackConfig
    language: CSharp
    name:
      CSharp: TrackConfig
      VB: TrackConfig
    nameWithType:
      CSharp: TrackConfig
      VB: TrackConfig
    qualifiedName:
      CSharp: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig
      VB: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AudioAnalysis.AudioAnalyzerConfigs
    source:
      id: TrackConfig
      path: ''
      startLine: 323
    summary: "\nConfig that contains track data for the song that is being analyzed.\n"
    example: []
    syntax:
      content:
        CSharp: public class TrackConfig
        VB: Public Class TrackConfig
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.#ctor(System.Int32,System.String)
      commentId: M:AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.#ctor(System.Int32,System.String)
      language: CSharp
      name:
        CSharp: TrackConfig(Int32, String)
        VB: TrackConfig(Int32, String)
      nameWithType:
        CSharp: TrackConfig.TrackConfig(Int32, String)
        VB: TrackConfig.TrackConfig(Int32, String)
      qualifiedName:
        CSharp: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.TrackConfig(System.Int32, System.String)
        VB: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.TrackConfig(System.Int32, System.String)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis.AudioAnalyzerConfigs
      source:
        id: .ctor
        path: ''
        startLine: 333
      syntax:
        content:
          CSharp: public TrackConfig(int clipSampleRate, string trackName)
          VB: Public Sub New(clipSampleRate As Integer, trackName As String)
        parameters:
        - id: clipSampleRate
          type: System.Int32
        - id: trackName
          type: System.String
      overload: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.AnalyzerConfigs
      commentId: P:AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.AnalyzerConfigs
      language: CSharp
      name:
        CSharp: AnalyzerConfigs
        VB: AnalyzerConfigs
      nameWithType:
        CSharp: TrackConfig.AnalyzerConfigs
        VB: TrackConfig.AnalyzerConfigs
      qualifiedName:
        CSharp: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.AnalyzerConfigs
        VB: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.AnalyzerConfigs
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis.AudioAnalyzerConfigs
      source:
        id: AnalyzerConfigs
        path: ''
        startLine: 344
      syntax:
        content:
          CSharp: public List<AnalyzerBandConfig> AnalyzerConfigs { get; }
          VB: Public ReadOnly Property AnalyzerConfigs As List(Of AnalyzerBandConfig)
        parameters: []
        return:
          type: System.Collections.Generic.List{AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig}
      overload: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.AnalyzerConfigs*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.Bands
      commentId: P:AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.Bands
      language: CSharp
      name:
        CSharp: Bands
        VB: Bands
      nameWithType:
        CSharp: TrackConfig.Bands
        VB: TrackConfig.Bands
      qualifiedName:
        CSharp: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.Bands
        VB: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.Bands
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis.AudioAnalyzerConfigs
      source:
        id: Bands
        path: ''
        startLine: 345
      syntax:
        content:
          CSharp: public int Bands { get; }
          VB: Public ReadOnly Property Bands As Integer
        parameters: []
        return:
          type: System.Int32
      overload: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.Bands*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.ClipSampleRate
      commentId: P:AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.ClipSampleRate
      language: CSharp
      name:
        CSharp: ClipSampleRate
        VB: ClipSampleRate
      nameWithType:
        CSharp: TrackConfig.ClipSampleRate
        VB: TrackConfig.ClipSampleRate
      qualifiedName:
        CSharp: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.ClipSampleRate
        VB: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.ClipSampleRate
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis.AudioAnalyzerConfigs
      source:
        id: ClipSampleRate
        path: ''
        startLine: 346
      syntax:
        content:
          CSharp: public int ClipSampleRate { get; }
          VB: Public ReadOnly Property ClipSampleRate As Integer
        parameters: []
        return:
          type: System.Int32
      overload: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.ClipSampleRate*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.TrackName
      commentId: P:AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.TrackName
      language: CSharp
      name:
        CSharp: TrackName
        VB: TrackName
      nameWithType:
        CSharp: TrackConfig.TrackName
        VB: TrackConfig.TrackName
      qualifiedName:
        CSharp: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.TrackName
        VB: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.TrackName
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis.AudioAnalyzerConfigs
      source:
        id: TrackName
        path: ''
        startLine: 347
      syntax:
        content:
          CSharp: public string TrackName { get; }
          VB: Public ReadOnly Property TrackName As String
        parameters: []
        return:
          type: System.String
      overload: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.TrackName*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig
    commentId: T:AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig
    language: CSharp
    name:
      CSharp: AnalyzerBandConfig
      VB: AnalyzerBandConfig
    nameWithType:
      CSharp: AnalyzerBandConfig
      VB: AnalyzerBandConfig
    qualifiedName:
      CSharp: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig
      VB: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AudioAnalysis.AudioAnalyzerConfigs
    source:
      id: AnalyzerBandConfig
      path: ''
      startLine: 420
    summary: "\nConfig that contains instructions for the audio analysis, like which bands to use\n(frequency ranges are defined), or what the threshold levels should be.\n"
    example: []
    syntax:
      content:
        CSharp: public class AnalyzerBandConfig
        VB: Public Class AnalyzerBandConfig
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.Band
      commentId: P:AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.Band
      language: CSharp
      name:
        CSharp: Band
        VB: Band
      nameWithType:
        CSharp: AnalyzerBandConfig.Band
        VB: AnalyzerBandConfig.Band
      qualifiedName:
        CSharp: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.Band
        VB: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.Band
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis.AudioAnalyzerConfigs
      source:
        id: Band
        path: ''
        startLine: 422
      syntax:
        content:
          CSharp: public int Band { get; set; }
          VB: Public Property Band As Integer
        parameters: []
        return:
          type: System.Int32
      overload: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.Band*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartIndex
      commentId: P:AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartIndex
      language: CSharp
      name:
        CSharp: StartIndex
        VB: StartIndex
      nameWithType:
        CSharp: AnalyzerBandConfig.StartIndex
        VB: AnalyzerBandConfig.StartIndex
      qualifiedName:
        CSharp: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartIndex
        VB: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartIndex
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis.AudioAnalyzerConfigs
      source:
        id: StartIndex
        path: ''
        startLine: 423
      syntax:
        content:
          CSharp: public int StartIndex { get; set; }
          VB: Public Property StartIndex As Integer
        parameters: []
        return:
          type: System.Int32
      overload: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartIndex*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndIndex
      commentId: P:AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndIndex
      language: CSharp
      name:
        CSharp: EndIndex
        VB: EndIndex
      nameWithType:
        CSharp: AnalyzerBandConfig.EndIndex
        VB: AnalyzerBandConfig.EndIndex
      qualifiedName:
        CSharp: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndIndex
        VB: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndIndex
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis.AudioAnalyzerConfigs
      source:
        id: EndIndex
        path: ''
        startLine: 424
      syntax:
        content:
          CSharp: public int EndIndex { get; set; }
          VB: Public Property EndIndex As Integer
        parameters: []
        return:
          type: System.Int32
      overload: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndIndex*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.ThresholdSize
      commentId: P:AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.ThresholdSize
      language: CSharp
      name:
        CSharp: ThresholdSize
        VB: ThresholdSize
      nameWithType:
        CSharp: AnalyzerBandConfig.ThresholdSize
        VB: AnalyzerBandConfig.ThresholdSize
      qualifiedName:
        CSharp: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.ThresholdSize
        VB: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.ThresholdSize
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis.AudioAnalyzerConfigs
      source:
        id: ThresholdSize
        path: ''
        startLine: 425
      syntax:
        content:
          CSharp: public int ThresholdSize { get; set; }
          VB: Public Property ThresholdSize As Integer
        parameters: []
        return:
          type: System.Int32
      overload: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.ThresholdSize*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.BeatBlockCounter
      commentId: P:AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.BeatBlockCounter
      language: CSharp
      name:
        CSharp: BeatBlockCounter
        VB: BeatBlockCounter
      nameWithType:
        CSharp: AnalyzerBandConfig.BeatBlockCounter
        VB: AnalyzerBandConfig.BeatBlockCounter
      qualifiedName:
        CSharp: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.BeatBlockCounter
        VB: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.BeatBlockCounter
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis.AudioAnalyzerConfigs
      source:
        id: BeatBlockCounter
        path: ''
        startLine: 426
      syntax:
        content:
          CSharp: public int BeatBlockCounter { get; set; }
          VB: Public Property BeatBlockCounter As Integer
        parameters: []
        return:
          type: System.Int32
      overload: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.BeatBlockCounter*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartFrequency
      commentId: P:AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartFrequency
      language: CSharp
      name:
        CSharp: StartFrequency
        VB: StartFrequency
      nameWithType:
        CSharp: AnalyzerBandConfig.StartFrequency
        VB: AnalyzerBandConfig.StartFrequency
      qualifiedName:
        CSharp: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartFrequency
        VB: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartFrequency
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis.AudioAnalyzerConfigs
      source:
        id: StartFrequency
        path: ''
        startLine: 427
      syntax:
        content:
          CSharp: public float StartFrequency { get; set; }
          VB: Public Property StartFrequency As Single
        parameters: []
        return:
          type: System.Single
      overload: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartFrequency*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndFrequency
      commentId: P:AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndFrequency
      language: CSharp
      name:
        CSharp: EndFrequency
        VB: EndFrequency
      nameWithType:
        CSharp: AnalyzerBandConfig.EndFrequency
        VB: AnalyzerBandConfig.EndFrequency
      qualifiedName:
        CSharp: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndFrequency
        VB: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndFrequency
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis.AudioAnalyzerConfigs
      source:
        id: EndFrequency
        path: ''
        startLine: 428
      syntax:
        content:
          CSharp: public float EndFrequency { get; set; }
          VB: Public Property EndFrequency As Single
        parameters: []
        return:
          type: System.Single
      overload: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndFrequency*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.TresholdMult
      commentId: P:AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.TresholdMult
      language: CSharp
      name:
        CSharp: TresholdMult
        VB: TresholdMult
      nameWithType:
        CSharp: AnalyzerBandConfig.TresholdMult
        VB: AnalyzerBandConfig.TresholdMult
      qualifiedName:
        CSharp: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.TresholdMult
        VB: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.TresholdMult
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis.AudioAnalyzerConfigs
      source:
        id: TresholdMult
        path: ''
        startLine: 429
      syntax:
        content:
          CSharp: public float TresholdMult { get; set; }
          VB: Public Property TresholdMult As Single
        parameters: []
        return:
          type: System.Single
      overload: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.TresholdMult*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
- id: AudioAnalysis.SpectrumConfigs
  commentId: N:AudioAnalysis.SpectrumConfigs
  language: CSharp
  name:
    CSharp: AudioAnalysis.SpectrumConfigs
    VB: AudioAnalysis.SpectrumConfigs
  nameWithType:
    CSharp: AudioAnalysis.SpectrumConfigs
    VB: AudioAnalysis.SpectrumConfigs
  qualifiedName:
    CSharp: AudioAnalysis.SpectrumConfigs
    VB: AudioAnalysis.SpectrumConfigs
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig
    commentId: T:AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig
    language: CSharp
    name:
      CSharp: AnalyzedSpectrumConfig
      VB: AnalyzedSpectrumConfig
    nameWithType:
      CSharp: AnalyzedSpectrumConfig
      VB: AnalyzedSpectrumConfig
    qualifiedName:
      CSharp: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig
      VB: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AudioAnalysis.SpectrumConfigs
    source:
      id: AnalyzedSpectrumConfig
      path: ''
      startLine: 1344
    summary: "\nConfig that contains band configs with analyzed spectrum data.Summarizes those band configs\nand for example provides easier access to the peaks that have been found in the different bands.\n"
    example: []
    syntax:
      content:
        CSharp: public class AnalyzedSpectrumConfig
        VB: Public Class AnalyzedSpectrumConfig
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Spectrum
      commentId: P:AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Spectrum
      language: CSharp
      name:
        CSharp: Spectrum
        VB: Spectrum
      nameWithType:
        CSharp: AnalyzedSpectrumConfig.Spectrum
        VB: AnalyzedSpectrumConfig.Spectrum
      qualifiedName:
        CSharp: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Spectrum
        VB: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Spectrum
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis.SpectrumConfigs
      source:
        id: Spectrum
        path: ''
        startLine: 1346
      syntax:
        content:
          CSharp: public float[] Spectrum { get; set; }
          VB: Public Property Spectrum As Single()
        parameters: []
        return:
          type: System.Single[]
      overload: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Spectrum*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Time
      commentId: P:AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Time
      language: CSharp
      name:
        CSharp: Time
        VB: Time
      nameWithType:
        CSharp: AnalyzedSpectrumConfig.Time
        VB: AnalyzedSpectrumConfig.Time
      qualifiedName:
        CSharp: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Time
        VB: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Time
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis.SpectrumConfigs
      source:
        id: Time
        path: ''
        startLine: 1347
      syntax:
        content:
          CSharp: public float Time { get; set; }
          VB: Public Property Time As Single
        parameters: []
        return:
          type: System.Single
      overload: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Time*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.HasPeak
      commentId: P:AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.HasPeak
      language: CSharp
      name:
        CSharp: HasPeak
        VB: HasPeak
      nameWithType:
        CSharp: AnalyzedSpectrumConfig.HasPeak
        VB: AnalyzedSpectrumConfig.HasPeak
      qualifiedName:
        CSharp: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.HasPeak
        VB: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.HasPeak
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis.SpectrumConfigs
      source:
        id: HasPeak
        path: ''
        startLine: 1348
      syntax:
        content:
          CSharp: public bool HasPeak { get; set; }
          VB: Public Property HasPeak As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.HasPeak*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.PeakBands
      commentId: P:AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.PeakBands
      language: CSharp
      name:
        CSharp: PeakBands
        VB: PeakBands
      nameWithType:
        CSharp: AnalyzedSpectrumConfig.PeakBands
        VB: AnalyzedSpectrumConfig.PeakBands
      qualifiedName:
        CSharp: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.PeakBands
        VB: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.PeakBands
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis.SpectrumConfigs
      source:
        id: PeakBands
        path: ''
        startLine: 1349
      syntax:
        content:
          CSharp: public List<int> PeakBands { get; set; }
          VB: Public Property PeakBands As List(Of Integer)
        parameters: []
        return:
          type: System.Collections.Generic.List{System.Int32}
      overload: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.PeakBands*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.BandBeatData
      commentId: P:AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.BandBeatData
      language: CSharp
      name:
        CSharp: BandBeatData
        VB: BandBeatData
      nameWithType:
        CSharp: AnalyzedSpectrumConfig.BandBeatData
        VB: AnalyzedSpectrumConfig.BandBeatData
      qualifiedName:
        CSharp: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.BandBeatData
        VB: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.BandBeatData
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis.SpectrumConfigs
      source:
        id: BandBeatData
        path: ''
        startLine: 1350
      syntax:
        content:
          CSharp: public List<BeatConfig> BandBeatData { get; set; }
          VB: Public Property BandBeatData As List(Of BeatConfig)
        parameters: []
        return:
          type: System.Collections.Generic.List{AudioAnalysis.SpectrumConfigs.BeatConfig}
      overload: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.BandBeatData*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: AudioAnalysis.SpectrumConfigs.BeatConfig
    commentId: T:AudioAnalysis.SpectrumConfigs.BeatConfig
    language: CSharp
    name:
      CSharp: BeatConfig
      VB: BeatConfig
    nameWithType:
      CSharp: BeatConfig
      VB: BeatConfig
    qualifiedName:
      CSharp: AudioAnalysis.SpectrumConfigs.BeatConfig
      VB: AudioAnalysis.SpectrumConfigs.BeatConfig
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AudioAnalysis.SpectrumConfigs
    source:
      id: BeatConfig
      path: ''
      startLine: 1357
    summary: "\nConfig that contains data obtained from a specific spectrum that is analyzed in a specific band.\n"
    example: []
    syntax:
      content:
        CSharp: public class BeatConfig
        VB: Public Class BeatConfig
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AudioAnalysis.SpectrumConfigs.BeatConfig.SpectralFlux
      commentId: P:AudioAnalysis.SpectrumConfigs.BeatConfig.SpectralFlux
      language: CSharp
      name:
        CSharp: SpectralFlux
        VB: SpectralFlux
      nameWithType:
        CSharp: BeatConfig.SpectralFlux
        VB: BeatConfig.SpectralFlux
      qualifiedName:
        CSharp: AudioAnalysis.SpectrumConfigs.BeatConfig.SpectralFlux
        VB: AudioAnalysis.SpectrumConfigs.BeatConfig.SpectralFlux
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis.SpectrumConfigs
      source:
        id: SpectralFlux
        path: ''
        startLine: 1359
      syntax:
        content:
          CSharp: public float SpectralFlux { get; set; }
          VB: Public Property SpectralFlux As Single
        parameters: []
        return:
          type: System.Single
      overload: AudioAnalysis.SpectrumConfigs.BeatConfig.SpectralFlux*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AudioAnalysis.SpectrumConfigs.BeatConfig.Threshold
      commentId: P:AudioAnalysis.SpectrumConfigs.BeatConfig.Threshold
      language: CSharp
      name:
        CSharp: Threshold
        VB: Threshold
      nameWithType:
        CSharp: BeatConfig.Threshold
        VB: BeatConfig.Threshold
      qualifiedName:
        CSharp: AudioAnalysis.SpectrumConfigs.BeatConfig.Threshold
        VB: AudioAnalysis.SpectrumConfigs.BeatConfig.Threshold
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis.SpectrumConfigs
      source:
        id: Threshold
        path: ''
        startLine: 1360
      syntax:
        content:
          CSharp: public float Threshold { get; set; }
          VB: Public Property Threshold As Single
        parameters: []
        return:
          type: System.Single
      overload: AudioAnalysis.SpectrumConfigs.BeatConfig.Threshold*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AudioAnalysis.SpectrumConfigs.BeatConfig.PrunedSpectralFlux
      commentId: P:AudioAnalysis.SpectrumConfigs.BeatConfig.PrunedSpectralFlux
      language: CSharp
      name:
        CSharp: PrunedSpectralFlux
        VB: PrunedSpectralFlux
      nameWithType:
        CSharp: BeatConfig.PrunedSpectralFlux
        VB: BeatConfig.PrunedSpectralFlux
      qualifiedName:
        CSharp: AudioAnalysis.SpectrumConfigs.BeatConfig.PrunedSpectralFlux
        VB: AudioAnalysis.SpectrumConfigs.BeatConfig.PrunedSpectralFlux
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis.SpectrumConfigs
      source:
        id: PrunedSpectralFlux
        path: ''
        startLine: 1361
      syntax:
        content:
          CSharp: public float PrunedSpectralFlux { get; set; }
          VB: Public Property PrunedSpectralFlux As Single
        parameters: []
        return:
          type: System.Single
      overload: AudioAnalysis.SpectrumConfigs.BeatConfig.PrunedSpectralFlux*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AudioAnalysis.SpectrumConfigs.BeatConfig.Band
      commentId: P:AudioAnalysis.SpectrumConfigs.BeatConfig.Band
      language: CSharp
      name:
        CSharp: Band
        VB: Band
      nameWithType:
        CSharp: BeatConfig.Band
        VB: BeatConfig.Band
      qualifiedName:
        CSharp: AudioAnalysis.SpectrumConfigs.BeatConfig.Band
        VB: AudioAnalysis.SpectrumConfigs.BeatConfig.Band
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis.SpectrumConfigs
      source:
        id: Band
        path: ''
        startLine: 1362
      syntax:
        content:
          CSharp: public float Band { get; set; }
          VB: Public Property Band As Single
        parameters: []
        return:
          type: System.Single
      overload: AudioAnalysis.SpectrumConfigs.BeatConfig.Band*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AudioAnalysis.SpectrumConfigs.BeatConfig.PeakBPM
      commentId: P:AudioAnalysis.SpectrumConfigs.BeatConfig.PeakBPM
      language: CSharp
      name:
        CSharp: PeakBPM
        VB: PeakBPM
      nameWithType:
        CSharp: BeatConfig.PeakBPM
        VB: BeatConfig.PeakBPM
      qualifiedName:
        CSharp: AudioAnalysis.SpectrumConfigs.BeatConfig.PeakBPM
        VB: AudioAnalysis.SpectrumConfigs.BeatConfig.PeakBPM
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis.SpectrumConfigs
      source:
        id: PeakBPM
        path: ''
        startLine: 1363
      syntax:
        content:
          CSharp: public float PeakBPM { get; set; }
          VB: Public Property PeakBPM As Single
        parameters: []
        return:
          type: System.Single
      overload: AudioAnalysis.SpectrumConfigs.BeatConfig.PeakBPM*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AudioAnalysis.SpectrumConfigs.BeatConfig.IsPeak
      commentId: P:AudioAnalysis.SpectrumConfigs.BeatConfig.IsPeak
      language: CSharp
      name:
        CSharp: IsPeak
        VB: IsPeak
      nameWithType:
        CSharp: BeatConfig.IsPeak
        VB: BeatConfig.IsPeak
      qualifiedName:
        CSharp: AudioAnalysis.SpectrumConfigs.BeatConfig.IsPeak
        VB: AudioAnalysis.SpectrumConfigs.BeatConfig.IsPeak
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: AudioAnalysis.SpectrumConfigs
      source:
        id: IsPeak
        path: ''
        startLine: 1364
      syntax:
        content:
          CSharp: public bool IsPeak { get; set; }
          VB: Public Property IsPeak As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: AudioAnalysis.SpectrumConfigs.BeatConfig.IsPeak*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
- id: AudioProviders
  commentId: N:AudioProviders
  language: CSharp
  name:
    CSharp: AudioProviders
    VB: AudioProviders
  nameWithType:
    CSharp: AudioProviders
    VB: AudioProviders
  qualifiedName:
    CSharp: AudioProviders
    VB: AudioProviders
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: AudioProviders.AudioSampleProvider
    commentId: T:AudioProviders.AudioSampleProvider
    language: CSharp
    name:
      CSharp: AudioSampleProvider
      VB: AudioSampleProvider
    nameWithType:
      CSharp: AudioSampleProvider
      VB: AudioSampleProvider
    qualifiedName:
      CSharp: AudioProviders.AudioSampleProvider
      VB: AudioProviders.AudioSampleProvider
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AudioProviders
    source:
      id: AudioSampleProvider
      path: ''
      startLine: 1379
    summary: "\nProvider for audio samples from an audio clip.Can create stereo samples and get mono samples from that array.\nWe want mono samples as they are easier to handle.\n"
    example: []
    syntax:
      content:
        CSharp: public static class AudioSampleProvider
        VB: Public Module AudioSampleProvider
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: AudioProviders.AudioSampleProvider.getSamples(AudioClip)
      commentId: M:AudioProviders.AudioSampleProvider.getSamples(AudioClip)
      language: CSharp
      name:
        CSharp: getSamples(AudioClip)
        VB: getSamples(AudioClip)
      nameWithType:
        CSharp: AudioSampleProvider.getSamples(AudioClip)
        VB: AudioSampleProvider.getSamples(AudioClip)
      qualifiedName:
        CSharp: AudioProviders.AudioSampleProvider.getSamples(AudioClip)
        VB: AudioProviders.AudioSampleProvider.getSamples(AudioClip)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AudioProviders
      source:
        id: getSamples
        path: ''
        startLine: 1381
      syntax:
        content:
          CSharp: public static float[] getSamples(AudioClip audioClip)
          VB: Public Shared Function getSamples(audioClip As AudioClip) As Single()
        parameters:
        - id: audioClip
          type: AudioClip
        return:
          type: System.Single[]
      overload: AudioProviders.AudioSampleProvider.getSamples*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AudioProviders.AudioSampleProvider.getMonoSamples(System.Single[],System.Int32)
      commentId: M:AudioProviders.AudioSampleProvider.getMonoSamples(System.Single[],System.Int32)
      language: CSharp
      name:
        CSharp: getMonoSamples(Single[], Int32)
        VB: getMonoSamples(Single(), Int32)
      nameWithType:
        CSharp: AudioSampleProvider.getMonoSamples(Single[], Int32)
        VB: AudioSampleProvider.getMonoSamples(Single(), Int32)
      qualifiedName:
        CSharp: AudioProviders.AudioSampleProvider.getMonoSamples(System.Single[], System.Int32)
        VB: AudioProviders.AudioSampleProvider.getMonoSamples(System.Single(), System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AudioProviders
      source:
        id: getMonoSamples
        path: ''
        startLine: 1389
      syntax:
        content:
          CSharp: public static float[] getMonoSamples(float[] stereoSamples, int numChannels)
          VB: Public Shared Function getMonoSamples(stereoSamples As Single(), numChannels As Integer) As Single()
        parameters:
        - id: stereoSamples
          type: System.Single[]
        - id: numChannels
          type: System.Int32
        return:
          type: System.Single[]
      overload: AudioProviders.AudioSampleProvider.getMonoSamples*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: AudioProviders.Mp3Loader
    commentId: T:AudioProviders.Mp3Loader
    language: CSharp
    name:
      CSharp: Mp3Loader
      VB: Mp3Loader
    nameWithType:
      CSharp: Mp3Loader
      VB: Mp3Loader
    qualifiedName:
      CSharp: AudioProviders.Mp3Loader
      VB: AudioProviders.Mp3Loader
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AudioProviders
    source:
      id: Mp3Loader
      path: ''
      startLine: 1419
    summary: "\nThis class is used to load .mp3 files by using the NLayer library.\n"
    example: []
    syntax:
      content:
        CSharp: public static class Mp3Loader
        VB: Public Module Mp3Loader
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: AudioProviders.Mp3Loader.LoadMp3(System.String)
      commentId: M:AudioProviders.Mp3Loader.LoadMp3(System.String)
      language: CSharp
      name:
        CSharp: LoadMp3(String)
        VB: LoadMp3(String)
      nameWithType:
        CSharp: Mp3Loader.LoadMp3(String)
        VB: Mp3Loader.LoadMp3(String)
      qualifiedName:
        CSharp: AudioProviders.Mp3Loader.LoadMp3(System.String)
        VB: AudioProviders.Mp3Loader.LoadMp3(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AudioProviders
      source:
        id: LoadMp3
        path: ''
        startLine: 1424
      syntax:
        content:
          CSharp: public static AudioClip LoadMp3(string filePath)
          VB: Public Shared Function LoadMp3(filePath As String) As AudioClip
        parameters:
        - id: filePath
          type: System.String
        return:
          type: AudioClip
      overload: AudioProviders.Mp3Loader.LoadMp3*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: AudioProviders.SpectrumProvider
    commentId: T:AudioProviders.SpectrumProvider
    language: CSharp
    name:
      CSharp: SpectrumProvider
      VB: SpectrumProvider
    nameWithType:
      CSharp: SpectrumProvider
      VB: SpectrumProvider
    qualifiedName:
      CSharp: AudioProviders.SpectrumProvider
      VB: AudioProviders.SpectrumProvider
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: AudioProviders
    source:
      id: SpectrumProvider
      path: ''
      startLine: 1467
    summary: "\nProvider for spectrum data generated from an array of audio samples.\nUses an external library &apos;DSPLib&apos; to get the spectrum data.DSPLib performs a Fast Fourier Transformation\nin which the time based audio sample data is transformed to frequency based spectrum data.\n"
    example: []
    syntax:
      content:
        CSharp: public class SpectrumProvider
        VB: Public Class SpectrumProvider
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AudioProviders.SpectrumProvider.SAMPLE_SIZE
      commentId: F:AudioProviders.SpectrumProvider.SAMPLE_SIZE
      language: CSharp
      name:
        CSharp: SAMPLE_SIZE
        VB: SAMPLE_SIZE
      nameWithType:
        CSharp: SpectrumProvider.SAMPLE_SIZE
        VB: SpectrumProvider.SAMPLE_SIZE
      qualifiedName:
        CSharp: AudioProviders.SpectrumProvider.SAMPLE_SIZE
        VB: AudioProviders.SpectrumProvider.SAMPLE_SIZE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AudioProviders
      source:
        id: SAMPLE_SIZE
        path: ''
        startLine: 1469
      syntax:
        content:
          CSharp: public const int SAMPLE_SIZE = 1024
          VB: Public Const SAMPLE_SIZE As Integer = 1024
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AudioProviders.SpectrumProvider.NUM_BINS
      commentId: F:AudioProviders.SpectrumProvider.NUM_BINS
      language: CSharp
      name:
        CSharp: NUM_BINS
        VB: NUM_BINS
      nameWithType:
        CSharp: SpectrumProvider.NUM_BINS
        VB: SpectrumProvider.NUM_BINS
      qualifiedName:
        CSharp: AudioProviders.SpectrumProvider.NUM_BINS
        VB: AudioProviders.SpectrumProvider.NUM_BINS
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: AudioProviders
      source:
        id: NUM_BINS
        path: ''
        startLine: 1470
      syntax:
        content:
          CSharp: public const int NUM_BINS = 513
          VB: Public Const NUM_BINS As Integer = 513
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AudioProviders.SpectrumProvider.#ctor(System.Int32)
      commentId: M:AudioProviders.SpectrumProvider.#ctor(System.Int32)
      language: CSharp
      name:
        CSharp: SpectrumProvider(Int32)
        VB: SpectrumProvider(Int32)
      nameWithType:
        CSharp: SpectrumProvider.SpectrumProvider(Int32)
        VB: SpectrumProvider.SpectrumProvider(Int32)
      qualifiedName:
        CSharp: AudioProviders.SpectrumProvider.SpectrumProvider(System.Int32)
        VB: AudioProviders.SpectrumProvider.SpectrumProvider(System.Int32)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: AudioProviders
      source:
        id: .ctor
        path: ''
        startLine: 1475
      syntax:
        content:
          CSharp: public SpectrumProvider(int audioClipSampleRate)
          VB: Public Sub New(audioClipSampleRate As Integer)
        parameters:
        - id: audioClipSampleRate
          type: System.Int32
      overload: AudioProviders.SpectrumProvider.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AudioProviders.SpectrumProvider.getSpectrums(System.Single[])
      commentId: M:AudioProviders.SpectrumProvider.getSpectrums(System.Single[])
      language: CSharp
      name:
        CSharp: getSpectrums(Single[])
        VB: getSpectrums(Single())
      nameWithType:
        CSharp: SpectrumProvider.getSpectrums(Single[])
        VB: SpectrumProvider.getSpectrums(Single())
      qualifiedName:
        CSharp: AudioProviders.SpectrumProvider.getSpectrums(System.Single[])
        VB: AudioProviders.SpectrumProvider.getSpectrums(System.Single())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AudioProviders
      source:
        id: getSpectrums
        path: ''
        startLine: 1483
      syntax:
        content:
          CSharp: public List<double[]> getSpectrums(float[] monoSamples)
          VB: Public Function getSpectrums(monoSamples As Single()) As List(Of Double())
        parameters:
        - id: monoSamples
          type: System.Single[]
        return:
          type: System.Collections.Generic.List{System.Double[]}
      overload: AudioProviders.SpectrumProvider.getSpectrums*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AudioProviders.SpectrumProvider.getSpectrumConfigs(System.Collections.Generic.List{System.Double[]},System.Int32)
      commentId: M:AudioProviders.SpectrumProvider.getSpectrumConfigs(System.Collections.Generic.List{System.Double[]},System.Int32)
      language: CSharp
      name:
        CSharp: getSpectrumConfigs(List<Double[]>, Int32)
        VB: getSpectrumConfigs(List(Of Double()), Int32)
      nameWithType:
        CSharp: SpectrumProvider.getSpectrumConfigs(List<Double[]>, Int32)
        VB: SpectrumProvider.getSpectrumConfigs(List(Of Double()), Int32)
      qualifiedName:
        CSharp: AudioProviders.SpectrumProvider.getSpectrumConfigs(System.Collections.Generic.List<System.Double[]>, System.Int32)
        VB: AudioProviders.SpectrumProvider.getSpectrumConfigs(System.Collections.Generic.List(Of System.Double()), System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: AudioProviders
      source:
        id: getSpectrumConfigs
        path: ''
        startLine: 1526
      syntax:
        content:
          CSharp: public List<AnalyzedSpectrumConfig> getSpectrumConfigs(List<double[]> spectrums, int bands)
          VB: Public Function getSpectrumConfigs(spectrums As List(Of Double()), bands As Integer) As List(Of AnalyzedSpectrumConfig)
        parameters:
        - id: spectrums
          type: System.Collections.Generic.List{System.Double[]}
        - id: bands
          type: System.Int32
        return:
          type: System.Collections.Generic.List{AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig}
      overload: AudioProviders.SpectrumProvider.getSpectrumConfigs*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Game
  commentId: N:Game
  language: CSharp
  name:
    CSharp: Game
    VB: Game
  nameWithType:
    CSharp: Game
    VB: Game
  qualifiedName:
    CSharp: Game
    VB: Game
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Game.GameController
    commentId: T:Game.GameController
    language: CSharp
    name:
      CSharp: GameController
      VB: GameController
    nameWithType:
      CSharp: GameController
      VB: GameController
    qualifiedName:
      CSharp: Game.GameController
      VB: Game.GameController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Game
    source:
      id: GameController
      path: ''
      startLine: 1575
    summary: "\nContains the main game loop.\nHolds controllers for notes, obstacles and events/effects and passes the mapping data to them.\nCalls those controller objects on each update to check if there is for example a new note that\nhas to be spawned or an effect that should be triggered, depending on the current time value and\nthe time values saved in the mapping configs.\n\nAlso handles timing depending on the bpm of the song, as distances and timings change according to the bpm.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class GameController : MonoBehaviour'
        VB: >-
          Public Class GameController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Game.GameController.DIFFICULTY_EASY
      commentId: F:Game.GameController.DIFFICULTY_EASY
      language: CSharp
      name:
        CSharp: DIFFICULTY_EASY
        VB: DIFFICULTY_EASY
      nameWithType:
        CSharp: GameController.DIFFICULTY_EASY
        VB: GameController.DIFFICULTY_EASY
      qualifiedName:
        CSharp: Game.GameController.DIFFICULTY_EASY
        VB: Game.GameController.DIFFICULTY_EASY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Game
      source:
        id: DIFFICULTY_EASY
        path: ''
        startLine: 1577
      syntax:
        content:
          CSharp: public const string DIFFICULTY_EASY = "Easy"
          VB: Public Const DIFFICULTY_EASY As String = "Easy"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Game.GameController.DIFFICULTY_NORMAL
      commentId: F:Game.GameController.DIFFICULTY_NORMAL
      language: CSharp
      name:
        CSharp: DIFFICULTY_NORMAL
        VB: DIFFICULTY_NORMAL
      nameWithType:
        CSharp: GameController.DIFFICULTY_NORMAL
        VB: GameController.DIFFICULTY_NORMAL
      qualifiedName:
        CSharp: Game.GameController.DIFFICULTY_NORMAL
        VB: Game.GameController.DIFFICULTY_NORMAL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Game
      source:
        id: DIFFICULTY_NORMAL
        path: ''
        startLine: 1578
      syntax:
        content:
          CSharp: public const string DIFFICULTY_NORMAL = "Normal"
          VB: Public Const DIFFICULTY_NORMAL As String = "Normal"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Game.GameController.DIFFICULTY_HARD
      commentId: F:Game.GameController.DIFFICULTY_HARD
      language: CSharp
      name:
        CSharp: DIFFICULTY_HARD
        VB: DIFFICULTY_HARD
      nameWithType:
        CSharp: GameController.DIFFICULTY_HARD
        VB: GameController.DIFFICULTY_HARD
      qualifiedName:
        CSharp: Game.GameController.DIFFICULTY_HARD
        VB: Game.GameController.DIFFICULTY_HARD
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Game
      source:
        id: DIFFICULTY_HARD
        path: ''
        startLine: 1579
      syntax:
        content:
          CSharp: public const string DIFFICULTY_HARD = "Hard"
          VB: Public Const DIFFICULTY_HARD As String = "Hard"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Game.GameController.DIFFICULTY_EXPERT
      commentId: F:Game.GameController.DIFFICULTY_EXPERT
      language: CSharp
      name:
        CSharp: DIFFICULTY_EXPERT
        VB: DIFFICULTY_EXPERT
      nameWithType:
        CSharp: GameController.DIFFICULTY_EXPERT
        VB: GameController.DIFFICULTY_EXPERT
      qualifiedName:
        CSharp: Game.GameController.DIFFICULTY_EXPERT
        VB: Game.GameController.DIFFICULTY_EXPERT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Game
      source:
        id: DIFFICULTY_EXPERT
        path: ''
        startLine: 1580
      syntax:
        content:
          CSharp: public const string DIFFICULTY_EXPERT = "Expert"
          VB: Public Const DIFFICULTY_EXPERT As String = "Expert"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Game.GameController.DIFFICULTY_EXPERT_PLUS
      commentId: F:Game.GameController.DIFFICULTY_EXPERT_PLUS
      language: CSharp
      name:
        CSharp: DIFFICULTY_EXPERT_PLUS
        VB: DIFFICULTY_EXPERT_PLUS
      nameWithType:
        CSharp: GameController.DIFFICULTY_EXPERT_PLUS
        VB: GameController.DIFFICULTY_EXPERT_PLUS
      qualifiedName:
        CSharp: Game.GameController.DIFFICULTY_EXPERT_PLUS
        VB: Game.GameController.DIFFICULTY_EXPERT_PLUS
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Game
      source:
        id: DIFFICULTY_EXPERT_PLUS
        path: ''
        startLine: 1581
      syntax:
        content:
          CSharp: public const string DIFFICULTY_EXPERT_PLUS = "ExpertPlus"
          VB: Public Const DIFFICULTY_EXPERT_PLUS As String = "ExpertPlus"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Game.GameController.leftTimedBlock
      commentId: F:Game.GameController.leftTimedBlock
      language: CSharp
      name:
        CSharp: leftTimedBlock
        VB: leftTimedBlock
      nameWithType:
        CSharp: GameController.leftTimedBlock
        VB: GameController.leftTimedBlock
      qualifiedName:
        CSharp: Game.GameController.leftTimedBlock
        VB: Game.GameController.leftTimedBlock
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Game
      source:
        id: leftTimedBlock
        path: ''
        startLine: 1583
      syntax:
        content:
          CSharp: public GameObject leftTimedBlock
          VB: Public leftTimedBlock As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Game.GameController.rightTimedBlock
      commentId: F:Game.GameController.rightTimedBlock
      language: CSharp
      name:
        CSharp: rightTimedBlock
        VB: rightTimedBlock
      nameWithType:
        CSharp: GameController.rightTimedBlock
        VB: GameController.rightTimedBlock
      qualifiedName:
        CSharp: Game.GameController.rightTimedBlock
        VB: Game.GameController.rightTimedBlock
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Game
      source:
        id: rightTimedBlock
        path: ''
        startLine: 1584
      syntax:
        content:
          CSharp: public GameObject rightTimedBlock
          VB: Public rightTimedBlock As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Game.GameController.leftTimedBlockNoDirection
      commentId: F:Game.GameController.leftTimedBlockNoDirection
      language: CSharp
      name:
        CSharp: leftTimedBlockNoDirection
        VB: leftTimedBlockNoDirection
      nameWithType:
        CSharp: GameController.leftTimedBlockNoDirection
        VB: GameController.leftTimedBlockNoDirection
      qualifiedName:
        CSharp: Game.GameController.leftTimedBlockNoDirection
        VB: Game.GameController.leftTimedBlockNoDirection
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Game
      source:
        id: leftTimedBlockNoDirection
        path: ''
        startLine: 1585
      syntax:
        content:
          CSharp: public GameObject leftTimedBlockNoDirection
          VB: Public leftTimedBlockNoDirection As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Game.GameController.rightTimedBlockNoDirection
      commentId: F:Game.GameController.rightTimedBlockNoDirection
      language: CSharp
      name:
        CSharp: rightTimedBlockNoDirection
        VB: rightTimedBlockNoDirection
      nameWithType:
        CSharp: GameController.rightTimedBlockNoDirection
        VB: GameController.rightTimedBlockNoDirection
      qualifiedName:
        CSharp: Game.GameController.rightTimedBlockNoDirection
        VB: Game.GameController.rightTimedBlockNoDirection
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Game
      source:
        id: rightTimedBlockNoDirection
        path: ''
        startLine: 1586
      syntax:
        content:
          CSharp: public GameObject rightTimedBlockNoDirection
          VB: Public rightTimedBlockNoDirection As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Game.GameController.obstacle
      commentId: F:Game.GameController.obstacle
      language: CSharp
      name:
        CSharp: obstacle
        VB: obstacle
      nameWithType:
        CSharp: GameController.obstacle
        VB: GameController.obstacle
      qualifiedName:
        CSharp: Game.GameController.obstacle
        VB: Game.GameController.obstacle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Game
      source:
        id: obstacle
        path: ''
        startLine: 1587
      syntax:
        content:
          CSharp: public GameObject obstacle
          VB: Public obstacle As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Game.GameController.generated
      commentId: F:Game.GameController.generated
      language: CSharp
      name:
        CSharp: generated
        VB: generated
      nameWithType:
        CSharp: GameController.generated
        VB: GameController.generated
      qualifiedName:
        CSharp: Game.GameController.generated
        VB: Game.GameController.generated
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Game
      source:
        id: generated
        path: ''
        startLine: 1588
      syntax:
        content:
          CSharp: public Transform generated
          VB: Public generated As Transform
        return:
          type: Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Game.GameController.laserController
      commentId: F:Game.GameController.laserController
      language: CSharp
      name:
        CSharp: laserController
        VB: laserController
      nameWithType:
        CSharp: GameController.laserController
        VB: GameController.laserController
      qualifiedName:
        CSharp: Game.GameController.laserController
        VB: Game.GameController.laserController
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Game
      source:
        id: laserController
        path: ''
        startLine: 1589
      syntax:
        content:
          CSharp: public LaserController laserController
          VB: Public laserController As LaserController
        return:
          type: LaserController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Game.GameController.spinnerLightController
      commentId: F:Game.GameController.spinnerLightController
      language: CSharp
      name:
        CSharp: spinnerLightController
        VB: spinnerLightController
      nameWithType:
        CSharp: GameController.spinnerLightController
        VB: GameController.spinnerLightController
      qualifiedName:
        CSharp: Game.GameController.spinnerLightController
        VB: Game.GameController.spinnerLightController
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Game
      source:
        id: spinnerLightController
        path: ''
        startLine: 1590
      syntax:
        content:
          CSharp: public SpinnerLightController spinnerLightController
          VB: Public spinnerLightController As SpinnerLightController
        return:
          type: SpinnerLightController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Game.GameController.fogController
      commentId: F:Game.GameController.fogController
      language: CSharp
      name:
        CSharp: fogController
        VB: fogController
      nameWithType:
        CSharp: GameController.fogController
        VB: GameController.fogController
      qualifiedName:
        CSharp: Game.GameController.fogController
        VB: Game.GameController.fogController
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Game
      source:
        id: fogController
        path: ''
        startLine: 1591
      syntax:
        content:
          CSharp: public FogController fogController
          VB: Public fogController As FogController
        return:
          type: FogController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: GameEffects
  commentId: N:GameEffects
  language: CSharp
  name:
    CSharp: GameEffects
    VB: GameEffects
  nameWithType:
    CSharp: GameEffects
    VB: GameEffects
  qualifiedName:
    CSharp: GameEffects
    VB: GameEffects
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: GameEffects.FogController
    commentId: T:GameEffects.FogController
    language: CSharp
    name:
      CSharp: FogController
      VB: FogController
    nameWithType:
      CSharp: FogController
      VB: FogController
    qualifiedName:
      CSharp: GameEffects.FogController
      VB: GameEffects.FogController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GameEffects
    source:
      id: FogController
      path: ''
      startLine: 1712
    summary: "\nThis class exposes an API to the MainEffectController to control fog lighting effects\n"
    example: []
    syntax:
      content:
        CSharp: 'public class FogController : MonoBehaviour'
        VB: >-
          Public Class FogController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GameEffects.FogController.baseFog
      commentId: F:GameEffects.FogController.baseFog
      language: CSharp
      name:
        CSharp: baseFog
        VB: baseFog
      nameWithType:
        CSharp: FogController.baseFog
        VB: FogController.baseFog
      qualifiedName:
        CSharp: GameEffects.FogController.baseFog
        VB: GameEffects.FogController.baseFog
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GameEffects
      source:
        id: baseFog
        path: ''
        startLine: 1714
      syntax:
        content:
          CSharp: public MeshRenderer baseFog
          VB: Public baseFog As MeshRenderer
        return:
          type: MeshRenderer
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GameEffects.FogController.redFog
      commentId: F:GameEffects.FogController.redFog
      language: CSharp
      name:
        CSharp: redFog
        VB: redFog
      nameWithType:
        CSharp: FogController.redFog
        VB: FogController.redFog
      qualifiedName:
        CSharp: GameEffects.FogController.redFog
        VB: GameEffects.FogController.redFog
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GameEffects
      source:
        id: redFog
        path: ''
        startLine: 1715
      syntax:
        content:
          CSharp: public VolumetricFogEffect redFog
          VB: Public redFog As VolumetricFogEffect
        return:
          type: GameEffects.VolumetricFogEffect
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GameEffects.FogController.yellowFog
      commentId: F:GameEffects.FogController.yellowFog
      language: CSharp
      name:
        CSharp: yellowFog
        VB: yellowFog
      nameWithType:
        CSharp: FogController.yellowFog
        VB: FogController.yellowFog
      qualifiedName:
        CSharp: GameEffects.FogController.yellowFog
        VB: GameEffects.FogController.yellowFog
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GameEffects
      source:
        id: yellowFog
        path: ''
        startLine: 1716
      syntax:
        content:
          CSharp: public VolumetricFogEffect yellowFog
          VB: Public yellowFog As VolumetricFogEffect
        return:
          type: GameEffects.VolumetricFogEffect
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GameEffects.FogController.greenFog
      commentId: F:GameEffects.FogController.greenFog
      language: CSharp
      name:
        CSharp: greenFog
        VB: greenFog
      nameWithType:
        CSharp: FogController.greenFog
        VB: FogController.greenFog
      qualifiedName:
        CSharp: GameEffects.FogController.greenFog
        VB: GameEffects.FogController.greenFog
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GameEffects
      source:
        id: greenFog
        path: ''
        startLine: 1717
      syntax:
        content:
          CSharp: public VolumetricFogEffect greenFog
          VB: Public greenFog As VolumetricFogEffect
        return:
          type: GameEffects.VolumetricFogEffect
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GameEffects.FogController.blackFog
      commentId: F:GameEffects.FogController.blackFog
      language: CSharp
      name:
        CSharp: blackFog
        VB: blackFog
      nameWithType:
        CSharp: FogController.blackFog
        VB: FogController.blackFog
      qualifiedName:
        CSharp: GameEffects.FogController.blackFog
        VB: GameEffects.FogController.blackFog
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GameEffects
      source:
        id: blackFog
        path: ''
        startLine: 1718
      syntax:
        content:
          CSharp: public VolumetricFogEffect blackFog
          VB: Public blackFog As VolumetricFogEffect
        return:
          type: GameEffects.VolumetricFogEffect
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GameEffects.FogController.blueFog
      commentId: F:GameEffects.FogController.blueFog
      language: CSharp
      name:
        CSharp: blueFog
        VB: blueFog
      nameWithType:
        CSharp: FogController.blueFog
        VB: FogController.blueFog
      qualifiedName:
        CSharp: GameEffects.FogController.blueFog
        VB: GameEffects.FogController.blueFog
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GameEffects
      source:
        id: blueFog
        path: ''
        startLine: 1719
      syntax:
        content:
          CSharp: public VolumetricFogEffect blueFog
          VB: Public blueFog As VolumetricFogEffect
        return:
          type: GameEffects.VolumetricFogEffect
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GameEffects.FogController.redBlink(System.Int32)
      commentId: M:GameEffects.FogController.redBlink(System.Int32)
      language: CSharp
      name:
        CSharp: redBlink(Int32)
        VB: redBlink(Int32)
      nameWithType:
        CSharp: FogController.redBlink(Int32)
        VB: FogController.redBlink(Int32)
      qualifiedName:
        CSharp: GameEffects.FogController.redBlink(System.Int32)
        VB: GameEffects.FogController.redBlink(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GameEffects
      source:
        id: redBlink
        path: ''
        startLine: 1723
      syntax:
        content:
          CSharp: public void redBlink(int frames)
          VB: Public Sub redBlink(frames As Integer)
        parameters:
        - id: frames
          type: System.Int32
      overload: GameEffects.FogController.redBlink*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GameEffects.FogController.yellowBlink(System.Int32)
      commentId: M:GameEffects.FogController.yellowBlink(System.Int32)
      language: CSharp
      name:
        CSharp: yellowBlink(Int32)
        VB: yellowBlink(Int32)
      nameWithType:
        CSharp: FogController.yellowBlink(Int32)
        VB: FogController.yellowBlink(Int32)
      qualifiedName:
        CSharp: GameEffects.FogController.yellowBlink(System.Int32)
        VB: GameEffects.FogController.yellowBlink(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GameEffects
      source:
        id: yellowBlink
        path: ''
        startLine: 1730
      syntax:
        content:
          CSharp: public void yellowBlink(int frames)
          VB: Public Sub yellowBlink(frames As Integer)
        parameters:
        - id: frames
          type: System.Int32
      overload: GameEffects.FogController.yellowBlink*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GameEffects.FogController.greenBlink(System.Int32)
      commentId: M:GameEffects.FogController.greenBlink(System.Int32)
      language: CSharp
      name:
        CSharp: greenBlink(Int32)
        VB: greenBlink(Int32)
      nameWithType:
        CSharp: FogController.greenBlink(Int32)
        VB: FogController.greenBlink(Int32)
      qualifiedName:
        CSharp: GameEffects.FogController.greenBlink(System.Int32)
        VB: GameEffects.FogController.greenBlink(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GameEffects
      source:
        id: greenBlink
        path: ''
        startLine: 1737
      syntax:
        content:
          CSharp: public void greenBlink(int frames)
          VB: Public Sub greenBlink(frames As Integer)
        parameters:
        - id: frames
          type: System.Int32
      overload: GameEffects.FogController.greenBlink*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GameEffects.FogController.blackBlink(System.Int32)
      commentId: M:GameEffects.FogController.blackBlink(System.Int32)
      language: CSharp
      name:
        CSharp: blackBlink(Int32)
        VB: blackBlink(Int32)
      nameWithType:
        CSharp: FogController.blackBlink(Int32)
        VB: FogController.blackBlink(Int32)
      qualifiedName:
        CSharp: GameEffects.FogController.blackBlink(System.Int32)
        VB: GameEffects.FogController.blackBlink(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GameEffects
      source:
        id: blackBlink
        path: ''
        startLine: 1744
      syntax:
        content:
          CSharp: public void blackBlink(int frames)
          VB: Public Sub blackBlink(frames As Integer)
        parameters:
        - id: frames
          type: System.Int32
      overload: GameEffects.FogController.blackBlink*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GameEffects.FogController.blueBlink(System.Int32)
      commentId: M:GameEffects.FogController.blueBlink(System.Int32)
      language: CSharp
      name:
        CSharp: blueBlink(Int32)
        VB: blueBlink(Int32)
      nameWithType:
        CSharp: FogController.blueBlink(Int32)
        VB: FogController.blueBlink(Int32)
      qualifiedName:
        CSharp: GameEffects.FogController.blueBlink(System.Int32)
        VB: GameEffects.FogController.blueBlink(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GameEffects
      source:
        id: blueBlink
        path: ''
        startLine: 1751
      syntax:
        content:
          CSharp: public void blueBlink(int frames)
          VB: Public Sub blueBlink(frames As Integer)
        parameters:
        - id: frames
          type: System.Int32
      overload: GameEffects.FogController.blueBlink*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: GameEffects.LaserController
    commentId: T:GameEffects.LaserController
    language: CSharp
    name:
      CSharp: LaserController
      VB: LaserController
    nameWithType:
      CSharp: LaserController
      VB: LaserController
    qualifiedName:
      CSharp: GameEffects.LaserController
      VB: GameEffects.LaserController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GameEffects
    source:
      id: LaserController
      path: ''
      startLine: 1781
    summary: "\nThis class exposes an API to the MainEffectController to control laser effects.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class LaserController : MonoBehaviour'
        VB: >-
          Public Class LaserController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GameEffects.LaserController.setRandomAngularSpeed(System.Single)
      commentId: M:GameEffects.LaserController.setRandomAngularSpeed(System.Single)
      language: CSharp
      name:
        CSharp: setRandomAngularSpeed(Single)
        VB: setRandomAngularSpeed(Single)
      nameWithType:
        CSharp: LaserController.setRandomAngularSpeed(Single)
        VB: LaserController.setRandomAngularSpeed(Single)
      qualifiedName:
        CSharp: GameEffects.LaserController.setRandomAngularSpeed(System.Single)
        VB: GameEffects.LaserController.setRandomAngularSpeed(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GameEffects
      source:
        id: setRandomAngularSpeed
        path: ''
        startLine: 1797
      syntax:
        content:
          CSharp: public void setRandomAngularSpeed(float magnitude)
          VB: Public Sub setRandomAngularSpeed(magnitude As Single)
        parameters:
        - id: magnitude
          type: System.Single
      overload: GameEffects.LaserController.setRandomAngularSpeed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GameEffects.LaserController.multAngularSpeed(System.Single)
      commentId: M:GameEffects.LaserController.multAngularSpeed(System.Single)
      language: CSharp
      name:
        CSharp: multAngularSpeed(Single)
        VB: multAngularSpeed(Single)
      nameWithType:
        CSharp: LaserController.multAngularSpeed(Single)
        VB: LaserController.multAngularSpeed(Single)
      qualifiedName:
        CSharp: GameEffects.LaserController.multAngularSpeed(System.Single)
        VB: GameEffects.LaserController.multAngularSpeed(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GameEffects
      source:
        id: multAngularSpeed
        path: ''
        startLine: 1805
      syntax:
        content:
          CSharp: public void multAngularSpeed(float speedFactor)
          VB: Public Sub multAngularSpeed(speedFactor As Single)
        parameters:
        - id: speedFactor
          type: System.Single
      overload: GameEffects.LaserController.multAngularSpeed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GameEffects.LaserController.setAbsoluteAngeularSpeed(System.Single,System.Single,System.Single)
      commentId: M:GameEffects.LaserController.setAbsoluteAngeularSpeed(System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: setAbsoluteAngeularSpeed(Single, Single, Single)
        VB: setAbsoluteAngeularSpeed(Single, Single, Single)
      nameWithType:
        CSharp: LaserController.setAbsoluteAngeularSpeed(Single, Single, Single)
        VB: LaserController.setAbsoluteAngeularSpeed(Single, Single, Single)
      qualifiedName:
        CSharp: GameEffects.LaserController.setAbsoluteAngeularSpeed(System.Single, System.Single, System.Single)
        VB: GameEffects.LaserController.setAbsoluteAngeularSpeed(System.Single, System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GameEffects
      source:
        id: setAbsoluteAngeularSpeed
        path: ''
        startLine: 1815
      syntax:
        content:
          CSharp: public void setAbsoluteAngeularSpeed(float x, float y, float z)
          VB: Public Sub setAbsoluteAngeularSpeed(x As Single, y As Single, z As Single)
        parameters:
        - id: x
          type: System.Single
        - id: y
          type: System.Single
        - id: z
          type: System.Single
      overload: GameEffects.LaserController.setAbsoluteAngeularSpeed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GameEffects.LaserController.setRandomRotation(System.Single)
      commentId: M:GameEffects.LaserController.setRandomRotation(System.Single)
      language: CSharp
      name:
        CSharp: setRandomRotation(Single)
        VB: setRandomRotation(Single)
      nameWithType:
        CSharp: LaserController.setRandomRotation(Single)
        VB: LaserController.setRandomRotation(Single)
      qualifiedName:
        CSharp: GameEffects.LaserController.setRandomRotation(System.Single)
        VB: GameEffects.LaserController.setRandomRotation(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GameEffects
      source:
        id: setRandomRotation
        path: ''
        startLine: 1823
      syntax:
        content:
          CSharp: public void setRandomRotation(float magnitude)
          VB: Public Sub setRandomRotation(magnitude As Single)
        parameters:
        - id: magnitude
          type: System.Single
      overload: GameEffects.LaserController.setRandomRotation*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: GameEffects.MainEffectController
    commentId: T:GameEffects.MainEffectController
    language: CSharp
    name:
      CSharp: MainEffectController
      VB: MainEffectController
    nameWithType:
      CSharp: MainEffectController
      VB: MainEffectController
    qualifiedName:
      CSharp: GameEffects.MainEffectController
      VB: GameEffects.MainEffectController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GameEffects
    source:
      id: MainEffectController
      path: ''
      startLine: 1852
    summary: "\nThe main effect controller handling effects like lighting.\nIt holds all the effect controllers for handling those effects and accesses their APIs when an effect should be triggered.\n\nIt also contains the event data from the beat mapping, checking if there is a new update available on each update.\n\nThe choice of effects if random at the moment, as the meaning of the event values from the bsaber-mappings is unknown\nand seemingly not documented ANYWHERE in the internet.\nTherefore random effeects are chosen with a certain probability for each effect, balancing the effect distribution.\n"
    example: []
    syntax:
      content:
        CSharp: public class MainEffectController
        VB: Public Class MainEffectController
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GameEffects.MainEffectController.#ctor(GameEffects.LaserController,GameEffects.SpinnerLightController,GameEffects.FogController,System.Collections.Generic.List{Audio.BeatMappingConfigs.EventConfig},System.Single)
      commentId: M:GameEffects.MainEffectController.#ctor(GameEffects.LaserController,GameEffects.SpinnerLightController,GameEffects.FogController,System.Collections.Generic.List{Audio.BeatMappingConfigs.EventConfig},System.Single)
      language: CSharp
      name:
        CSharp: MainEffectController(LaserController, SpinnerLightController, FogController, List<EventConfig>, Single)
        VB: MainEffectController(LaserController, SpinnerLightController, FogController, List(Of EventConfig), Single)
      nameWithType:
        CSharp: MainEffectController.MainEffectController(LaserController, SpinnerLightController, FogController, List<EventConfig>, Single)
        VB: MainEffectController.MainEffectController(LaserController, SpinnerLightController, FogController, List(Of EventConfig), Single)
      qualifiedName:
        CSharp: GameEffects.MainEffectController.MainEffectController(GameEffects.LaserController, GameEffects.SpinnerLightController, GameEffects.FogController, System.Collections.Generic.List<Audio.BeatMappingConfigs.EventConfig>, System.Single)
        VB: GameEffects.MainEffectController.MainEffectController(GameEffects.LaserController, GameEffects.SpinnerLightController, GameEffects.FogController, System.Collections.Generic.List(Of Audio.BeatMappingConfigs.EventConfig), System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: GameEffects
      source:
        id: .ctor
        path: ''
        startLine: 1861
      syntax:
        content:
          CSharp: public MainEffectController(LaserController laserController, SpinnerLightController spinnyLightController, FogController fogController, List<EventConfig> eventData, float bps)
          VB: Public Sub New(laserController As LaserController, spinnyLightController As SpinnerLightController, fogController As FogController, eventData As List(Of EventConfig), bps As Single)
        parameters:
        - id: laserController
          type: GameEffects.LaserController
        - id: spinnyLightController
          type: GameEffects.SpinnerLightController
        - id: fogController
          type: GameEffects.FogController
        - id: eventData
          type: System.Collections.Generic.List{Audio.BeatMappingConfigs.EventConfig}
        - id: bps
          type: System.Single
      overload: GameEffects.MainEffectController.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GameEffects.MainEffectController.checkEventsAvailable(System.Single)
      commentId: M:GameEffects.MainEffectController.checkEventsAvailable(System.Single)
      language: CSharp
      name:
        CSharp: checkEventsAvailable(Single)
        VB: checkEventsAvailable(Single)
      nameWithType:
        CSharp: MainEffectController.checkEventsAvailable(Single)
        VB: MainEffectController.checkEventsAvailable(Single)
      qualifiedName:
        CSharp: GameEffects.MainEffectController.checkEventsAvailable(System.Single)
        VB: GameEffects.MainEffectController.checkEventsAvailable(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GameEffects
      source:
        id: checkEventsAvailable
        path: ''
        startLine: 1870
      syntax:
        content:
          CSharp: public void checkEventsAvailable(float timePassed)
          VB: Public Sub checkEventsAvailable(timePassed As Single)
        parameters:
        - id: timePassed
          type: System.Single
      overload: GameEffects.MainEffectController.checkEventsAvailable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GameEffects.MainEffectController._handleEvent(Audio.BeatMappingConfigs.EventConfig)
      commentId: M:GameEffects.MainEffectController._handleEvent(Audio.BeatMappingConfigs.EventConfig)
      language: CSharp
      name:
        CSharp: _handleEvent(EventConfig)
        VB: _handleEvent(EventConfig)
      nameWithType:
        CSharp: MainEffectController._handleEvent(EventConfig)
        VB: MainEffectController._handleEvent(EventConfig)
      qualifiedName:
        CSharp: GameEffects.MainEffectController._handleEvent(Audio.BeatMappingConfigs.EventConfig)
        VB: GameEffects.MainEffectController._handleEvent(Audio.BeatMappingConfigs.EventConfig)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GameEffects
      source:
        id: _handleEvent
        path: ''
        startLine: 1888
      syntax:
        content:
          CSharp: public void _handleEvent(EventConfig cfg)
          VB: Public Sub _handleEvent(cfg As EventConfig)
        parameters:
        - id: cfg
          type: Audio.BeatMappingConfigs.EventConfig
      overload: GameEffects.MainEffectController._handleEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: GameEffects.SpinnerLight
    commentId: T:GameEffects.SpinnerLight
    language: CSharp
    name:
      CSharp: SpinnerLight
      VB: SpinnerLight
    nameWithType:
      CSharp: SpinnerLight
      VB: SpinnerLight
    qualifiedName:
      CSharp: GameEffects.SpinnerLight
      VB: GameEffects.SpinnerLight
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GameEffects
    source:
      id: SpinnerLight
      path: ''
      startLine: 1987
    summary: "\nBehavior for spinner objects.Light material can be enabled for an\namount of frames and is then disabled again.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SpinnerLight : MonoBehaviour'
        VB: >-
          Public Class SpinnerLight

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GameEffects.SpinnerLight.topLight
      commentId: F:GameEffects.SpinnerLight.topLight
      language: CSharp
      name:
        CSharp: topLight
        VB: topLight
      nameWithType:
        CSharp: SpinnerLight.topLight
        VB: SpinnerLight.topLight
      qualifiedName:
        CSharp: GameEffects.SpinnerLight.topLight
        VB: GameEffects.SpinnerLight.topLight
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GameEffects
      source:
        id: topLight
        path: ''
        startLine: 1989
      syntax:
        content:
          CSharp: public GameObject topLight
          VB: Public topLight As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GameEffects.SpinnerLight.rightLight
      commentId: F:GameEffects.SpinnerLight.rightLight
      language: CSharp
      name:
        CSharp: rightLight
        VB: rightLight
      nameWithType:
        CSharp: SpinnerLight.rightLight
        VB: SpinnerLight.rightLight
      qualifiedName:
        CSharp: GameEffects.SpinnerLight.rightLight
        VB: GameEffects.SpinnerLight.rightLight
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GameEffects
      source:
        id: rightLight
        path: ''
        startLine: 1990
      syntax:
        content:
          CSharp: public GameObject rightLight
          VB: Public rightLight As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GameEffects.SpinnerLight.bottomLight
      commentId: F:GameEffects.SpinnerLight.bottomLight
      language: CSharp
      name:
        CSharp: bottomLight
        VB: bottomLight
      nameWithType:
        CSharp: SpinnerLight.bottomLight
        VB: SpinnerLight.bottomLight
      qualifiedName:
        CSharp: GameEffects.SpinnerLight.bottomLight
        VB: GameEffects.SpinnerLight.bottomLight
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GameEffects
      source:
        id: bottomLight
        path: ''
        startLine: 1991
      syntax:
        content:
          CSharp: public GameObject bottomLight
          VB: Public bottomLight As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GameEffects.SpinnerLight.leftLight
      commentId: F:GameEffects.SpinnerLight.leftLight
      language: CSharp
      name:
        CSharp: leftLight
        VB: leftLight
      nameWithType:
        CSharp: SpinnerLight.leftLight
        VB: SpinnerLight.leftLight
      qualifiedName:
        CSharp: GameEffects.SpinnerLight.leftLight
        VB: GameEffects.SpinnerLight.leftLight
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GameEffects
      source:
        id: leftLight
        path: ''
        startLine: 1992
      syntax:
        content:
          CSharp: public GameObject leftLight
          VB: Public leftLight As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GameEffects.SpinnerLight.HorizontalLightFrames
      commentId: P:GameEffects.SpinnerLight.HorizontalLightFrames
      language: CSharp
      name:
        CSharp: HorizontalLightFrames
        VB: HorizontalLightFrames
      nameWithType:
        CSharp: SpinnerLight.HorizontalLightFrames
        VB: SpinnerLight.HorizontalLightFrames
      qualifiedName:
        CSharp: GameEffects.SpinnerLight.HorizontalLightFrames
        VB: GameEffects.SpinnerLight.HorizontalLightFrames
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GameEffects
      source:
        id: HorizontalLightFrames
        path: ''
        startLine: 1997
      syntax:
        content:
          CSharp: public int HorizontalLightFrames { get; set; }
          VB: Public Property HorizontalLightFrames As Integer
        parameters: []
        return:
          type: System.Int32
      overload: GameEffects.SpinnerLight.HorizontalLightFrames*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: GameEffects.SpinnerLight.VerticalLightFrames
      commentId: P:GameEffects.SpinnerLight.VerticalLightFrames
      language: CSharp
      name:
        CSharp: VerticalLightFrames
        VB: VerticalLightFrames
      nameWithType:
        CSharp: SpinnerLight.VerticalLightFrames
        VB: SpinnerLight.VerticalLightFrames
      qualifiedName:
        CSharp: GameEffects.SpinnerLight.VerticalLightFrames
        VB: GameEffects.SpinnerLight.VerticalLightFrames
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GameEffects
      source:
        id: VerticalLightFrames
        path: ''
        startLine: 1998
      syntax:
        content:
          CSharp: public int VerticalLightFrames { get; set; }
          VB: Public Property VerticalLightFrames As Integer
        parameters: []
        return:
          type: System.Int32
      overload: GameEffects.SpinnerLight.VerticalLightFrames*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: GameEffects.SpinnerLightController
    commentId: T:GameEffects.SpinnerLightController
    language: CSharp
    name:
      CSharp: SpinnerLightController
      VB: SpinnerLightController
    nameWithType:
      CSharp: SpinnerLightController
      VB: SpinnerLightController
    qualifiedName:
      CSharp: GameEffects.SpinnerLightController
      VB: GameEffects.SpinnerLightController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GameEffects
    source:
      id: SpinnerLightController
      path: ''
      startLine: 2052
    summary: "\nEffect controller for the Spinner Lights exposing an API to the MainEffectController to control spinning light effects.\n\nThis controller is more complicated then the other effect controllers.It contains the big and small spinner game objects\nand adds various blinking and transition effects to them.\n\nIt holds all running effects and disposes them when they have been executed.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SpinnerLightController : MonoBehaviour'
        VB: >-
          Public Class SpinnerLightController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GameEffects.SpinnerLightController.SPINNERS_TYPE_BIG
      commentId: F:GameEffects.SpinnerLightController.SPINNERS_TYPE_BIG
      language: CSharp
      name:
        CSharp: SPINNERS_TYPE_BIG
        VB: SPINNERS_TYPE_BIG
      nameWithType:
        CSharp: SpinnerLightController.SPINNERS_TYPE_BIG
        VB: SpinnerLightController.SPINNERS_TYPE_BIG
      qualifiedName:
        CSharp: GameEffects.SpinnerLightController.SPINNERS_TYPE_BIG
        VB: GameEffects.SpinnerLightController.SPINNERS_TYPE_BIG
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GameEffects
      source:
        id: SPINNERS_TYPE_BIG
        path: ''
        startLine: 2054
      syntax:
        content:
          CSharp: public const string SPINNERS_TYPE_BIG = "SPINNERS_TYPE_BIG"
          VB: Public Const SPINNERS_TYPE_BIG As String = "SPINNERS_TYPE_BIG"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GameEffects.SpinnerLightController.SPINNERS_TYPE_SMALL
      commentId: F:GameEffects.SpinnerLightController.SPINNERS_TYPE_SMALL
      language: CSharp
      name:
        CSharp: SPINNERS_TYPE_SMALL
        VB: SPINNERS_TYPE_SMALL
      nameWithType:
        CSharp: SpinnerLightController.SPINNERS_TYPE_SMALL
        VB: SpinnerLightController.SPINNERS_TYPE_SMALL
      qualifiedName:
        CSharp: GameEffects.SpinnerLightController.SPINNERS_TYPE_SMALL
        VB: GameEffects.SpinnerLightController.SPINNERS_TYPE_SMALL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GameEffects
      source:
        id: SPINNERS_TYPE_SMALL
        path: ''
        startLine: 2055
      syntax:
        content:
          CSharp: public const string SPINNERS_TYPE_SMALL = "SPINNERS_TYPE_SMALL"
          VB: Public Const SPINNERS_TYPE_SMALL As String = "SPINNERS_TYPE_SMALL"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GameEffects.SpinnerLightController.Start
      commentId: M:GameEffects.SpinnerLightController.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: SpinnerLightController.Start()
        VB: SpinnerLightController.Start()
      qualifiedName:
        CSharp: GameEffects.SpinnerLightController.Start()
        VB: GameEffects.SpinnerLightController.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GameEffects
      source:
        id: Start
        path: ''
        startLine: 2061
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: GameEffects.SpinnerLightController.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GameEffects.SpinnerLightController.frontBackTransition(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)
      commentId: M:GameEffects.SpinnerLightController.frontBackTransition(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: frontBackTransition(String, String, String, Int32, Int32, Int32)
        VB: frontBackTransition(String, String, String, Int32, Int32, Int32)
      nameWithType:
        CSharp: SpinnerLightController.frontBackTransition(String, String, String, Int32, Int32, Int32)
        VB: SpinnerLightController.frontBackTransition(String, String, String, Int32, Int32, Int32)
      qualifiedName:
        CSharp: GameEffects.SpinnerLightController.frontBackTransition(System.String, System.String, System.String, System.Int32, System.Int32, System.Int32)
        VB: GameEffects.SpinnerLightController.frontBackTransition(System.String, System.String, System.String, System.Int32, System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GameEffects
      source:
        id: frontBackTransition
        path: ''
        startLine: 2078
      syntax:
        content:
          CSharp: public void frontBackTransition(string transitionDirection, string horizontalVertical, string spinnersSize, int flashDuration = 10, int startDelay = 0, int transitionTime = default(int))
          VB: Public Sub frontBackTransition(transitionDirection As String, horizontalVertical As String, spinnersSize As String, flashDuration As Integer = 10, startDelay As Integer = 0, transitionTime As Integer = Nothing)
        parameters:
        - id: transitionDirection
          type: System.String
        - id: horizontalVertical
          type: System.String
        - id: spinnersSize
          type: System.String
        - id: flashDuration
          type: System.Int32
        - id: startDelay
          type: System.Int32
        - id: transitionTime
          type: System.Int32
      overload: GameEffects.SpinnerLightController.frontBackTransition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GameEffects.SpinnerLightController.blinkAll(System.String,System.String,System.Int32)
      commentId: M:GameEffects.SpinnerLightController.blinkAll(System.String,System.String,System.Int32)
      language: CSharp
      name:
        CSharp: blinkAll(String, String, Int32)
        VB: blinkAll(String, String, Int32)
      nameWithType:
        CSharp: SpinnerLightController.blinkAll(String, String, Int32)
        VB: SpinnerLightController.blinkAll(String, String, Int32)
      qualifiedName:
        CSharp: GameEffects.SpinnerLightController.blinkAll(System.String, System.String, System.Int32)
        VB: GameEffects.SpinnerLightController.blinkAll(System.String, System.String, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GameEffects
      source:
        id: blinkAll
        path: ''
        startLine: 2084
      syntax:
        content:
          CSharp: public void blinkAll(string spinnerSize, string horizontalVertical, int duration)
          VB: Public Sub blinkAll(spinnerSize As String, horizontalVertical As String, duration As Integer)
        parameters:
        - id: spinnerSize
          type: System.String
        - id: horizontalVertical
          type: System.String
        - id: duration
          type: System.Int32
      overload: GameEffects.SpinnerLightController.blinkAll*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GameEffects.SpinnerLightController.Update
      commentId: M:GameEffects.SpinnerLightController.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: SpinnerLightController.Update()
        VB: SpinnerLightController.Update()
      qualifiedName:
        CSharp: GameEffects.SpinnerLightController.Update()
        VB: GameEffects.SpinnerLightController.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GameEffects
      source:
        id: Update
        path: ''
        startLine: 2090
      syntax:
        content:
          CSharp: public void Update()
          VB: Public Sub Update
      overload: GameEffects.SpinnerLightController.Update*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: GameEffects.VolumetricFogEffect
    commentId: T:GameEffects.VolumetricFogEffect
    language: CSharp
    name:
      CSharp: VolumetricFogEffect
      VB: VolumetricFogEffect
    nameWithType:
      CSharp: VolumetricFogEffect
      VB: VolumetricFogEffect
    qualifiedName:
      CSharp: GameEffects.VolumetricFogEffect
      VB: GameEffects.VolumetricFogEffect
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GameEffects
    source:
      id: VolumetricFogEffect
      path: ''
      startLine: 2272
    summary: "\nEffect behavior that is added to fog objects and enables or disables the fog renderer,\ndepending on whether or not it should currently be active(meaning an effect is running).\n"
    example: []
    syntax:
      content:
        CSharp: 'public class VolumetricFogEffect : MonoBehaviour'
        VB: >-
          Public Class VolumetricFogEffect

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GameEffects.VolumetricFogEffect.ActiveFrames
      commentId: P:GameEffects.VolumetricFogEffect.ActiveFrames
      language: CSharp
      name:
        CSharp: ActiveFrames
        VB: ActiveFrames
      nameWithType:
        CSharp: VolumetricFogEffect.ActiveFrames
        VB: VolumetricFogEffect.ActiveFrames
      qualifiedName:
        CSharp: GameEffects.VolumetricFogEffect.ActiveFrames
        VB: GameEffects.VolumetricFogEffect.ActiveFrames
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GameEffects
      source:
        id: ActiveFrames
        path: ''
        startLine: 2277
      syntax:
        content:
          CSharp: public int ActiveFrames { get; set; }
          VB: Public Property ActiveFrames As Integer
        parameters: []
        return:
          type: System.Int32
      overload: GameEffects.VolumetricFogEffect.ActiveFrames*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
- id: GameEffects.SpinnerLightEffects
  commentId: N:GameEffects.SpinnerLightEffects
  language: CSharp
  name:
    CSharp: GameEffects.SpinnerLightEffects
    VB: GameEffects.SpinnerLightEffects
  nameWithType:
    CSharp: GameEffects.SpinnerLightEffects
    VB: GameEffects.SpinnerLightEffects
  qualifiedName:
    CSharp: GameEffects.SpinnerLightEffects
    VB: GameEffects.SpinnerLightEffects
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler
    commentId: T:GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler
    language: CSharp
    name:
      CSharp: BaseSpinnerLightEffectHandler
      VB: BaseSpinnerLightEffectHandler
    nameWithType:
      CSharp: BaseSpinnerLightEffectHandler
      VB: BaseSpinnerLightEffectHandler
    qualifiedName:
      CSharp: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler
      VB: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GameEffects.SpinnerLightEffects
    source:
      id: BaseSpinnerLightEffectHandler
      path: ''
      startLine: 2121
    summary: "\nBase class for spinner light effects.\n"
    example: []
    syntax:
      content:
        CSharp: public class BaseSpinnerLightEffectHandler
        VB: Public Class BaseSpinnerLightEffectHandler
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler._isDone
      commentId: F:GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler._isDone
      language: CSharp
      name:
        CSharp: _isDone
        VB: _isDone
      nameWithType:
        CSharp: BaseSpinnerLightEffectHandler._isDone
        VB: BaseSpinnerLightEffectHandler._isDone
      qualifiedName:
        CSharp: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler._isDone
        VB: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler._isDone
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GameEffects.SpinnerLightEffects
      source:
        id: _isDone
        path: ''
        startLine: 2123
      syntax:
        content:
          CSharp: protected bool _isDone
          VB: Protected _isDone As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone
      commentId: M:GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone
      language: CSharp
      name:
        CSharp: isDone()
        VB: isDone()
      nameWithType:
        CSharp: BaseSpinnerLightEffectHandler.isDone()
        VB: BaseSpinnerLightEffectHandler.isDone()
      qualifiedName:
        CSharp: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone()
        VB: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GameEffects.SpinnerLightEffects
      source:
        id: isDone
        path: ''
        startLine: 2125
      syntax:
        content:
          CSharp: public bool isDone()
          VB: Public Function isDone As Boolean
        return:
          type: System.Boolean
      overload: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.update
      commentId: M:GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.update
      language: CSharp
      name:
        CSharp: update()
        VB: update()
      nameWithType:
        CSharp: BaseSpinnerLightEffectHandler.update()
        VB: BaseSpinnerLightEffectHandler.update()
      qualifiedName:
        CSharp: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.update()
        VB: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GameEffects.SpinnerLightEffects
      source:
        id: update
        path: ''
        startLine: 2130
      syntax:
        content:
          CSharp: public virtual void update()
          VB: Public Overridable Sub update
      overload: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.update*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler
    commentId: T:GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler
    language: CSharp
    name:
      CSharp: FrontBackTransitionSpinnerLightEffectHandler
      VB: FrontBackTransitionSpinnerLightEffectHandler
    nameWithType:
      CSharp: FrontBackTransitionSpinnerLightEffectHandler
      VB: FrontBackTransitionSpinnerLightEffectHandler
    qualifiedName:
      CSharp: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler
      VB: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GameEffects.SpinnerLightEffects
    source:
      id: FrontBackTransitionSpinnerLightEffectHandler
      path: ''
      startLine: 2141
    summary: "\nThis effect will light up all spinners of a certain type consecutively with a delay, so that a\ntransition from the front to the back(or the other direction) is created.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class FrontBackTransitionSpinnerLightEffectHandler : BaseSpinnerLightEffectHandler'
        VB: >-
          Public Class FrontBackTransitionSpinnerLightEffectHandler

              Inherits BaseSpinnerLightEffectHandler
    inheritance:
    - System.Object
    - GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler
    inheritedMembers:
    - GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler._isDone
    - GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.TRANSITION_DIRECTION_FRONT_TO_BACK
      commentId: F:GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.TRANSITION_DIRECTION_FRONT_TO_BACK
      language: CSharp
      name:
        CSharp: TRANSITION_DIRECTION_FRONT_TO_BACK
        VB: TRANSITION_DIRECTION_FRONT_TO_BACK
      nameWithType:
        CSharp: FrontBackTransitionSpinnerLightEffectHandler.TRANSITION_DIRECTION_FRONT_TO_BACK
        VB: FrontBackTransitionSpinnerLightEffectHandler.TRANSITION_DIRECTION_FRONT_TO_BACK
      qualifiedName:
        CSharp: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.TRANSITION_DIRECTION_FRONT_TO_BACK
        VB: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.TRANSITION_DIRECTION_FRONT_TO_BACK
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GameEffects.SpinnerLightEffects
      source:
        id: TRANSITION_DIRECTION_FRONT_TO_BACK
        path: ''
        startLine: 2143
      syntax:
        content:
          CSharp: public const string TRANSITION_DIRECTION_FRONT_TO_BACK = "TRANSITION_DIRECTION_FRONT_TO_BACK"
          VB: Public Const TRANSITION_DIRECTION_FRONT_TO_BACK As String = "TRANSITION_DIRECTION_FRONT_TO_BACK"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.TRANSITION_DIRECTION_BACK_TO_FRONT
      commentId: F:GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.TRANSITION_DIRECTION_BACK_TO_FRONT
      language: CSharp
      name:
        CSharp: TRANSITION_DIRECTION_BACK_TO_FRONT
        VB: TRANSITION_DIRECTION_BACK_TO_FRONT
      nameWithType:
        CSharp: FrontBackTransitionSpinnerLightEffectHandler.TRANSITION_DIRECTION_BACK_TO_FRONT
        VB: FrontBackTransitionSpinnerLightEffectHandler.TRANSITION_DIRECTION_BACK_TO_FRONT
      qualifiedName:
        CSharp: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.TRANSITION_DIRECTION_BACK_TO_FRONT
        VB: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.TRANSITION_DIRECTION_BACK_TO_FRONT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GameEffects.SpinnerLightEffects
      source:
        id: TRANSITION_DIRECTION_BACK_TO_FRONT
        path: ''
        startLine: 2144
      syntax:
        content:
          CSharp: public const string TRANSITION_DIRECTION_BACK_TO_FRONT = "TRANSITION_DIRECTION_BACK_TO_FRONT"
          VB: Public Const TRANSITION_DIRECTION_BACK_TO_FRONT As String = "TRANSITION_DIRECTION_BACK_TO_FRONT"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.TYPE_VERTICAL
      commentId: F:GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.TYPE_VERTICAL
      language: CSharp
      name:
        CSharp: TYPE_VERTICAL
        VB: TYPE_VERTICAL
      nameWithType:
        CSharp: FrontBackTransitionSpinnerLightEffectHandler.TYPE_VERTICAL
        VB: FrontBackTransitionSpinnerLightEffectHandler.TYPE_VERTICAL
      qualifiedName:
        CSharp: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.TYPE_VERTICAL
        VB: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.TYPE_VERTICAL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GameEffects.SpinnerLightEffects
      source:
        id: TYPE_VERTICAL
        path: ''
        startLine: 2145
      syntax:
        content:
          CSharp: public const string TYPE_VERTICAL = "TYPE_VERTICAL"
          VB: Public Const TYPE_VERTICAL As String = "TYPE_VERTICAL"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.TYPE_HORIZONTAL
      commentId: F:GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.TYPE_HORIZONTAL
      language: CSharp
      name:
        CSharp: TYPE_HORIZONTAL
        VB: TYPE_HORIZONTAL
      nameWithType:
        CSharp: FrontBackTransitionSpinnerLightEffectHandler.TYPE_HORIZONTAL
        VB: FrontBackTransitionSpinnerLightEffectHandler.TYPE_HORIZONTAL
      qualifiedName:
        CSharp: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.TYPE_HORIZONTAL
        VB: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.TYPE_HORIZONTAL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GameEffects.SpinnerLightEffects
      source:
        id: TYPE_HORIZONTAL
        path: ''
        startLine: 2146
      syntax:
        content:
          CSharp: public const string TYPE_HORIZONTAL = "TYPE_HORIZONTAL"
          VB: Public Const TYPE_HORIZONTAL As String = "TYPE_HORIZONTAL"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.LIGHT_TRANSITION_TIME
      commentId: F:GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.LIGHT_TRANSITION_TIME
      language: CSharp
      name:
        CSharp: LIGHT_TRANSITION_TIME
        VB: LIGHT_TRANSITION_TIME
      nameWithType:
        CSharp: FrontBackTransitionSpinnerLightEffectHandler.LIGHT_TRANSITION_TIME
        VB: FrontBackTransitionSpinnerLightEffectHandler.LIGHT_TRANSITION_TIME
      qualifiedName:
        CSharp: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.LIGHT_TRANSITION_TIME
        VB: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.LIGHT_TRANSITION_TIME
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GameEffects.SpinnerLightEffects
      source:
        id: LIGHT_TRANSITION_TIME
        path: ''
        startLine: 2148
      syntax:
        content:
          CSharp: public const int LIGHT_TRANSITION_TIME = 5
          VB: Public Const LIGHT_TRANSITION_TIME As Integer = 5
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.#ctor(System.Collections.Generic.List{GameEffects.SpinnerLight},System.String,System.String,System.Int32,System.Int32,System.Int32)
      commentId: M:GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.#ctor(System.Collections.Generic.List{GameEffects.SpinnerLight},System.String,System.String,System.Int32,System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: FrontBackTransitionSpinnerLightEffectHandler(List<SpinnerLight>, String, String, Int32, Int32, Int32)
        VB: FrontBackTransitionSpinnerLightEffectHandler(List(Of SpinnerLight), String, String, Int32, Int32, Int32)
      nameWithType:
        CSharp: FrontBackTransitionSpinnerLightEffectHandler.FrontBackTransitionSpinnerLightEffectHandler(List<SpinnerLight>, String, String, Int32, Int32, Int32)
        VB: FrontBackTransitionSpinnerLightEffectHandler.FrontBackTransitionSpinnerLightEffectHandler(List(Of SpinnerLight), String, String, Int32, Int32, Int32)
      qualifiedName:
        CSharp: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.FrontBackTransitionSpinnerLightEffectHandler(System.Collections.Generic.List<GameEffects.SpinnerLight>, System.String, System.String, System.Int32, System.Int32, System.Int32)
        VB: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.FrontBackTransitionSpinnerLightEffectHandler(System.Collections.Generic.List(Of GameEffects.SpinnerLight), System.String, System.String, System.Int32, System.Int32, System.Int32)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: GameEffects.SpinnerLightEffects
      source:
        id: .ctor
        path: ''
        startLine: 2159
      syntax:
        content:
          CSharp: public FrontBackTransitionSpinnerLightEffectHandler(List<SpinnerLight> spinners, string horizontalVertical, string direction, int flashDuration, int startDelay, int currentTransitionCounter)
          VB: Public Sub New(spinners As List(Of SpinnerLight), horizontalVertical As String, direction As String, flashDuration As Integer, startDelay As Integer, currentTransitionCounter As Integer)
        parameters:
        - id: spinners
          type: System.Collections.Generic.List{GameEffects.SpinnerLight}
        - id: horizontalVertical
          type: System.String
        - id: direction
          type: System.String
        - id: flashDuration
          type: System.Int32
        - id: startDelay
          type: System.Int32
        - id: currentTransitionCounter
          type: System.Int32
      overload: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.update
      commentId: M:GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.update
      language: CSharp
      name:
        CSharp: update()
        VB: update()
      nameWithType:
        CSharp: FrontBackTransitionSpinnerLightEffectHandler.update()
        VB: FrontBackTransitionSpinnerLightEffectHandler.update()
      qualifiedName:
        CSharp: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.update()
        VB: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GameEffects.SpinnerLightEffects
      source:
        id: update
        path: ''
        startLine: 2182
      syntax:
        content:
          CSharp: public override void update()
          VB: Public Overrides Sub update
      overload: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.update*
      overridden: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.update
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler
    commentId: T:GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler
    language: CSharp
    name:
      CSharp: BlinkAllSpinnerLightEffectHandler
      VB: BlinkAllSpinnerLightEffectHandler
    nameWithType:
      CSharp: BlinkAllSpinnerLightEffectHandler
      VB: BlinkAllSpinnerLightEffectHandler
    qualifiedName:
      CSharp: GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler
      VB: GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GameEffects.SpinnerLightEffects
    source:
      id: BlinkAllSpinnerLightEffectHandler
      path: ''
      startLine: 2216
    summary: "\nThis effect will make all spinners of a certain type(veritcal, horizontal...)\nlight up for a certain amount of frames.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BlinkAllSpinnerLightEffectHandler : BaseSpinnerLightEffectHandler'
        VB: >-
          Public Class BlinkAllSpinnerLightEffectHandler

              Inherits BaseSpinnerLightEffectHandler
    inheritance:
    - System.Object
    - GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler
    inheritedMembers:
    - GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler._isDone
    - GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.TYPE_VERTICAL
      commentId: F:GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.TYPE_VERTICAL
      language: CSharp
      name:
        CSharp: TYPE_VERTICAL
        VB: TYPE_VERTICAL
      nameWithType:
        CSharp: BlinkAllSpinnerLightEffectHandler.TYPE_VERTICAL
        VB: BlinkAllSpinnerLightEffectHandler.TYPE_VERTICAL
      qualifiedName:
        CSharp: GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.TYPE_VERTICAL
        VB: GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.TYPE_VERTICAL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GameEffects.SpinnerLightEffects
      source:
        id: TYPE_VERTICAL
        path: ''
        startLine: 2218
      syntax:
        content:
          CSharp: public const string TYPE_VERTICAL = "TYPE_VERTICAL"
          VB: Public Const TYPE_VERTICAL As String = "TYPE_VERTICAL"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.TYPE_HORIZONTAL
      commentId: F:GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.TYPE_HORIZONTAL
      language: CSharp
      name:
        CSharp: TYPE_HORIZONTAL
        VB: TYPE_HORIZONTAL
      nameWithType:
        CSharp: BlinkAllSpinnerLightEffectHandler.TYPE_HORIZONTAL
        VB: BlinkAllSpinnerLightEffectHandler.TYPE_HORIZONTAL
      qualifiedName:
        CSharp: GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.TYPE_HORIZONTAL
        VB: GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.TYPE_HORIZONTAL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GameEffects.SpinnerLightEffects
      source:
        id: TYPE_HORIZONTAL
        path: ''
        startLine: 2219
      syntax:
        content:
          CSharp: public const string TYPE_HORIZONTAL = "TYPE_HORIZONTAL"
          VB: Public Const TYPE_HORIZONTAL As String = "TYPE_HORIZONTAL"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.#ctor(System.Collections.Generic.List{GameEffects.SpinnerLight},System.String,System.Int32)
      commentId: M:GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.#ctor(System.Collections.Generic.List{GameEffects.SpinnerLight},System.String,System.Int32)
      language: CSharp
      name:
        CSharp: BlinkAllSpinnerLightEffectHandler(List<SpinnerLight>, String, Int32)
        VB: BlinkAllSpinnerLightEffectHandler(List(Of SpinnerLight), String, Int32)
      nameWithType:
        CSharp: BlinkAllSpinnerLightEffectHandler.BlinkAllSpinnerLightEffectHandler(List<SpinnerLight>, String, Int32)
        VB: BlinkAllSpinnerLightEffectHandler.BlinkAllSpinnerLightEffectHandler(List(Of SpinnerLight), String, Int32)
      qualifiedName:
        CSharp: GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.BlinkAllSpinnerLightEffectHandler(System.Collections.Generic.List<GameEffects.SpinnerLight>, System.String, System.Int32)
        VB: GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.BlinkAllSpinnerLightEffectHandler(System.Collections.Generic.List(Of GameEffects.SpinnerLight), System.String, System.Int32)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: GameEffects.SpinnerLightEffects
      source:
        id: .ctor
        path: ''
        startLine: 2227
      syntax:
        content:
          CSharp: public BlinkAllSpinnerLightEffectHandler(List<SpinnerLight> spinners, string type, int duration)
          VB: Public Sub New(spinners As List(Of SpinnerLight), type As String, duration As Integer)
        parameters:
        - id: spinners
          type: System.Collections.Generic.List{GameEffects.SpinnerLight}
        - id: type
          type: System.String
        - id: duration
          type: System.Int32
      overload: GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.update
      commentId: M:GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.update
      language: CSharp
      name:
        CSharp: update()
        VB: update()
      nameWithType:
        CSharp: BlinkAllSpinnerLightEffectHandler.update()
        VB: BlinkAllSpinnerLightEffectHandler.update()
      qualifiedName:
        CSharp: GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.update()
        VB: GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GameEffects.SpinnerLightEffects
      source:
        id: update
        path: ''
        startLine: 2236
      syntax:
        content:
          CSharp: public override void update()
          VB: Public Overrides Sub update
      overload: GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.update*
      overridden: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.update
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
- id: GameSpawnedObjects
  commentId: N:GameSpawnedObjects
  language: CSharp
  name:
    CSharp: GameSpawnedObjects
    VB: GameSpawnedObjects
  nameWithType:
    CSharp: GameSpawnedObjects
    VB: GameSpawnedObjects
  qualifiedName:
    CSharp: GameSpawnedObjects
    VB: GameSpawnedObjects
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: GameSpawnedObjects.Obstacle
    commentId: T:GameSpawnedObjects.Obstacle
    language: CSharp
    name:
      CSharp: Obstacle
      VB: Obstacle
    nameWithType:
      CSharp: Obstacle
      VB: Obstacle
    qualifiedName:
      CSharp: GameSpawnedObjects.Obstacle
      VB: GameSpawnedObjects.Obstacle
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GameSpawnedObjects
    source:
      id: Obstacle
      path: ''
      startLine: 2313
    summary: "\nDefines the behavior of obstacles.Checks if the obstacle collider intersects with the player collider bounds\non every update. Has to be done like this, because we don&apos;t want actual collision here, we just want to\nknow if there is an intersection to apply damage.\nAlso makes sure that the obstacle despawns after a while.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Obstacle : MonoBehaviour'
        VB: >-
          Public Class Obstacle

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GameSpawnedObjects.Obstacle.obstacleCollider
      commentId: F:GameSpawnedObjects.Obstacle.obstacleCollider
      language: CSharp
      name:
        CSharp: obstacleCollider
        VB: obstacleCollider
      nameWithType:
        CSharp: Obstacle.obstacleCollider
        VB: Obstacle.obstacleCollider
      qualifiedName:
        CSharp: GameSpawnedObjects.Obstacle.obstacleCollider
        VB: GameSpawnedObjects.Obstacle.obstacleCollider
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GameSpawnedObjects
      source:
        id: obstacleCollider
        path: ''
        startLine: 2317
      syntax:
        content:
          CSharp: public Collider obstacleCollider
          VB: Public obstacleCollider As Collider
        return:
          type: Collider
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: GameSpawnedObjects.Sabre
    commentId: T:GameSpawnedObjects.Sabre
    language: CSharp
    name:
      CSharp: Sabre
      VB: Sabre
    nameWithType:
      CSharp: Sabre
      VB: Sabre
    qualifiedName:
      CSharp: GameSpawnedObjects.Sabre
      VB: GameSpawnedObjects.Sabre
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GameSpawnedObjects
    source:
      id: Sabre
      path: ''
      startLine: 2353
    summary: "\nThe Sabre behavior.This includes hitting, missing as well as slicing them\nand creating sliced objects from sliced notes (using an external library) and vibrations.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Sabre : MonoBehaviour'
        VB: >-
          Public Class Sabre

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GameSpawnedObjects.Sabre.blockHitLayer
      commentId: F:GameSpawnedObjects.Sabre.blockHitLayer
      language: CSharp
      name:
        CSharp: blockHitLayer
        VB: blockHitLayer
      nameWithType:
        CSharp: Sabre.blockHitLayer
        VB: Sabre.blockHitLayer
      qualifiedName:
        CSharp: GameSpawnedObjects.Sabre.blockHitLayer
        VB: GameSpawnedObjects.Sabre.blockHitLayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GameSpawnedObjects
      source:
        id: blockHitLayer
        path: ''
        startLine: 2358
      syntax:
        content:
          CSharp: public int blockHitLayer
          VB: Public blockHitLayer As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GameSpawnedObjects.Sabre.generated
      commentId: F:GameSpawnedObjects.Sabre.generated
      language: CSharp
      name:
        CSharp: generated
        VB: generated
      nameWithType:
        CSharp: Sabre.generated
        VB: Sabre.generated
      qualifiedName:
        CSharp: GameSpawnedObjects.Sabre.generated
        VB: GameSpawnedObjects.Sabre.generated
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GameSpawnedObjects
      source:
        id: generated
        path: ''
        startLine: 2359
      syntax:
        content:
          CSharp: public Transform generated
          VB: Public generated As Transform
        return:
          type: Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: GameSpawnedObjects.SlicedObject
    commentId: T:GameSpawnedObjects.SlicedObject
    language: CSharp
    name:
      CSharp: SlicedObject
      VB: SlicedObject
    nameWithType:
      CSharp: SlicedObject
      VB: SlicedObject
    qualifiedName:
      CSharp: GameSpawnedObjects.SlicedObject
      VB: GameSpawnedObjects.SlicedObject
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GameSpawnedObjects
    source:
      id: SlicedObject
      path: ''
      startLine: 2486
    summary: "\nAn object that was cut and has to despawn after some time. After cutting a block, 2 of these objects will be created.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SlicedObject : MonoBehaviour'
        VB: >-
          Public Class SlicedObject

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: GameSpawnedObjects.TimedBlock
    commentId: T:GameSpawnedObjects.TimedBlock
    language: CSharp
    name:
      CSharp: TimedBlock
      VB: TimedBlock
    nameWithType:
      CSharp: TimedBlock
      VB: TimedBlock
    qualifiedName:
      CSharp: GameSpawnedObjects.TimedBlock
      VB: GameSpawnedObjects.TimedBlock
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GameSpawnedObjects
    source:
      id: TimedBlock
      path: ''
      startLine: 2519
    summary: "\nBehavior for the Note blocks, making sure that they despawn after a while or when they reach a certain position behind the player.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TimedBlock : MonoBehaviour'
        VB: >-
          Public Class TimedBlock

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GameSpawnedObjects.TimedBlock.BLOCK_DAMAGE
      commentId: F:GameSpawnedObjects.TimedBlock.BLOCK_DAMAGE
      language: CSharp
      name:
        CSharp: BLOCK_DAMAGE
        VB: BLOCK_DAMAGE
      nameWithType:
        CSharp: TimedBlock.BLOCK_DAMAGE
        VB: TimedBlock.BLOCK_DAMAGE
      qualifiedName:
        CSharp: GameSpawnedObjects.TimedBlock.BLOCK_DAMAGE
        VB: GameSpawnedObjects.TimedBlock.BLOCK_DAMAGE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GameSpawnedObjects
      source:
        id: BLOCK_DAMAGE
        path: ''
        startLine: 2521
      syntax:
        content:
          CSharp: public const float BLOCK_DAMAGE = 3F
          VB: Public Const BLOCK_DAMAGE As Single = 3F
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GameSpawnedObjects.TimedBlock.BLOCK_HEAL
      commentId: F:GameSpawnedObjects.TimedBlock.BLOCK_HEAL
      language: CSharp
      name:
        CSharp: BLOCK_HEAL
        VB: BLOCK_HEAL
      nameWithType:
        CSharp: TimedBlock.BLOCK_HEAL
        VB: TimedBlock.BLOCK_HEAL
      qualifiedName:
        CSharp: GameSpawnedObjects.TimedBlock.BLOCK_HEAL
        VB: GameSpawnedObjects.TimedBlock.BLOCK_HEAL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GameSpawnedObjects
      source:
        id: BLOCK_HEAL
        path: ''
        startLine: 2522
      syntax:
        content:
          CSharp: public const float BLOCK_HEAL = 5F
          VB: Public Const BLOCK_HEAL As Single = 5F
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GameSpawnedObjects.TimedBlock.MissBlock
      commentId: M:GameSpawnedObjects.TimedBlock.MissBlock
      language: CSharp
      name:
        CSharp: MissBlock()
        VB: MissBlock()
      nameWithType:
        CSharp: TimedBlock.MissBlock()
        VB: TimedBlock.MissBlock()
      qualifiedName:
        CSharp: GameSpawnedObjects.TimedBlock.MissBlock()
        VB: GameSpawnedObjects.TimedBlock.MissBlock()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GameSpawnedObjects
      source:
        id: MissBlock
        path: ''
        startLine: 2537
      syntax:
        content:
          CSharp: public void MissBlock()
          VB: Public Sub MissBlock
      overload: GameSpawnedObjects.TimedBlock.MissBlock*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: GameSpawners
  commentId: N:GameSpawners
  language: CSharp
  name:
    CSharp: GameSpawners
    VB: GameSpawners
  nameWithType:
    CSharp: GameSpawners
    VB: GameSpawners
  qualifiedName:
    CSharp: GameSpawners
    VB: GameSpawners
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: GameSpawners.NoteSpawner
    commentId: T:GameSpawners.NoteSpawner
    language: CSharp
    name:
      CSharp: NoteSpawner
      VB: NoteSpawner
    nameWithType:
      CSharp: NoteSpawner
      VB: NoteSpawner
    qualifiedName:
      CSharp: GameSpawners.NoteSpawner
      VB: GameSpawners.NoteSpawner
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GameSpawners
    source:
      id: NoteSpawner
      path: ''
      startLine: 2556
    summary: "\nContains note mapping data and spawns notes at the correct time.The updating is triggered from the &apos;Game&apos; object,\nwhich contains the main loop updating the spawner objects.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class NoteSpawner : ScriptableObject'
        VB: >-
          Public Class NoteSpawner

              Inherits ScriptableObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GameSpawners.NoteSpawner.BLOCK_DISTANCE
      commentId: F:GameSpawners.NoteSpawner.BLOCK_DISTANCE
      language: CSharp
      name:
        CSharp: BLOCK_DISTANCE
        VB: BLOCK_DISTANCE
      nameWithType:
        CSharp: NoteSpawner.BLOCK_DISTANCE
        VB: NoteSpawner.BLOCK_DISTANCE
      qualifiedName:
        CSharp: GameSpawners.NoteSpawner.BLOCK_DISTANCE
        VB: GameSpawners.NoteSpawner.BLOCK_DISTANCE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GameSpawners
      source:
        id: BLOCK_DISTANCE
        path: ''
        startLine: 2558
      syntax:
        content:
          CSharp: public const float BLOCK_DISTANCE = 20F
          VB: Public Const BLOCK_DISTANCE As Single = 20F
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GameSpawners.NoteSpawner.BLOCK_TRAVEL_TIME
      commentId: F:GameSpawners.NoteSpawner.BLOCK_TRAVEL_TIME
      language: CSharp
      name:
        CSharp: BLOCK_TRAVEL_TIME
        VB: BLOCK_TRAVEL_TIME
      nameWithType:
        CSharp: NoteSpawner.BLOCK_TRAVEL_TIME
        VB: NoteSpawner.BLOCK_TRAVEL_TIME
      qualifiedName:
        CSharp: GameSpawners.NoteSpawner.BLOCK_TRAVEL_TIME
        VB: GameSpawners.NoteSpawner.BLOCK_TRAVEL_TIME
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GameSpawners
      source:
        id: BLOCK_TRAVEL_TIME
        path: ''
        startLine: 2559
      syntax:
        content:
          CSharp: public const float BLOCK_TRAVEL_TIME = 1.5F
          VB: Public Const BLOCK_TRAVEL_TIME As Single = 1.5F
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GameSpawners.NoteSpawner.#ctor(System.Collections.Generic.List{Audio.BeatMappingConfigs.NoteConfig},System.Single,GameObject,GameObject,GameObject,GameObject,Transform)
      commentId: M:GameSpawners.NoteSpawner.#ctor(System.Collections.Generic.List{Audio.BeatMappingConfigs.NoteConfig},System.Single,GameObject,GameObject,GameObject,GameObject,Transform)
      language: CSharp
      name:
        CSharp: NoteSpawner(List<NoteConfig>, Single, GameObject, GameObject, GameObject, GameObject, Transform)
        VB: NoteSpawner(List(Of NoteConfig), Single, GameObject, GameObject, GameObject, GameObject, Transform)
      nameWithType:
        CSharp: NoteSpawner.NoteSpawner(List<NoteConfig>, Single, GameObject, GameObject, GameObject, GameObject, Transform)
        VB: NoteSpawner.NoteSpawner(List(Of NoteConfig), Single, GameObject, GameObject, GameObject, GameObject, Transform)
      qualifiedName:
        CSharp: GameSpawners.NoteSpawner.NoteSpawner(System.Collections.Generic.List<Audio.BeatMappingConfigs.NoteConfig>, System.Single, GameObject, GameObject, GameObject, GameObject, Transform)
        VB: GameSpawners.NoteSpawner.NoteSpawner(System.Collections.Generic.List(Of Audio.BeatMappingConfigs.NoteConfig), System.Single, GameObject, GameObject, GameObject, GameObject, Transform)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: GameSpawners
      source:
        id: .ctor
        path: ''
        startLine: 2574
      syntax:
        content:
          CSharp: public NoteSpawner(List<NoteConfig> noteData, float bps, GameObject leftTimedBlock, GameObject rightTimedBlock, GameObject leftTimedBlockNoDirection, GameObject rightTimedBlockNoDirection, Transform generated)
          VB: Public Sub New(noteData As List(Of NoteConfig), bps As Single, leftTimedBlock As GameObject, rightTimedBlock As GameObject, leftTimedBlockNoDirection As GameObject, rightTimedBlockNoDirection As GameObject, generated As Transform)
        parameters:
        - id: noteData
          type: System.Collections.Generic.List{Audio.BeatMappingConfigs.NoteConfig}
        - id: bps
          type: System.Single
        - id: leftTimedBlock
          type: GameObject
        - id: rightTimedBlock
          type: GameObject
        - id: leftTimedBlockNoDirection
          type: GameObject
        - id: rightTimedBlockNoDirection
          type: GameObject
        - id: generated
          type: Transform
      overload: GameSpawners.NoteSpawner.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GameSpawners.NoteSpawner.checkBlocksSpawnable(System.Single)
      commentId: M:GameSpawners.NoteSpawner.checkBlocksSpawnable(System.Single)
      language: CSharp
      name:
        CSharp: checkBlocksSpawnable(Single)
        VB: checkBlocksSpawnable(Single)
      nameWithType:
        CSharp: NoteSpawner.checkBlocksSpawnable(Single)
        VB: NoteSpawner.checkBlocksSpawnable(Single)
      qualifiedName:
        CSharp: GameSpawners.NoteSpawner.checkBlocksSpawnable(System.Single)
        VB: GameSpawners.NoteSpawner.checkBlocksSpawnable(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GameSpawners
      source:
        id: checkBlocksSpawnable
        path: ''
        startLine: 2589
      syntax:
        content:
          CSharp: public void checkBlocksSpawnable(float timePassed)
          VB: Public Sub checkBlocksSpawnable(timePassed As Single)
        parameters:
        - id: timePassed
          type: System.Single
      overload: GameSpawners.NoteSpawner.checkBlocksSpawnable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GameSpawners.NoteSpawner.getBlocks
      commentId: M:GameSpawners.NoteSpawner.getBlocks
      language: CSharp
      name:
        CSharp: getBlocks()
        VB: getBlocks()
      nameWithType:
        CSharp: NoteSpawner.getBlocks()
        VB: NoteSpawner.getBlocks()
      qualifiedName:
        CSharp: GameSpawners.NoteSpawner.getBlocks()
        VB: GameSpawners.NoteSpawner.getBlocks()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GameSpawners
      source:
        id: getBlocks
        path: ''
        startLine: 2603
      syntax:
        content:
          CSharp: public List<GameObject> getBlocks()
          VB: Public Function getBlocks As List(Of GameObject)
        return:
          type: System.Collections.Generic.List{GameObject}
      overload: GameSpawners.NoteSpawner.getBlocks*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GameSpawners.NoteSpawner.getRelativeTravelTime
      commentId: M:GameSpawners.NoteSpawner.getRelativeTravelTime
      language: CSharp
      name:
        CSharp: getRelativeTravelTime()
        VB: getRelativeTravelTime()
      nameWithType:
        CSharp: NoteSpawner.getRelativeTravelTime()
        VB: NoteSpawner.getRelativeTravelTime()
      qualifiedName:
        CSharp: GameSpawners.NoteSpawner.getRelativeTravelTime()
        VB: GameSpawners.NoteSpawner.getRelativeTravelTime()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GameSpawners
      source:
        id: getRelativeTravelTime
        path: ''
        startLine: 2608
      syntax:
        content:
          CSharp: public float getRelativeTravelTime()
          VB: Public Function getRelativeTravelTime As Single
        return:
          type: System.Single
      overload: GameSpawners.NoteSpawner.getRelativeTravelTime*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: GameSpawners.ObjectSpawnPositionProvider
    commentId: T:GameSpawners.ObjectSpawnPositionProvider
    language: CSharp
    name:
      CSharp: ObjectSpawnPositionProvider
      VB: ObjectSpawnPositionProvider
    nameWithType:
      CSharp: ObjectSpawnPositionProvider
      VB: ObjectSpawnPositionProvider
    qualifiedName:
      CSharp: GameSpawners.ObjectSpawnPositionProvider
      VB: GameSpawners.ObjectSpawnPositionProvider
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GameSpawners
    source:
      id: ObjectSpawnPositionProvider
      path: ''
      startLine: 2648
    summary: "\nStatic class containing mappings for the line layers, line inidces and cut directions\nfor the positioning of spawned objects.\n"
    example: []
    syntax:
      content:
        CSharp: public static class ObjectSpawnPositionProvider
        VB: Public Module ObjectSpawnPositionProvider
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: GameSpawners.ObjectSpawnPositionProvider.getHorizontalPosition(System.Int32)
      commentId: M:GameSpawners.ObjectSpawnPositionProvider.getHorizontalPosition(System.Int32)
      language: CSharp
      name:
        CSharp: getHorizontalPosition(Int32)
        VB: getHorizontalPosition(Int32)
      nameWithType:
        CSharp: ObjectSpawnPositionProvider.getHorizontalPosition(Int32)
        VB: ObjectSpawnPositionProvider.getHorizontalPosition(Int32)
      qualifiedName:
        CSharp: GameSpawners.ObjectSpawnPositionProvider.getHorizontalPosition(System.Int32)
        VB: GameSpawners.ObjectSpawnPositionProvider.getHorizontalPosition(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GameSpawners
      source:
        id: getHorizontalPosition
        path: ''
        startLine: 2654
      syntax:
        content:
          CSharp: public static float getHorizontalPosition(int lineIndex)
          VB: Public Shared Function getHorizontalPosition(lineIndex As Integer) As Single
        parameters:
        - id: lineIndex
          type: System.Int32
        return:
          type: System.Single
      overload: GameSpawners.ObjectSpawnPositionProvider.getHorizontalPosition*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: GameSpawners.ObjectSpawnPositionProvider.getVerticalPosition(System.Int32)
      commentId: M:GameSpawners.ObjectSpawnPositionProvider.getVerticalPosition(System.Int32)
      language: CSharp
      name:
        CSharp: getVerticalPosition(Int32)
        VB: getVerticalPosition(Int32)
      nameWithType:
        CSharp: ObjectSpawnPositionProvider.getVerticalPosition(Int32)
        VB: ObjectSpawnPositionProvider.getVerticalPosition(Int32)
      qualifiedName:
        CSharp: GameSpawners.ObjectSpawnPositionProvider.getVerticalPosition(System.Int32)
        VB: GameSpawners.ObjectSpawnPositionProvider.getVerticalPosition(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GameSpawners
      source:
        id: getVerticalPosition
        path: ''
        startLine: 2663
      syntax:
        content:
          CSharp: public static float getVerticalPosition(int lineLayer)
          VB: Public Shared Function getVerticalPosition(lineLayer As Integer) As Single
        parameters:
        - id: lineLayer
          type: System.Int32
        return:
          type: System.Single
      overload: GameSpawners.ObjectSpawnPositionProvider.getVerticalPosition*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: GameSpawners.ObjectSpawnPositionProvider.getCutDirection(System.Int32)
      commentId: M:GameSpawners.ObjectSpawnPositionProvider.getCutDirection(System.Int32)
      language: CSharp
      name:
        CSharp: getCutDirection(Int32)
        VB: getCutDirection(Int32)
      nameWithType:
        CSharp: ObjectSpawnPositionProvider.getCutDirection(Int32)
        VB: ObjectSpawnPositionProvider.getCutDirection(Int32)
      qualifiedName:
        CSharp: GameSpawners.ObjectSpawnPositionProvider.getCutDirection(System.Int32)
        VB: GameSpawners.ObjectSpawnPositionProvider.getCutDirection(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GameSpawners
      source:
        id: getCutDirection
        path: ''
        startLine: 2672
      syntax:
        content:
          CSharp: public static int getCutDirection(int cutDirection)
          VB: Public Shared Function getCutDirection(cutDirection As Integer) As Integer
        parameters:
        - id: cutDirection
          type: System.Int32
        return:
          type: System.Int32
      overload: GameSpawners.ObjectSpawnPositionProvider.getCutDirection*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: GameSpawners.ObstacleSpawner
    commentId: T:GameSpawners.ObstacleSpawner
    language: CSharp
    name:
      CSharp: ObstacleSpawner
      VB: ObstacleSpawner
    nameWithType:
      CSharp: ObstacleSpawner
      VB: ObstacleSpawner
    qualifiedName:
      CSharp: GameSpawners.ObstacleSpawner
      VB: GameSpawners.ObstacleSpawner
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GameSpawners
    source:
      id: ObstacleSpawner
      path: ''
      startLine: 2722
    summary: "\nContains note mapping data and spawns obstacles at the correct time.The updating is triggered from the &apos;Game&apos; object,\nwhich contains the main loop updating the spawner objects.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ObstacleSpawner : ScriptableObject'
        VB: >-
          Public Class ObstacleSpawner

              Inherits ScriptableObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GameSpawners.ObstacleSpawner.OBSTACLE_DISTANCE
      commentId: F:GameSpawners.ObstacleSpawner.OBSTACLE_DISTANCE
      language: CSharp
      name:
        CSharp: OBSTACLE_DISTANCE
        VB: OBSTACLE_DISTANCE
      nameWithType:
        CSharp: ObstacleSpawner.OBSTACLE_DISTANCE
        VB: ObstacleSpawner.OBSTACLE_DISTANCE
      qualifiedName:
        CSharp: GameSpawners.ObstacleSpawner.OBSTACLE_DISTANCE
        VB: GameSpawners.ObstacleSpawner.OBSTACLE_DISTANCE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GameSpawners
      source:
        id: OBSTACLE_DISTANCE
        path: ''
        startLine: 2724
      syntax:
        content:
          CSharp: public const float OBSTACLE_DISTANCE = 40F
          VB: Public Const OBSTACLE_DISTANCE As Single = 40F
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GameSpawners.ObstacleSpawner.OBSTACLE_TRAVEL_TIME
      commentId: F:GameSpawners.ObstacleSpawner.OBSTACLE_TRAVEL_TIME
      language: CSharp
      name:
        CSharp: OBSTACLE_TRAVEL_TIME
        VB: OBSTACLE_TRAVEL_TIME
      nameWithType:
        CSharp: ObstacleSpawner.OBSTACLE_TRAVEL_TIME
        VB: ObstacleSpawner.OBSTACLE_TRAVEL_TIME
      qualifiedName:
        CSharp: GameSpawners.ObstacleSpawner.OBSTACLE_TRAVEL_TIME
        VB: GameSpawners.ObstacleSpawner.OBSTACLE_TRAVEL_TIME
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GameSpawners
      source:
        id: OBSTACLE_TRAVEL_TIME
        path: ''
        startLine: 2725
      syntax:
        content:
          CSharp: public const float OBSTACLE_TRAVEL_TIME = 3F
          VB: Public Const OBSTACLE_TRAVEL_TIME As Single = 3F
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GameSpawners.ObstacleSpawner.#ctor(System.Collections.Generic.List{Audio.BeatMappingConfigs.ObstacleConfig},System.Single,GameObject,Transform)
      commentId: M:GameSpawners.ObstacleSpawner.#ctor(System.Collections.Generic.List{Audio.BeatMappingConfigs.ObstacleConfig},System.Single,GameObject,Transform)
      language: CSharp
      name:
        CSharp: ObstacleSpawner(List<ObstacleConfig>, Single, GameObject, Transform)
        VB: ObstacleSpawner(List(Of ObstacleConfig), Single, GameObject, Transform)
      nameWithType:
        CSharp: ObstacleSpawner.ObstacleSpawner(List<ObstacleConfig>, Single, GameObject, Transform)
        VB: ObstacleSpawner.ObstacleSpawner(List(Of ObstacleConfig), Single, GameObject, Transform)
      qualifiedName:
        CSharp: GameSpawners.ObstacleSpawner.ObstacleSpawner(System.Collections.Generic.List<Audio.BeatMappingConfigs.ObstacleConfig>, System.Single, GameObject, Transform)
        VB: GameSpawners.ObstacleSpawner.ObstacleSpawner(System.Collections.Generic.List(Of Audio.BeatMappingConfigs.ObstacleConfig), System.Single, GameObject, Transform)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: GameSpawners
      source:
        id: .ctor
        path: ''
        startLine: 2737
      syntax:
        content:
          CSharp: public ObstacleSpawner(List<ObstacleConfig> obstacleData, float bps, GameObject obstacle, Transform generated)
          VB: Public Sub New(obstacleData As List(Of ObstacleConfig), bps As Single, obstacle As GameObject, generated As Transform)
        parameters:
        - id: obstacleData
          type: System.Collections.Generic.List{Audio.BeatMappingConfigs.ObstacleConfig}
        - id: bps
          type: System.Single
        - id: obstacle
          type: GameObject
        - id: generated
          type: Transform
      overload: GameSpawners.ObstacleSpawner.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GameSpawners.ObstacleSpawner.checkObstaclesSpawnable(System.Single)
      commentId: M:GameSpawners.ObstacleSpawner.checkObstaclesSpawnable(System.Single)
      language: CSharp
      name:
        CSharp: checkObstaclesSpawnable(Single)
        VB: checkObstaclesSpawnable(Single)
      nameWithType:
        CSharp: ObstacleSpawner.checkObstaclesSpawnable(Single)
        VB: ObstacleSpawner.checkObstaclesSpawnable(Single)
      qualifiedName:
        CSharp: GameSpawners.ObstacleSpawner.checkObstaclesSpawnable(System.Single)
        VB: GameSpawners.ObstacleSpawner.checkObstaclesSpawnable(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GameSpawners
      source:
        id: checkObstaclesSpawnable
        path: ''
        startLine: 2748
      syntax:
        content:
          CSharp: public void checkObstaclesSpawnable(float timePassed)
          VB: Public Sub checkObstaclesSpawnable(timePassed As Single)
        parameters:
        - id: timePassed
          type: System.Single
      overload: GameSpawners.ObstacleSpawner.checkObstaclesSpawnable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GameSpawners.ObstacleSpawner.getRelativeTravelTime
      commentId: M:GameSpawners.ObstacleSpawner.getRelativeTravelTime
      language: CSharp
      name:
        CSharp: getRelativeTravelTime()
        VB: getRelativeTravelTime()
      nameWithType:
        CSharp: ObstacleSpawner.getRelativeTravelTime()
        VB: ObstacleSpawner.getRelativeTravelTime()
      qualifiedName:
        CSharp: GameSpawners.ObstacleSpawner.getRelativeTravelTime()
        VB: GameSpawners.ObstacleSpawner.getRelativeTravelTime()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GameSpawners
      source:
        id: getRelativeTravelTime
        path: ''
        startLine: 2762
      syntax:
        content:
          CSharp: public float getRelativeTravelTime()
          VB: Public Function getRelativeTravelTime As Single
        return:
          type: System.Single
      overload: GameSpawners.ObstacleSpawner.getRelativeTravelTime*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Global
  commentId: N:Global
  language: CSharp
  name:
    CSharp: Global
    VB: Global
  nameWithType:
    CSharp: Global
    VB: Global
  qualifiedName:
    CSharp: Global
    VB: Global
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Global.DevSettings
    commentId: T:Global.DevSettings
    language: CSharp
    name:
      CSharp: DevSettings
      VB: DevSettings
    nameWithType:
      CSharp: DevSettings
      VB: DevSettings
    qualifiedName:
      CSharp: Global.DevSettings
      VB: Global.DevSettings
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: DevSettings
      path: ''
      startLine: 2799
    summary: "\nContains global settings that can be set to manipulate some game states.\nThis came in very handy during development.\n"
    example: []
    syntax:
      content:
        CSharp: public static class DevSettings
        VB: Public Module DevSettings
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Global.DevSettings.USE_CACHE
      commentId: F:Global.DevSettings.USE_CACHE
      language: CSharp
      name:
        CSharp: USE_CACHE
        VB: USE_CACHE
      nameWithType:
        CSharp: DevSettings.USE_CACHE
        VB: DevSettings.USE_CACHE
      qualifiedName:
        CSharp: Global.DevSettings.USE_CACHE
        VB: Global.DevSettings.USE_CACHE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: USE_CACHE
        path: ''
        startLine: 2801
      syntax:
        content:
          CSharp: public static bool USE_CACHE
          VB: Public Shared USE_CACHE As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.DevSettings.USE_OBSTACLES
      commentId: F:Global.DevSettings.USE_OBSTACLES
      language: CSharp
      name:
        CSharp: USE_OBSTACLES
        VB: USE_OBSTACLES
      nameWithType:
        CSharp: DevSettings.USE_OBSTACLES
        VB: DevSettings.USE_OBSTACLES
      qualifiedName:
        CSharp: Global.DevSettings.USE_OBSTACLES
        VB: Global.DevSettings.USE_OBSTACLES
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: USE_OBSTACLES
        path: ''
        startLine: 2802
      syntax:
        content:
          CSharp: public static bool USE_OBSTACLES
          VB: Public Shared USE_OBSTACLES As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.DevSettings.OVERRIDE_BLOCK_DESPAWN
      commentId: F:Global.DevSettings.OVERRIDE_BLOCK_DESPAWN
      language: CSharp
      name:
        CSharp: OVERRIDE_BLOCK_DESPAWN
        VB: OVERRIDE_BLOCK_DESPAWN
      nameWithType:
        CSharp: DevSettings.OVERRIDE_BLOCK_DESPAWN
        VB: DevSettings.OVERRIDE_BLOCK_DESPAWN
      qualifiedName:
        CSharp: Global.DevSettings.OVERRIDE_BLOCK_DESPAWN
        VB: Global.DevSettings.OVERRIDE_BLOCK_DESPAWN
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OVERRIDE_BLOCK_DESPAWN
        path: ''
        startLine: 2803
      syntax:
        content:
          CSharp: public static bool OVERRIDE_BLOCK_DESPAWN
          VB: Public Shared OVERRIDE_BLOCK_DESPAWN As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.DevSettings.USE_SABRE_DEBUG_RAYS
      commentId: F:Global.DevSettings.USE_SABRE_DEBUG_RAYS
      language: CSharp
      name:
        CSharp: USE_SABRE_DEBUG_RAYS
        VB: USE_SABRE_DEBUG_RAYS
      nameWithType:
        CSharp: DevSettings.USE_SABRE_DEBUG_RAYS
        VB: DevSettings.USE_SABRE_DEBUG_RAYS
      qualifiedName:
        CSharp: Global.DevSettings.USE_SABRE_DEBUG_RAYS
        VB: Global.DevSettings.USE_SABRE_DEBUG_RAYS
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: USE_SABRE_DEBUG_RAYS
        path: ''
        startLine: 2804
      syntax:
        content:
          CSharp: public static bool USE_SABRE_DEBUG_RAYS
          VB: Public Shared USE_SABRE_DEBUG_RAYS As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.DevSettings.TAKE_DAMAGE
      commentId: F:Global.DevSettings.TAKE_DAMAGE
      language: CSharp
      name:
        CSharp: TAKE_DAMAGE
        VB: TAKE_DAMAGE
      nameWithType:
        CSharp: DevSettings.TAKE_DAMAGE
        VB: DevSettings.TAKE_DAMAGE
      qualifiedName:
        CSharp: Global.DevSettings.TAKE_DAMAGE
        VB: Global.DevSettings.TAKE_DAMAGE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: TAKE_DAMAGE
        path: ''
        startLine: 2805
      syntax:
        content:
          CSharp: public static bool TAKE_DAMAGE
          VB: Public Shared TAKE_DAMAGE As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.DevSettings.USE_EFFECTS
      commentId: F:Global.DevSettings.USE_EFFECTS
      language: CSharp
      name:
        CSharp: USE_EFFECTS
        VB: USE_EFFECTS
      nameWithType:
        CSharp: DevSettings.USE_EFFECTS
        VB: DevSettings.USE_EFFECTS
      qualifiedName:
        CSharp: Global.DevSettings.USE_EFFECTS
        VB: Global.DevSettings.USE_EFFECTS
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: USE_EFFECTS
        path: ''
        startLine: 2806
      syntax:
        content:
          CSharp: public static bool USE_EFFECTS
          VB: Public Shared USE_EFFECTS As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.DevSettings.EFFECT_SPAWN_CHANCE
      commentId: F:Global.DevSettings.EFFECT_SPAWN_CHANCE
      language: CSharp
      name:
        CSharp: EFFECT_SPAWN_CHANCE
        VB: EFFECT_SPAWN_CHANCE
      nameWithType:
        CSharp: DevSettings.EFFECT_SPAWN_CHANCE
        VB: DevSettings.EFFECT_SPAWN_CHANCE
      qualifiedName:
        CSharp: Global.DevSettings.EFFECT_SPAWN_CHANCE
        VB: Global.DevSettings.EFFECT_SPAWN_CHANCE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: EFFECT_SPAWN_CHANCE
        path: ''
        startLine: 2807
      syntax:
        content:
          CSharp: public static float EFFECT_SPAWN_CHANCE
          VB: Public Shared EFFECT_SPAWN_CHANCE As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Global.GlobalStorage
    commentId: T:Global.GlobalStorage
    language: CSharp
    name:
      CSharp: GlobalStorage
      VB: GlobalStorage
    nameWithType:
      CSharp: GlobalStorage
      VB: GlobalStorage
    qualifiedName:
      CSharp: Global.GlobalStorage
      VB: Global.GlobalStorage
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: GlobalStorage
      path: ''
      startLine: 2821
    summary: "\nGlobal storage for data. This singleton data container can be accessed from all scenes.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class GlobalStorage : ScriptableObject'
        VB: >-
          Public Class GlobalStorage

              Inherits ScriptableObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.GlobalStorage.AudioClip
      commentId: P:Global.GlobalStorage.AudioClip
      language: CSharp
      name:
        CSharp: AudioClip
        VB: AudioClip
      nameWithType:
        CSharp: GlobalStorage.AudioClip
        VB: GlobalStorage.AudioClip
      qualifiedName:
        CSharp: Global.GlobalStorage.AudioClip
        VB: Global.GlobalStorage.AudioClip
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: AudioClip
        path: ''
        startLine: 2825
      syntax:
        content:
          CSharp: public AudioClip AudioClip { get; set; }
          VB: Public Property AudioClip As AudioClip
        parameters: []
        return:
          type: AudioClip
      overload: Global.GlobalStorage.AudioClip*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.GlobalStorage.TrackConfig
      commentId: P:Global.GlobalStorage.TrackConfig
      language: CSharp
      name:
        CSharp: TrackConfig
        VB: TrackConfig
      nameWithType:
        CSharp: GlobalStorage.TrackConfig
        VB: GlobalStorage.TrackConfig
      qualifiedName:
        CSharp: Global.GlobalStorage.TrackConfig
        VB: Global.GlobalStorage.TrackConfig
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: TrackConfig
        path: ''
        startLine: 2826
      syntax:
        content:
          CSharp: public TrackConfig TrackConfig { get; set; }
          VB: Public Property TrackConfig As TrackConfig
        parameters: []
        return:
          type: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig
      overload: Global.GlobalStorage.TrackConfig*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.GlobalStorage.AudioPath
      commentId: P:Global.GlobalStorage.AudioPath
      language: CSharp
      name:
        CSharp: AudioPath
        VB: AudioPath
      nameWithType:
        CSharp: GlobalStorage.AudioPath
        VB: GlobalStorage.AudioPath
      qualifiedName:
        CSharp: Global.GlobalStorage.AudioPath
        VB: Global.GlobalStorage.AudioPath
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: AudioPath
        path: ''
        startLine: 2827
      syntax:
        content:
          CSharp: public string AudioPath { get; set; }
          VB: Public Property AudioPath As String
        parameters: []
        return:
          type: System.String
      overload: Global.GlobalStorage.AudioPath*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.GlobalStorage.MappingContainer
      commentId: P:Global.GlobalStorage.MappingContainer
      language: CSharp
      name:
        CSharp: MappingContainer
        VB: MappingContainer
      nameWithType:
        CSharp: GlobalStorage.MappingContainer
        VB: GlobalStorage.MappingContainer
      qualifiedName:
        CSharp: Global.GlobalStorage.MappingContainer
        VB: Global.GlobalStorage.MappingContainer
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MappingContainer
        path: ''
        startLine: 2828
      syntax:
        content:
          CSharp: public MappingContainer MappingContainer { get; set; }
          VB: Public Property MappingContainer As MappingContainer
        parameters: []
        return:
          type: Audio.BeatMappingConfigs.MappingContainer
      overload: Global.GlobalStorage.MappingContainer*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.GlobalStorage.Difficulty
      commentId: P:Global.GlobalStorage.Difficulty
      language: CSharp
      name:
        CSharp: Difficulty
        VB: Difficulty
      nameWithType:
        CSharp: GlobalStorage.Difficulty
        VB: GlobalStorage.Difficulty
      qualifiedName:
        CSharp: Global.GlobalStorage.Difficulty
        VB: Global.GlobalStorage.Difficulty
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Difficulty
        path: ''
        startLine: 2829
      syntax:
        content:
          CSharp: public string Difficulty { get; set; }
          VB: Public Property Difficulty As String
        parameters: []
        return:
          type: System.String
      overload: Global.GlobalStorage.Difficulty*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.GlobalStorage.getInstance
      commentId: M:Global.GlobalStorage.getInstance
      language: CSharp
      name:
        CSharp: getInstance()
        VB: getInstance()
      nameWithType:
        CSharp: GlobalStorage.getInstance()
        VB: GlobalStorage.getInstance()
      qualifiedName:
        CSharp: Global.GlobalStorage.getInstance()
        VB: Global.GlobalStorage.getInstance()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: getInstance
        path: ''
        startLine: 2831
      syntax:
        content:
          CSharp: public static GlobalStorage getInstance()
          VB: Public Shared Function getInstance As GlobalStorage
        return:
          type: Global.GlobalStorage
      overload: Global.GlobalStorage.getInstance*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.GlobalStorage.destroy
      commentId: M:Global.GlobalStorage.destroy
      language: CSharp
      name:
        CSharp: destroy()
        VB: destroy()
      nameWithType:
        CSharp: GlobalStorage.destroy()
        VB: GlobalStorage.destroy()
      qualifiedName:
        CSharp: Global.GlobalStorage.destroy()
        VB: Global.GlobalStorage.destroy()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: destroy
        path: ''
        startLine: 2855
      syntax:
        content:
          CSharp: public void destroy()
          VB: Public Sub destroy
      overload: Global.GlobalStorage.destroy*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.PlayerData
    commentId: T:Global.PlayerData
    language: CSharp
    name:
      CSharp: PlayerData
      VB: PlayerData
    nameWithType:
      CSharp: PlayerData
      VB: PlayerData
    qualifiedName:
      CSharp: Global.PlayerData
      VB: Global.PlayerData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PlayerData
      path: ''
      startLine: 2873
    summary: "\nSingleton that contains player data, like player health. Regenerates a small amount of health on update.\nExposes API to take damage. Calls Game Over when the health reaches 0.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class PlayerData : ScriptableObject'
        VB: >-
          Public Class PlayerData

              Inherits ScriptableObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.PlayerData.IsGameOver
      commentId: P:Global.PlayerData.IsGameOver
      language: CSharp
      name:
        CSharp: IsGameOver
        VB: IsGameOver
      nameWithType:
        CSharp: PlayerData.IsGameOver
        VB: PlayerData.IsGameOver
      qualifiedName:
        CSharp: Global.PlayerData.IsGameOver
        VB: Global.PlayerData.IsGameOver
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: IsGameOver
        path: ''
        startLine: 2883
      syntax:
        content:
          CSharp: public bool IsGameOver { get; set; }
          VB: Public Property IsGameOver As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Global.PlayerData.IsGameOver*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.PlayerData.#ctor
      commentId: M:Global.PlayerData.#ctor
      language: CSharp
      name:
        CSharp: PlayerData()
        VB: PlayerData()
      nameWithType:
        CSharp: PlayerData.PlayerData()
        VB: PlayerData.PlayerData()
      qualifiedName:
        CSharp: Global.PlayerData.PlayerData()
        VB: Global.PlayerData.PlayerData()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: .ctor
        path: ''
        startLine: 2885
      syntax:
        content:
          CSharp: public PlayerData()
          VB: Public Sub New
      overload: Global.PlayerData.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerData.takeDamage(System.Single)
      commentId: M:Global.PlayerData.takeDamage(System.Single)
      language: CSharp
      name:
        CSharp: takeDamage(Single)
        VB: takeDamage(Single)
      nameWithType:
        CSharp: PlayerData.takeDamage(Single)
        VB: PlayerData.takeDamage(Single)
      qualifiedName:
        CSharp: Global.PlayerData.takeDamage(System.Single)
        VB: Global.PlayerData.takeDamage(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: takeDamage
        path: ''
        startLine: 2891
      syntax:
        content:
          CSharp: public void takeDamage(float damagePoints)
          VB: Public Sub takeDamage(damagePoints As Single)
        parameters:
        - id: damagePoints
          type: System.Single
      overload: Global.PlayerData.takeDamage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerData.heal(System.Single)
      commentId: M:Global.PlayerData.heal(System.Single)
      language: CSharp
      name:
        CSharp: heal(Single)
        VB: heal(Single)
      nameWithType:
        CSharp: PlayerData.heal(Single)
        VB: PlayerData.heal(Single)
      qualifiedName:
        CSharp: Global.PlayerData.heal(System.Single)
        VB: Global.PlayerData.heal(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: heal
        path: ''
        startLine: 2905
      syntax:
        content:
          CSharp: public void heal(float amount)
          VB: Public Sub heal(amount As Single)
        parameters:
        - id: amount
          type: System.Single
      overload: Global.PlayerData.heal*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerData.getInstance
      commentId: M:Global.PlayerData.getInstance
      language: CSharp
      name:
        CSharp: getInstance()
        VB: getInstance()
      nameWithType:
        CSharp: PlayerData.getInstance()
        VB: PlayerData.getInstance()
      qualifiedName:
        CSharp: Global.PlayerData.getInstance()
        VB: Global.PlayerData.getInstance()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: getInstance
        path: ''
        startLine: 2910
      syntax:
        content:
          CSharp: public static PlayerData getInstance()
          VB: Public Shared Function getInstance As PlayerData
        return:
          type: Global.PlayerData
      overload: Global.PlayerData.getInstance*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.PlayerData.destroy
      commentId: M:Global.PlayerData.destroy
      language: CSharp
      name:
        CSharp: destroy()
        VB: destroy()
      nameWithType:
        CSharp: PlayerData.destroy()
        VB: PlayerData.destroy()
      qualifiedName:
        CSharp: Global.PlayerData.destroy()
        VB: Global.PlayerData.destroy()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: destroy
        path: ''
        startLine: 2958
      syntax:
        content:
          CSharp: public void destroy()
          VB: Public Sub destroy
      overload: Global.PlayerData.destroy*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.ScoreTracker
    commentId: T:Global.ScoreTracker
    language: CSharp
    name:
      CSharp: ScoreTracker
      VB: ScoreTracker
    nameWithType:
      CSharp: ScoreTracker
      VB: ScoreTracker
    qualifiedName:
      CSharp: Global.ScoreTracker
      VB: Global.ScoreTracker
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ScoreTracker
      path: ''
      startLine: 2976
    summary: "\nSingleton that keeps track of the player&apos;s score as well as multiplier and combo values.\nHandles hits and misses.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ScoreTracker : ScriptableObject'
        VB: >-
          Public Class ScoreTracker

              Inherits ScriptableObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ScoreTracker.NumBeats
      commentId: P:Global.ScoreTracker.NumBeats
      language: CSharp
      name:
        CSharp: NumBeats
        VB: NumBeats
      nameWithType:
        CSharp: ScoreTracker.NumBeats
        VB: ScoreTracker.NumBeats
      qualifiedName:
        CSharp: Global.ScoreTracker.NumBeats
        VB: Global.ScoreTracker.NumBeats
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: NumBeats
        path: ''
        startLine: 2997
      syntax:
        content:
          CSharp: public int NumBeats { get; set; }
          VB: Public Property NumBeats As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Global.ScoreTracker.NumBeats*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.ScoreTracker.Hits
      commentId: P:Global.ScoreTracker.Hits
      language: CSharp
      name:
        CSharp: Hits
        VB: Hits
      nameWithType:
        CSharp: ScoreTracker.Hits
        VB: ScoreTracker.Hits
      qualifiedName:
        CSharp: Global.ScoreTracker.Hits
        VB: Global.ScoreTracker.Hits
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Hits
        path: ''
        startLine: 2998
      syntax:
        content:
          CSharp: public int Hits { get; set; }
          VB: Public Property Hits As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Global.ScoreTracker.Hits*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.ScoreTracker.Misses
      commentId: P:Global.ScoreTracker.Misses
      language: CSharp
      name:
        CSharp: Misses
        VB: Misses
      nameWithType:
        CSharp: ScoreTracker.Misses
        VB: ScoreTracker.Misses
      qualifiedName:
        CSharp: Global.ScoreTracker.Misses
        VB: Global.ScoreTracker.Misses
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Misses
        path: ''
        startLine: 2999
      syntax:
        content:
          CSharp: public int Misses { get; set; }
          VB: Public Property Misses As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Global.ScoreTracker.Misses*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.ScoreTracker.Score
      commentId: P:Global.ScoreTracker.Score
      language: CSharp
      name:
        CSharp: Score
        VB: Score
      nameWithType:
        CSharp: ScoreTracker.Score
        VB: ScoreTracker.Score
      qualifiedName:
        CSharp: Global.ScoreTracker.Score
        VB: Global.ScoreTracker.Score
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Score
        path: ''
        startLine: 3000
      syntax:
        content:
          CSharp: public int Score { get; set; }
          VB: Public Property Score As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Global.ScoreTracker.Score*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.ScoreTracker.HighestStreak
      commentId: P:Global.ScoreTracker.HighestStreak
      language: CSharp
      name:
        CSharp: HighestStreak
        VB: HighestStreak
      nameWithType:
        CSharp: ScoreTracker.HighestStreak
        VB: ScoreTracker.HighestStreak
      qualifiedName:
        CSharp: Global.ScoreTracker.HighestStreak
        VB: Global.ScoreTracker.HighestStreak
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: HighestStreak
        path: ''
        startLine: 3001
      syntax:
        content:
          CSharp: public int HighestStreak { get; set; }
          VB: Public Property HighestStreak As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Global.ScoreTracker.HighestStreak*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.ScoreTracker.AverageCombo
      commentId: P:Global.ScoreTracker.AverageCombo
      language: CSharp
      name:
        CSharp: AverageCombo
        VB: AverageCombo
      nameWithType:
        CSharp: ScoreTracker.AverageCombo
        VB: ScoreTracker.AverageCombo
      qualifiedName:
        CSharp: Global.ScoreTracker.AverageCombo
        VB: Global.ScoreTracker.AverageCombo
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: AverageCombo
        path: ''
        startLine: 3002
      syntax:
        content:
          CSharp: public int AverageCombo { get; set; }
          VB: Public Property AverageCombo As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Global.ScoreTracker.AverageCombo*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.ScoreTracker.resetComboCounter
      commentId: M:Global.ScoreTracker.resetComboCounter
      language: CSharp
      name:
        CSharp: resetComboCounter()
        VB: resetComboCounter()
      nameWithType:
        CSharp: ScoreTracker.resetComboCounter()
        VB: ScoreTracker.resetComboCounter()
      qualifiedName:
        CSharp: Global.ScoreTracker.resetComboCounter()
        VB: Global.ScoreTracker.resetComboCounter()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: resetComboCounter
        path: ''
        startLine: 3004
      syntax:
        content:
          CSharp: public void resetComboCounter()
          VB: Public Sub resetComboCounter
      overload: Global.ScoreTracker.resetComboCounter*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ScoreTracker.hit
      commentId: M:Global.ScoreTracker.hit
      language: CSharp
      name:
        CSharp: hit()
        VB: hit()
      nameWithType:
        CSharp: ScoreTracker.hit()
        VB: ScoreTracker.hit()
      qualifiedName:
        CSharp: Global.ScoreTracker.hit()
        VB: Global.ScoreTracker.hit()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: hit
        path: ''
        startLine: 3010
      syntax:
        content:
          CSharp: public void hit()
          VB: Public Sub hit
      overload: Global.ScoreTracker.hit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ScoreTracker.miss
      commentId: M:Global.ScoreTracker.miss
      language: CSharp
      name:
        CSharp: miss()
        VB: miss()
      nameWithType:
        CSharp: ScoreTracker.miss()
        VB: ScoreTracker.miss()
      qualifiedName:
        CSharp: Global.ScoreTracker.miss()
        VB: Global.ScoreTracker.miss()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: miss
        path: ''
        startLine: 3025
      syntax:
        content:
          CSharp: public void miss()
          VB: Public Sub miss
      overload: Global.ScoreTracker.miss*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ScoreTracker.setupGameObjects
      commentId: M:Global.ScoreTracker.setupGameObjects
      language: CSharp
      name:
        CSharp: setupGameObjects()
        VB: setupGameObjects()
      nameWithType:
        CSharp: ScoreTracker.setupGameObjects()
        VB: ScoreTracker.setupGameObjects()
      qualifiedName:
        CSharp: Global.ScoreTracker.setupGameObjects()
        VB: Global.ScoreTracker.setupGameObjects()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: setupGameObjects
        path: ''
        startLine: 3037
      syntax:
        content:
          CSharp: public void setupGameObjects()
          VB: Public Sub setupGameObjects
      overload: Global.ScoreTracker.setupGameObjects*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ScoreTracker.getInstance
      commentId: M:Global.ScoreTracker.getInstance
      language: CSharp
      name:
        CSharp: getInstance()
        VB: getInstance()
      nameWithType:
        CSharp: ScoreTracker.getInstance()
        VB: ScoreTracker.getInstance()
      qualifiedName:
        CSharp: Global.ScoreTracker.getInstance()
        VB: Global.ScoreTracker.getInstance()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: getInstance
        path: ''
        startLine: 3060
      syntax:
        content:
          CSharp: public static ScoreTracker getInstance()
          VB: Public Shared Function getInstance As ScoreTracker
        return:
          type: Global.ScoreTracker
      overload: Global.ScoreTracker.getInstance*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.ScoreTracker.destroy
      commentId: M:Global.ScoreTracker.destroy
      language: CSharp
      name:
        CSharp: destroy()
        VB: destroy()
      nameWithType:
        CSharp: ScoreTracker.destroy()
        VB: ScoreTracker.destroy()
      qualifiedName:
        CSharp: Global.ScoreTracker.destroy()
        VB: Global.ScoreTracker.destroy()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: destroy
        path: ''
        startLine: 3082
      syntax:
        content:
          CSharp: public void destroy()
          VB: Public Sub destroy
      overload: Global.ScoreTracker.destroy*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Json
  commentId: N:Json
  language: CSharp
  name:
    CSharp: Json
    VB: Json
  nameWithType:
    CSharp: Json
    VB: Json
  qualifiedName:
    CSharp: Json
    VB: Json
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Json.JsonController
    commentId: T:Json.JsonController
    language: CSharp
    name:
      CSharp: JsonController
      VB: JsonController
    nameWithType:
      CSharp: JsonController
      VB: JsonController
    qualifiedName:
      CSharp: Json.JsonController
      VB: Json.JsonController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Json
    source:
      id: JsonController
      path: ''
      startLine: 3104
    summary: "\nController for Json stuff.\nCan write and read mapping and info files as well as highscores files by using\nother classes in this package.\n"
    example: []
    syntax:
      content:
        CSharp: public class JsonController
        VB: Public Class JsonController
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Json.JsonController.MAPPING_VERSION
      commentId: F:Json.JsonController.MAPPING_VERSION
      language: CSharp
      name:
        CSharp: MAPPING_VERSION
        VB: MAPPING_VERSION
      nameWithType:
        CSharp: JsonController.MAPPING_VERSION
        VB: JsonController.MAPPING_VERSION
      qualifiedName:
        CSharp: Json.JsonController.MAPPING_VERSION
        VB: Json.JsonController.MAPPING_VERSION
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Json
      source:
        id: MAPPING_VERSION
        path: ''
        startLine: 3106
      syntax:
        content:
          CSharp: public const string MAPPING_VERSION = "2.0.0"
          VB: Public Const MAPPING_VERSION As String = "2.0.0"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Json.JsonController.MAPPING_FOLDER_PATH
      commentId: F:Json.JsonController.MAPPING_FOLDER_PATH
      language: CSharp
      name:
        CSharp: MAPPING_FOLDER_PATH
        VB: MAPPING_FOLDER_PATH
      nameWithType:
        CSharp: JsonController.MAPPING_FOLDER_PATH
        VB: JsonController.MAPPING_FOLDER_PATH
      qualifiedName:
        CSharp: Json.JsonController.MAPPING_FOLDER_PATH
        VB: Json.JsonController.MAPPING_FOLDER_PATH
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Json
      source:
        id: MAPPING_FOLDER_PATH
        path: ''
        startLine: 3107
      syntax:
        content:
          CSharp: public const string MAPPING_FOLDER_PATH = "BeatMappings/"
          VB: Public Const MAPPING_FOLDER_PATH As String = "BeatMappings/"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Json.JsonController.HIGHSCORE_FOLDER_PATH
      commentId: F:Json.JsonController.HIGHSCORE_FOLDER_PATH
      language: CSharp
      name:
        CSharp: HIGHSCORE_FOLDER_PATH
        VB: HIGHSCORE_FOLDER_PATH
      nameWithType:
        CSharp: JsonController.HIGHSCORE_FOLDER_PATH
        VB: JsonController.HIGHSCORE_FOLDER_PATH
      qualifiedName:
        CSharp: Json.JsonController.HIGHSCORE_FOLDER_PATH
        VB: Json.JsonController.HIGHSCORE_FOLDER_PATH
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Json
      source:
        id: HIGHSCORE_FOLDER_PATH
        path: ''
        startLine: 3108
      syntax:
        content:
          CSharp: public const string HIGHSCORE_FOLDER_PATH = "Highscores/"
          VB: Public Const HIGHSCORE_FOLDER_PATH As String = "Highscores/"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Json.JsonController.writeMappingFile(Audio.BeatMappingConfigs.MappingContainer,System.String,System.String)
      commentId: M:Json.JsonController.writeMappingFile(Audio.BeatMappingConfigs.MappingContainer,System.String,System.String)
      language: CSharp
      name:
        CSharp: writeMappingFile(MappingContainer, String, String)
        VB: writeMappingFile(MappingContainer, String, String)
      nameWithType:
        CSharp: JsonController.writeMappingFile(MappingContainer, String, String)
        VB: JsonController.writeMappingFile(MappingContainer, String, String)
      qualifiedName:
        CSharp: Json.JsonController.writeMappingFile(Audio.BeatMappingConfigs.MappingContainer, System.String, System.String)
        VB: Json.JsonController.writeMappingFile(Audio.BeatMappingConfigs.MappingContainer, System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Json
      source:
        id: writeMappingFile
        path: ''
        startLine: 3110
      syntax:
        content:
          CSharp: public void writeMappingFile(MappingContainer beatMappingContainer, string trackName, string difficulty)
          VB: Public Sub writeMappingFile(beatMappingContainer As MappingContainer, trackName As String, difficulty As String)
        parameters:
        - id: beatMappingContainer
          type: Audio.BeatMappingConfigs.MappingContainer
        - id: trackName
          type: System.String
        - id: difficulty
          type: System.String
      overload: Json.JsonController.writeMappingFile*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Json.JsonController.writeInfoFile(Audio.BeatMappingConfigs.MappingContainer,System.String,System.Single)
      commentId: M:Json.JsonController.writeInfoFile(Audio.BeatMappingConfigs.MappingContainer,System.String,System.Single)
      language: CSharp
      name:
        CSharp: writeInfoFile(MappingContainer, String, Single)
        VB: writeInfoFile(MappingContainer, String, Single)
      nameWithType:
        CSharp: JsonController.writeInfoFile(MappingContainer, String, Single)
        VB: JsonController.writeInfoFile(MappingContainer, String, Single)
      qualifiedName:
        CSharp: Json.JsonController.writeInfoFile(Audio.BeatMappingConfigs.MappingContainer, System.String, System.Single)
        VB: Json.JsonController.writeInfoFile(Audio.BeatMappingConfigs.MappingContainer, System.String, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Json
      source:
        id: writeInfoFile
        path: ''
        startLine: 3122
      syntax:
        content:
          CSharp: public void writeInfoFile(MappingContainer beatMappingContainer, string trackName, float bpm)
          VB: Public Sub writeInfoFile(beatMappingContainer As MappingContainer, trackName As String, bpm As Single)
        parameters:
        - id: beatMappingContainer
          type: Audio.BeatMappingConfigs.MappingContainer
        - id: trackName
          type: System.String
        - id: bpm
          type: System.Single
      overload: Json.JsonController.writeInfoFile*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Json.JsonController.writeHighscoreFile(System.Collections.Generic.List{HighscoreData},System.String,System.String)
      commentId: M:Json.JsonController.writeHighscoreFile(System.Collections.Generic.List{HighscoreData},System.String,System.String)
      language: CSharp
      name:
        CSharp: writeHighscoreFile(List<HighscoreData>, String, String)
        VB: writeHighscoreFile(List(Of HighscoreData), String, String)
      nameWithType:
        CSharp: JsonController.writeHighscoreFile(List<HighscoreData>, String, String)
        VB: JsonController.writeHighscoreFile(List(Of HighscoreData), String, String)
      qualifiedName:
        CSharp: Json.JsonController.writeHighscoreFile(System.Collections.Generic.List<HighscoreData>, System.String, System.String)
        VB: Json.JsonController.writeHighscoreFile(System.Collections.Generic.List(Of HighscoreData), System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Json
      source:
        id: writeHighscoreFile
        path: ''
        startLine: 3131
      syntax:
        content:
          CSharp: public void writeHighscoreFile(List<HighscoreData> highscoreData, string trackName, string difficulty)
          VB: Public Sub writeHighscoreFile(highscoreData As List(Of HighscoreData), trackName As String, difficulty As String)
        parameters:
        - id: highscoreData
          type: System.Collections.Generic.List{HighscoreData}
        - id: trackName
          type: System.String
        - id: difficulty
          type: System.String
      overload: Json.JsonController.writeHighscoreFile*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Json.JsonController.readMappingFile(System.String)
      commentId: M:Json.JsonController.readMappingFile(System.String)
      language: CSharp
      name:
        CSharp: readMappingFile(String)
        VB: readMappingFile(String)
      nameWithType:
        CSharp: JsonController.readMappingFile(String)
        VB: JsonController.readMappingFile(String)
      qualifiedName:
        CSharp: Json.JsonController.readMappingFile(System.String)
        VB: Json.JsonController.readMappingFile(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Json
      source:
        id: readMappingFile
        path: ''
        startLine: 3143
      syntax:
        content:
          CSharp: public MappingContainer readMappingFile(string fullFilePath)
          VB: Public Function readMappingFile(fullFilePath As String) As MappingContainer
        parameters:
        - id: fullFilePath
          type: System.String
        return:
          type: Audio.BeatMappingConfigs.MappingContainer
      overload: Json.JsonController.readMappingFile*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Json.JsonController.readInfoFile(System.String)
      commentId: M:Json.JsonController.readInfoFile(System.String)
      language: CSharp
      name:
        CSharp: readInfoFile(String)
        VB: readInfoFile(String)
      nameWithType:
        CSharp: JsonController.readInfoFile(String)
        VB: JsonController.readInfoFile(String)
      qualifiedName:
        CSharp: Json.JsonController.readInfoFile(System.String)
        VB: Json.JsonController.readInfoFile(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Json
      source:
        id: readInfoFile
        path: ''
        startLine: 3148
      syntax:
        content:
          CSharp: public MappingInfo readInfoFile(string fullFilePath)
          VB: Public Function readInfoFile(fullFilePath As String) As MappingInfo
        parameters:
        - id: fullFilePath
          type: System.String
        return:
          type: Audio.BeatMappingConfigs.MappingInfo
      overload: Json.JsonController.readInfoFile*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Json.JsonController.readHighscoreFile(System.String)
      commentId: M:Json.JsonController.readHighscoreFile(System.String)
      language: CSharp
      name:
        CSharp: readHighscoreFile(String)
        VB: readHighscoreFile(String)
      nameWithType:
        CSharp: JsonController.readHighscoreFile(String)
        VB: JsonController.readHighscoreFile(String)
      qualifiedName:
        CSharp: Json.JsonController.readHighscoreFile(System.String)
        VB: Json.JsonController.readHighscoreFile(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Json
      source:
        id: readHighscoreFile
        path: ''
        startLine: 3153
      syntax:
        content:
          CSharp: public List<HighscoreData> readHighscoreFile(string fullFilePath)
          VB: Public Function readHighscoreFile(fullFilePath As String) As List(Of HighscoreData)
        parameters:
        - id: fullFilePath
          type: System.String
        return:
          type: System.Collections.Generic.List{HighscoreData}
      overload: Json.JsonController.readHighscoreFile*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Json.JsonController.fileExists(System.String)
      commentId: M:Json.JsonController.fileExists(System.String)
      language: CSharp
      name:
        CSharp: fileExists(String)
        VB: fileExists(String)
      nameWithType:
        CSharp: JsonController.fileExists(String)
        VB: JsonController.fileExists(String)
      qualifiedName:
        CSharp: Json.JsonController.fileExists(System.String)
        VB: Json.JsonController.fileExists(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Json
      source:
        id: fileExists
        path: ''
        startLine: 3158
      syntax:
        content:
          CSharp: public bool fileExists(string fullFilePath)
          VB: Public Function fileExists(fullFilePath As String) As Boolean
        parameters:
        - id: fullFilePath
          type: System.String
        return:
          type: System.Boolean
      overload: Json.JsonController.fileExists*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Json.JsonController.getFullMappingPath(System.String,System.String,System.String)
      commentId: M:Json.JsonController.getFullMappingPath(System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: getFullMappingPath(String, String, String)
        VB: getFullMappingPath(String, String, String)
      nameWithType:
        CSharp: JsonController.getFullMappingPath(String, String, String)
        VB: JsonController.getFullMappingPath(String, String, String)
      qualifiedName:
        CSharp: Json.JsonController.getFullMappingPath(System.String, System.String, System.String)
        VB: Json.JsonController.getFullMappingPath(System.String, System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Json
      source:
        id: getFullMappingPath
        path: ''
        startLine: 3163
      syntax:
        content:
          CSharp: public string getFullMappingPath(string subFolder, string trackName, string difficulty)
          VB: Public Function getFullMappingPath(subFolder As String, trackName As String, difficulty As String) As String
        parameters:
        - id: subFolder
          type: System.String
        - id: trackName
          type: System.String
        - id: difficulty
          type: System.String
        return:
          type: System.String
      overload: Json.JsonController.getFullMappingPath*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Json.JsonController.getFullInfoPath(System.String,System.String)
      commentId: M:Json.JsonController.getFullInfoPath(System.String,System.String)
      language: CSharp
      name:
        CSharp: getFullInfoPath(String, String)
        VB: getFullInfoPath(String, String)
      nameWithType:
        CSharp: JsonController.getFullInfoPath(String, String)
        VB: JsonController.getFullInfoPath(String, String)
      qualifiedName:
        CSharp: Json.JsonController.getFullInfoPath(System.String, System.String)
        VB: Json.JsonController.getFullInfoPath(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Json
      source:
        id: getFullInfoPath
        path: ''
        startLine: 3169
      syntax:
        content:
          CSharp: public string getFullInfoPath(string subFolder, string trackName)
          VB: Public Function getFullInfoPath(subFolder As String, trackName As String) As String
        parameters:
        - id: subFolder
          type: System.String
        - id: trackName
          type: System.String
        return:
          type: System.String
      overload: Json.JsonController.getFullInfoPath*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Json.JsonFilePathUtils
    commentId: T:Json.JsonFilePathUtils
    language: CSharp
    name:
      CSharp: JsonFilePathUtils
      VB: JsonFilePathUtils
    nameWithType:
      CSharp: JsonFilePathUtils
      VB: JsonFilePathUtils
    qualifiedName:
      CSharp: Json.JsonFilePathUtils
      VB: Json.JsonFilePathUtils
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Json
    source:
      id: JsonFilePathUtils
      path: ''
      startLine: 3183
    summary: "\nUtil class to get file and folder paths.\n"
    example: []
    syntax:
      content:
        CSharp: public static class JsonFilePathUtils
        VB: Public Module JsonFilePathUtils
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Json.JsonFilePathUtils.getFolderPath(System.String,System.String)
      commentId: M:Json.JsonFilePathUtils.getFolderPath(System.String,System.String)
      language: CSharp
      name:
        CSharp: getFolderPath(String, String)
        VB: getFolderPath(String, String)
      nameWithType:
        CSharp: JsonFilePathUtils.getFolderPath(String, String)
        VB: JsonFilePathUtils.getFolderPath(String, String)
      qualifiedName:
        CSharp: Json.JsonFilePathUtils.getFolderPath(System.String, System.String)
        VB: Json.JsonFilePathUtils.getFolderPath(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Json
      source:
        id: getFolderPath
        path: ''
        startLine: 3187
      syntax:
        content:
          CSharp: public static string getFolderPath(string subFolder, string shortFileName)
          VB: Public Shared Function getFolderPath(subFolder As String, shortFileName As String) As String
        parameters:
        - id: subFolder
          type: System.String
        - id: shortFileName
          type: System.String
        return:
          type: System.String
      overload: Json.JsonFilePathUtils.getFolderPath*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Json.JsonFilePathUtils.getFullPath(System.String,System.String)
      commentId: M:Json.JsonFilePathUtils.getFullPath(System.String,System.String)
      language: CSharp
      name:
        CSharp: getFullPath(String, String)
        VB: getFullPath(String, String)
      nameWithType:
        CSharp: JsonFilePathUtils.getFullPath(String, String)
        VB: JsonFilePathUtils.getFullPath(String, String)
      qualifiedName:
        CSharp: Json.JsonFilePathUtils.getFullPath(System.String, System.String)
        VB: Json.JsonFilePathUtils.getFullPath(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Json
      source:
        id: getFullPath
        path: ''
        startLine: 3192
      syntax:
        content:
          CSharp: public static string getFullPath(string folderPath, string shortFileName)
          VB: Public Shared Function getFullPath(folderPath As String, shortFileName As String) As String
        parameters:
        - id: folderPath
          type: System.String
        - id: shortFileName
          type: System.String
        return:
          type: System.String
      overload: Json.JsonFilePathUtils.getFullPath*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
- id: Json.JsonIOHandler
  commentId: N:Json.JsonIOHandler
  language: CSharp
  name:
    CSharp: Json.JsonIOHandler
    VB: Json.JsonIOHandler
  nameWithType:
    CSharp: Json.JsonIOHandler
    VB: Json.JsonIOHandler
  qualifiedName:
    CSharp: Json.JsonIOHandler
    VB: Json.JsonIOHandler
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Json.JsonIOHandler.JsonFileWriter
    commentId: T:Json.JsonIOHandler.JsonFileWriter
    language: CSharp
    name:
      CSharp: JsonFileWriter
      VB: JsonFileWriter
    nameWithType:
      CSharp: JsonFileWriter
      VB: JsonFileWriter
    qualifiedName:
      CSharp: Json.JsonIOHandler.JsonFileWriter
      VB: Json.JsonIOHandler.JsonFileWriter
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Json.JsonIOHandler
    source:
      id: JsonFileWriter
      path: ''
      startLine: 3216
    summary: "\nWrites a json file.\n"
    example: []
    syntax:
      content:
        CSharp: public static class JsonFileWriter
        VB: Public Module JsonFileWriter
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Json.JsonIOHandler.JsonFileWriter.writeFile(System.String,FileInfo)
      commentId: M:Json.JsonIOHandler.JsonFileWriter.writeFile(System.String,FileInfo)
      language: CSharp
      name:
        CSharp: writeFile(String, FileInfo)
        VB: writeFile(String, FileInfo)
      nameWithType:
        CSharp: JsonFileWriter.writeFile(String, FileInfo)
        VB: JsonFileWriter.writeFile(String, FileInfo)
      qualifiedName:
        CSharp: Json.JsonIOHandler.JsonFileWriter.writeFile(System.String, FileInfo)
        VB: Json.JsonIOHandler.JsonFileWriter.writeFile(System.String, FileInfo)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Json.JsonIOHandler
      source:
        id: writeFile
        path: ''
        startLine: 3218
      syntax:
        content:
          CSharp: public static void writeFile(string json, FileInfo fileInfo)
          VB: Public Shared Sub writeFile(json As String, fileInfo As FileInfo)
        parameters:
        - id: json
          type: System.String
        - id: fileInfo
          type: FileInfo
      overload: Json.JsonIOHandler.JsonFileWriter.writeFile*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Json.JsonIOHandler.JsonFileReader
    commentId: T:Json.JsonIOHandler.JsonFileReader
    language: CSharp
    name:
      CSharp: JsonFileReader
      VB: JsonFileReader
    nameWithType:
      CSharp: JsonFileReader
      VB: JsonFileReader
    qualifiedName:
      CSharp: Json.JsonIOHandler.JsonFileReader
      VB: Json.JsonIOHandler.JsonFileReader
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Json.JsonIOHandler
    source:
      id: JsonFileReader
      path: ''
      startLine: 3240
    example: []
    syntax:
      content:
        CSharp: public static class JsonFileReader
        VB: Public Module JsonFileReader
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Json.JsonIOHandler.JsonFileReader.readHighscoreFile(System.String)
      commentId: M:Json.JsonIOHandler.JsonFileReader.readHighscoreFile(System.String)
      language: CSharp
      name:
        CSharp: readHighscoreFile(String)
        VB: readHighscoreFile(String)
      nameWithType:
        CSharp: JsonFileReader.readHighscoreFile(String)
        VB: JsonFileReader.readHighscoreFile(String)
      qualifiedName:
        CSharp: Json.JsonIOHandler.JsonFileReader.readHighscoreFile(System.String)
        VB: Json.JsonIOHandler.JsonFileReader.readHighscoreFile(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Json.JsonIOHandler
      source:
        id: readHighscoreFile
        path: ''
        startLine: 3242
      syntax:
        content:
          CSharp: public static List<HighscoreData> readHighscoreFile(string filePath)
          VB: Public Shared Function readHighscoreFile(filePath As String) As List(Of HighscoreData)
        parameters:
        - id: filePath
          type: System.String
        return:
          type: System.Collections.Generic.List{HighscoreData}
      overload: Json.JsonIOHandler.JsonFileReader.readHighscoreFile*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Json.JsonIOHandler.JsonFileReader.readInfoFile(System.String)
      commentId: M:Json.JsonIOHandler.JsonFileReader.readInfoFile(System.String)
      language: CSharp
      name:
        CSharp: readInfoFile(String)
        VB: readInfoFile(String)
      nameWithType:
        CSharp: JsonFileReader.readInfoFile(String)
        VB: JsonFileReader.readInfoFile(String)
      qualifiedName:
        CSharp: Json.JsonIOHandler.JsonFileReader.readInfoFile(System.String)
        VB: Json.JsonIOHandler.JsonFileReader.readInfoFile(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Json.JsonIOHandler
      source:
        id: readInfoFile
        path: ''
        startLine: 3263
      syntax:
        content:
          CSharp: public static MappingInfo readInfoFile(string filePath)
          VB: Public Shared Function readInfoFile(filePath As String) As MappingInfo
        parameters:
        - id: filePath
          type: System.String
        return:
          type: Audio.BeatMappingConfigs.MappingInfo
      overload: Json.JsonIOHandler.JsonFileReader.readInfoFile*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Json.JsonIOHandler.JsonFileReader.readMappingFile(System.String)
      commentId: M:Json.JsonIOHandler.JsonFileReader.readMappingFile(System.String)
      language: CSharp
      name:
        CSharp: readMappingFile(String)
        VB: readMappingFile(String)
      nameWithType:
        CSharp: JsonFileReader.readMappingFile(String)
        VB: JsonFileReader.readMappingFile(String)
      qualifiedName:
        CSharp: Json.JsonIOHandler.JsonFileReader.readMappingFile(System.String)
        VB: Json.JsonIOHandler.JsonFileReader.readMappingFile(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Json.JsonIOHandler
      source:
        id: readMappingFile
        path: ''
        startLine: 3280
      syntax:
        content:
          CSharp: public static MappingContainer readMappingFile(string filePath)
          VB: Public Shared Function readMappingFile(filePath As String) As MappingContainer
        parameters:
        - id: filePath
          type: System.String
        return:
          type: Audio.BeatMappingConfigs.MappingContainer
      overload: Json.JsonIOHandler.JsonFileReader.readMappingFile*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
- id: Json.JsonStringBuilders
  commentId: N:Json.JsonStringBuilders
  language: CSharp
  name:
    CSharp: Json.JsonStringBuilders
    VB: Json.JsonStringBuilders
  nameWithType:
    CSharp: Json.JsonStringBuilders
    VB: Json.JsonStringBuilders
  qualifiedName:
    CSharp: Json.JsonStringBuilders
    VB: Json.JsonStringBuilders
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Json.JsonStringBuilders.JsonHighscoreStringBuilder
    commentId: T:Json.JsonStringBuilders.JsonHighscoreStringBuilder
    language: CSharp
    name:
      CSharp: JsonHighscoreStringBuilder
      VB: JsonHighscoreStringBuilder
    nameWithType:
      CSharp: JsonHighscoreStringBuilder
      VB: JsonHighscoreStringBuilder
    qualifiedName:
      CSharp: Json.JsonStringBuilders.JsonHighscoreStringBuilder
      VB: Json.JsonStringBuilders.JsonHighscoreStringBuilder
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Json.JsonStringBuilders
    source:
      id: JsonHighscoreStringBuilder
      path: ''
      startLine: 3385
    summary: "\nProvides a Json string for an info file.\n"
    example: []
    syntax:
      content:
        CSharp: public class JsonHighscoreStringBuilder
        VB: Public Class JsonHighscoreStringBuilder
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Json.JsonStringBuilders.JsonHighscoreStringBuilder.setData(System.Collections.Generic.List{HighscoreData})
      commentId: M:Json.JsonStringBuilders.JsonHighscoreStringBuilder.setData(System.Collections.Generic.List{HighscoreData})
      language: CSharp
      name:
        CSharp: setData(List<HighscoreData>)
        VB: setData(List(Of HighscoreData))
      nameWithType:
        CSharp: JsonHighscoreStringBuilder.setData(List<HighscoreData>)
        VB: JsonHighscoreStringBuilder.setData(List(Of HighscoreData))
      qualifiedName:
        CSharp: Json.JsonStringBuilders.JsonHighscoreStringBuilder.setData(System.Collections.Generic.List<HighscoreData>)
        VB: Json.JsonStringBuilders.JsonHighscoreStringBuilder.setData(System.Collections.Generic.List(Of HighscoreData))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Json.JsonStringBuilders
      source:
        id: setData
        path: ''
        startLine: 3390
      syntax:
        content:
          CSharp: public void setData(List<HighscoreData> highscoreData)
          VB: Public Sub setData(highscoreData As List(Of HighscoreData))
        parameters:
        - id: highscoreData
          type: System.Collections.Generic.List{HighscoreData}
      overload: Json.JsonStringBuilders.JsonHighscoreStringBuilder.setData*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Json.JsonStringBuilders.JsonHighscoreStringBuilder.getJsonString
      commentId: M:Json.JsonStringBuilders.JsonHighscoreStringBuilder.getJsonString
      language: CSharp
      name:
        CSharp: getJsonString()
        VB: getJsonString()
      nameWithType:
        CSharp: JsonHighscoreStringBuilder.getJsonString()
        VB: JsonHighscoreStringBuilder.getJsonString()
      qualifiedName:
        CSharp: Json.JsonStringBuilders.JsonHighscoreStringBuilder.getJsonString()
        VB: Json.JsonStringBuilders.JsonHighscoreStringBuilder.getJsonString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Json.JsonStringBuilders
      source:
        id: getJsonString
        path: ''
        startLine: 3395
      syntax:
        content:
          CSharp: public string getJsonString()
          VB: Public Function getJsonString As String
        return:
          type: System.String
      overload: Json.JsonStringBuilders.JsonHighscoreStringBuilder.getJsonString*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Json.JsonStringBuilders.JsonMappingStringBuilder
    commentId: T:Json.JsonStringBuilders.JsonMappingStringBuilder
    language: CSharp
    name:
      CSharp: JsonMappingStringBuilder
      VB: JsonMappingStringBuilder
    nameWithType:
      CSharp: JsonMappingStringBuilder
      VB: JsonMappingStringBuilder
    qualifiedName:
      CSharp: Json.JsonStringBuilders.JsonMappingStringBuilder
      VB: Json.JsonStringBuilders.JsonMappingStringBuilder
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Json.JsonStringBuilders
    source:
      id: JsonMappingStringBuilder
      path: ''
      startLine: 3430
    example: []
    syntax:
      content:
        CSharp: public class JsonMappingStringBuilder
        VB: Public Class JsonMappingStringBuilder
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Json.JsonStringBuilders.JsonMappingStringBuilder.setData(Audio.BeatMappingConfigs.MappingContainer)
      commentId: M:Json.JsonStringBuilders.JsonMappingStringBuilder.setData(Audio.BeatMappingConfigs.MappingContainer)
      language: CSharp
      name:
        CSharp: setData(MappingContainer)
        VB: setData(MappingContainer)
      nameWithType:
        CSharp: JsonMappingStringBuilder.setData(MappingContainer)
        VB: JsonMappingStringBuilder.setData(MappingContainer)
      qualifiedName:
        CSharp: Json.JsonStringBuilders.JsonMappingStringBuilder.setData(Audio.BeatMappingConfigs.MappingContainer)
        VB: Json.JsonStringBuilders.JsonMappingStringBuilder.setData(Audio.BeatMappingConfigs.MappingContainer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Json.JsonStringBuilders
      source:
        id: setData
        path: ''
        startLine: 3443
      syntax:
        content:
          CSharp: public void setData(MappingContainer beatMappingContainer)
          VB: Public Sub setData(beatMappingContainer As MappingContainer)
        parameters:
        - id: beatMappingContainer
          type: Audio.BeatMappingConfigs.MappingContainer
      overload: Json.JsonStringBuilders.JsonMappingStringBuilder.setData*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Json.JsonStringBuilders.JsonMappingStringBuilder.getJsonString
      commentId: M:Json.JsonStringBuilders.JsonMappingStringBuilder.getJsonString
      language: CSharp
      name:
        CSharp: getJsonString()
        VB: getJsonString()
      nameWithType:
        CSharp: JsonMappingStringBuilder.getJsonString()
        VB: JsonMappingStringBuilder.getJsonString()
      qualifiedName:
        CSharp: Json.JsonStringBuilders.JsonMappingStringBuilder.getJsonString()
        VB: Json.JsonStringBuilders.JsonMappingStringBuilder.getJsonString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Json.JsonStringBuilders
      source:
        id: getJsonString
        path: ''
        startLine: 3451
      syntax:
        content:
          CSharp: public string getJsonString()
          VB: Public Function getJsonString As String
        return:
          type: System.String
      overload: Json.JsonStringBuilders.JsonMappingStringBuilder.getJsonString*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Json.JsonStringBuilders.JsonInfoStringBuilder
    commentId: T:Json.JsonStringBuilders.JsonInfoStringBuilder
    language: CSharp
    name:
      CSharp: JsonInfoStringBuilder
      VB: JsonInfoStringBuilder
    nameWithType:
      CSharp: JsonInfoStringBuilder
      VB: JsonInfoStringBuilder
    qualifiedName:
      CSharp: Json.JsonStringBuilders.JsonInfoStringBuilder
      VB: Json.JsonStringBuilders.JsonInfoStringBuilder
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Json.JsonStringBuilders
    source:
      id: JsonInfoStringBuilder
      path: ''
      startLine: 3589
    example: []
    syntax:
      content:
        CSharp: public static class JsonInfoStringBuilder
        VB: Public Module JsonInfoStringBuilder
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Json.JsonStringBuilders.JsonInfoStringBuilder.getJsonString(System.String,System.Single)
      commentId: M:Json.JsonStringBuilders.JsonInfoStringBuilder.getJsonString(System.String,System.Single)
      language: CSharp
      name:
        CSharp: getJsonString(String, Single)
        VB: getJsonString(String, Single)
      nameWithType:
        CSharp: JsonInfoStringBuilder.getJsonString(String, Single)
        VB: JsonInfoStringBuilder.getJsonString(String, Single)
      qualifiedName:
        CSharp: Json.JsonStringBuilders.JsonInfoStringBuilder.getJsonString(System.String, System.Single)
        VB: Json.JsonStringBuilders.JsonInfoStringBuilder.getJsonString(System.String, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Json.JsonStringBuilders
      source:
        id: getJsonString
        path: ''
        startLine: 3593
      syntax:
        content:
          CSharp: public static string getJsonString(string trackName, float bpm)
          VB: Public Shared Function getJsonString(trackName As String, bpm As Single) As String
        parameters:
        - id: trackName
          type: System.String
        - id: bpm
          type: System.Single
        return:
          type: System.String
      overload: Json.JsonStringBuilders.JsonInfoStringBuilder.getJsonString*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
- id: MenuMainMenu
  commentId: N:MenuMainMenu
  language: CSharp
  name:
    CSharp: MenuMainMenu
    VB: MenuMainMenu
  nameWithType:
    CSharp: MenuMainMenu
    VB: MenuMainMenu
  qualifiedName:
    CSharp: MenuMainMenu
    VB: MenuMainMenu
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: MenuMainMenu.MainMenu
    commentId: T:MenuMainMenu.MainMenu
    language: CSharp
    name:
      CSharp: MainMenu
      VB: MainMenu
    nameWithType:
      CSharp: MainMenu
      VB: MainMenu
    qualifiedName:
      CSharp: MenuMainMenu.MainMenu
      VB: MenuMainMenu.MainMenu
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: MenuMainMenu
    source:
      id: MainMenu
      path: ''
      startLine: 3621
    summary: "\nMain Menu UI script to handle button clicks.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class MainMenu : MonoBehaviour'
        VB: >-
          Public Class MainMenu

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MenuMainMenu.MainMenu.mainMenu
      commentId: F:MenuMainMenu.MainMenu.mainMenu
      language: CSharp
      name:
        CSharp: mainMenu
        VB: mainMenu
      nameWithType:
        CSharp: MainMenu.mainMenu
        VB: MainMenu.mainMenu
      qualifiedName:
        CSharp: MenuMainMenu.MainMenu.mainMenu
        VB: MenuMainMenu.MainMenu.mainMenu
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: MenuMainMenu
      source:
        id: mainMenu
        path: ''
        startLine: 3623
      syntax:
        content:
          CSharp: public GameObject mainMenu
          VB: Public mainMenu As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MenuMainMenu.MainMenu.playMenu
      commentId: F:MenuMainMenu.MainMenu.playMenu
      language: CSharp
      name:
        CSharp: playMenu
        VB: playMenu
      nameWithType:
        CSharp: MainMenu.playMenu
        VB: MainMenu.playMenu
      qualifiedName:
        CSharp: MenuMainMenu.MainMenu.playMenu
        VB: MenuMainMenu.MainMenu.playMenu
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: MenuMainMenu
      source:
        id: playMenu
        path: ''
        startLine: 3624
      syntax:
        content:
          CSharp: public GameObject playMenu
          VB: Public playMenu As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MenuMainMenu.MainMenu.optionsMenu
      commentId: F:MenuMainMenu.MainMenu.optionsMenu
      language: CSharp
      name:
        CSharp: optionsMenu
        VB: optionsMenu
      nameWithType:
        CSharp: MainMenu.optionsMenu
        VB: MainMenu.optionsMenu
      qualifiedName:
        CSharp: MenuMainMenu.MainMenu.optionsMenu
        VB: MenuMainMenu.MainMenu.optionsMenu
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: MenuMainMenu
      source:
        id: optionsMenu
        path: ''
        startLine: 3625
      syntax:
        content:
          CSharp: public GameObject optionsMenu
          VB: Public optionsMenu As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MenuMainMenu.MainMenu.clickPlay
      commentId: M:MenuMainMenu.MainMenu.clickPlay
      language: CSharp
      name:
        CSharp: clickPlay()
        VB: clickPlay()
      nameWithType:
        CSharp: MainMenu.clickPlay()
        VB: MainMenu.clickPlay()
      qualifiedName:
        CSharp: MenuMainMenu.MainMenu.clickPlay()
        VB: MenuMainMenu.MainMenu.clickPlay()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: MenuMainMenu
      source:
        id: clickPlay
        path: ''
        startLine: 3635
      syntax:
        content:
          CSharp: public void clickPlay()
          VB: Public Sub clickPlay
      overload: MenuMainMenu.MainMenu.clickPlay*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MenuMainMenu.MainMenu.clickOnsetTest
      commentId: M:MenuMainMenu.MainMenu.clickOnsetTest
      language: CSharp
      name:
        CSharp: clickOnsetTest()
        VB: clickOnsetTest()
      nameWithType:
        CSharp: MainMenu.clickOnsetTest()
        VB: MainMenu.clickOnsetTest()
      qualifiedName:
        CSharp: MenuMainMenu.MainMenu.clickOnsetTest()
        VB: MenuMainMenu.MainMenu.clickOnsetTest()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: MenuMainMenu
      source:
        id: clickOnsetTest
        path: ''
        startLine: 3641
      syntax:
        content:
          CSharp: public void clickOnsetTest()
          VB: Public Sub clickOnsetTest
      overload: MenuMainMenu.MainMenu.clickOnsetTest*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MenuMainMenu.MainMenu.clickOptions
      commentId: M:MenuMainMenu.MainMenu.clickOptions
      language: CSharp
      name:
        CSharp: clickOptions()
        VB: clickOptions()
      nameWithType:
        CSharp: MainMenu.clickOptions()
        VB: MainMenu.clickOptions()
      qualifiedName:
        CSharp: MenuMainMenu.MainMenu.clickOptions()
        VB: MenuMainMenu.MainMenu.clickOptions()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: MenuMainMenu
      source:
        id: clickOptions
        path: ''
        startLine: 3646
      syntax:
        content:
          CSharp: public void clickOptions()
          VB: Public Sub clickOptions
      overload: MenuMainMenu.MainMenu.clickOptions*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MenuMainMenu.MainMenu.clickQuit
      commentId: M:MenuMainMenu.MainMenu.clickQuit
      language: CSharp
      name:
        CSharp: clickQuit()
        VB: clickQuit()
      nameWithType:
        CSharp: MainMenu.clickQuit()
        VB: MainMenu.clickQuit()
      qualifiedName:
        CSharp: MenuMainMenu.MainMenu.clickQuit()
        VB: MenuMainMenu.MainMenu.clickQuit()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: MenuMainMenu
      source:
        id: clickQuit
        path: ''
        startLine: 3652
      syntax:
        content:
          CSharp: public void clickQuit()
          VB: Public Sub clickQuit
      overload: MenuMainMenu.MainMenu.clickQuit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: MenuMainMenu.OptionsMenu
    commentId: T:MenuMainMenu.OptionsMenu
    language: CSharp
    name:
      CSharp: OptionsMenu
      VB: OptionsMenu
    nameWithType:
      CSharp: OptionsMenu
      VB: OptionsMenu
    qualifiedName:
      CSharp: MenuMainMenu.OptionsMenu
      VB: MenuMainMenu.OptionsMenu
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: MenuMainMenu
    source:
      id: OptionsMenu
      path: ''
      startLine: 3673
    summary: "\nOptions Menu UI script to handle button clicks.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class OptionsMenu : MonoBehaviour'
        VB: >-
          Public Class OptionsMenu

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MenuMainMenu.OptionsMenu.setBackCallback(Action)
      commentId: M:MenuMainMenu.OptionsMenu.setBackCallback(Action)
      language: CSharp
      name:
        CSharp: setBackCallback(Action)
        VB: setBackCallback(Action)
      nameWithType:
        CSharp: OptionsMenu.setBackCallback(Action)
        VB: OptionsMenu.setBackCallback(Action)
      qualifiedName:
        CSharp: MenuMainMenu.OptionsMenu.setBackCallback(Action)
        VB: MenuMainMenu.OptionsMenu.setBackCallback(Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: MenuMainMenu
      source:
        id: setBackCallback
        path: ''
        startLine: 3677
      syntax:
        content:
          CSharp: public void setBackCallback(Action backButtonCallback)
          VB: Public Sub setBackCallback(backButtonCallback As Action)
        parameters:
        - id: backButtonCallback
          type: Action
      overload: MenuMainMenu.OptionsMenu.setBackCallback*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MenuMainMenu.OptionsMenu.clickBack
      commentId: M:MenuMainMenu.OptionsMenu.clickBack
      language: CSharp
      name:
        CSharp: clickBack()
        VB: clickBack()
      nameWithType:
        CSharp: OptionsMenu.clickBack()
        VB: OptionsMenu.clickBack()
      qualifiedName:
        CSharp: MenuMainMenu.OptionsMenu.clickBack()
        VB: MenuMainMenu.OptionsMenu.clickBack()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: MenuMainMenu
      source:
        id: clickBack
        path: ''
        startLine: 3682
      syntax:
        content:
          CSharp: public void clickBack()
          VB: Public Sub clickBack
      overload: MenuMainMenu.OptionsMenu.clickBack*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: MenuMainMenu.PlayMenu
    commentId: T:MenuMainMenu.PlayMenu
    language: CSharp
    name:
      CSharp: PlayMenu
      VB: PlayMenu
    nameWithType:
      CSharp: PlayMenu
      VB: PlayMenu
    qualifiedName:
      CSharp: MenuMainMenu.PlayMenu
      VB: MenuMainMenu.PlayMenu
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: MenuMainMenu
    source:
      id: PlayMenu
      path: ''
      startLine: 3707
    summary: "\nPlay Menu UI script to handle button clicks.\nThe UI contains a &apos;Load File&apos; button.When that button is clicked, a file browser window appears.\nThis was done using the external &apos;SimpleFileBrowser&apos; library. A song can be and the desired\ndifficulty level can be chosen.\nCurrently the difficulty level determines the threshold level that will be used in the Audio Analysis.\nA lower threshold level means that more beats will be detected.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class PlayMenu : MonoBehaviour'
        VB: >-
          Public Class PlayMenu

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MenuMainMenu.PlayMenu.audioController
      commentId: F:MenuMainMenu.PlayMenu.audioController
      language: CSharp
      name:
        CSharp: audioController
        VB: audioController
      nameWithType:
        CSharp: PlayMenu.audioController
        VB: PlayMenu.audioController
      qualifiedName:
        CSharp: MenuMainMenu.PlayMenu.audioController
        VB: MenuMainMenu.PlayMenu.audioController
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: MenuMainMenu
      source:
        id: audioController
        path: ''
        startLine: 3709
      syntax:
        content:
          CSharp: public GameObject audioController
          VB: Public audioController As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MenuMainMenu.PlayMenu.loadingScreen
      commentId: F:MenuMainMenu.PlayMenu.loadingScreen
      language: CSharp
      name:
        CSharp: loadingScreen
        VB: loadingScreen
      nameWithType:
        CSharp: PlayMenu.loadingScreen
        VB: PlayMenu.loadingScreen
      qualifiedName:
        CSharp: MenuMainMenu.PlayMenu.loadingScreen
        VB: MenuMainMenu.PlayMenu.loadingScreen
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: MenuMainMenu
      source:
        id: loadingScreen
        path: ''
        startLine: 3710
      syntax:
        content:
          CSharp: public GameObject loadingScreen
          VB: Public loadingScreen As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MenuMainMenu.PlayMenu.difficultyLabel
      commentId: F:MenuMainMenu.PlayMenu.difficultyLabel
      language: CSharp
      name:
        CSharp: difficultyLabel
        VB: difficultyLabel
      nameWithType:
        CSharp: PlayMenu.difficultyLabel
        VB: PlayMenu.difficultyLabel
      qualifiedName:
        CSharp: MenuMainMenu.PlayMenu.difficultyLabel
        VB: MenuMainMenu.PlayMenu.difficultyLabel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: MenuMainMenu
      source:
        id: difficultyLabel
        path: ''
        startLine: 3711
      syntax:
        content:
          CSharp: public Text difficultyLabel
          VB: Public difficultyLabel As Text
        return:
          type: Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MenuMainMenu.PlayMenu.setBackCallback(Action)
      commentId: M:MenuMainMenu.PlayMenu.setBackCallback(Action)
      language: CSharp
      name:
        CSharp: setBackCallback(Action)
        VB: setBackCallback(Action)
      nameWithType:
        CSharp: PlayMenu.setBackCallback(Action)
        VB: PlayMenu.setBackCallback(Action)
      qualifiedName:
        CSharp: MenuMainMenu.PlayMenu.setBackCallback(Action)
        VB: MenuMainMenu.PlayMenu.setBackCallback(Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: MenuMainMenu
      source:
        id: setBackCallback
        path: ''
        startLine: 3727
      syntax:
        content:
          CSharp: public void setBackCallback(Action backButtonCallback)
          VB: Public Sub setBackCallback(backButtonCallback As Action)
        parameters:
        - id: backButtonCallback
          type: Action
      overload: MenuMainMenu.PlayMenu.setBackCallback*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MenuMainMenu.PlayMenu.clickPlay
      commentId: M:MenuMainMenu.PlayMenu.clickPlay
      language: CSharp
      name:
        CSharp: clickPlay()
        VB: clickPlay()
      nameWithType:
        CSharp: PlayMenu.clickPlay()
        VB: PlayMenu.clickPlay()
      qualifiedName:
        CSharp: MenuMainMenu.PlayMenu.clickPlay()
        VB: MenuMainMenu.PlayMenu.clickPlay()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: MenuMainMenu
      source:
        id: clickPlay
        path: ''
        startLine: 3732
      syntax:
        content:
          CSharp: public void clickPlay()
          VB: Public Sub clickPlay
      overload: MenuMainMenu.PlayMenu.clickPlay*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MenuMainMenu.PlayMenu.clickBack
      commentId: M:MenuMainMenu.PlayMenu.clickBack
      language: CSharp
      name:
        CSharp: clickBack()
        VB: clickBack()
      nameWithType:
        CSharp: PlayMenu.clickBack()
        VB: PlayMenu.clickBack()
      qualifiedName:
        CSharp: MenuMainMenu.PlayMenu.clickBack()
        VB: MenuMainMenu.PlayMenu.clickBack()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: MenuMainMenu
      source:
        id: clickBack
        path: ''
        startLine: 3744
      syntax:
        content:
          CSharp: public void clickBack()
          VB: Public Sub clickBack
      overload: MenuMainMenu.PlayMenu.clickBack*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MenuMainMenu.PlayMenu.clickLoadAudioFile
      commentId: M:MenuMainMenu.PlayMenu.clickLoadAudioFile
      language: CSharp
      name:
        CSharp: clickLoadAudioFile()
        VB: clickLoadAudioFile()
      nameWithType:
        CSharp: PlayMenu.clickLoadAudioFile()
        VB: PlayMenu.clickLoadAudioFile()
      qualifiedName:
        CSharp: MenuMainMenu.PlayMenu.clickLoadAudioFile()
        VB: MenuMainMenu.PlayMenu.clickLoadAudioFile()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: MenuMainMenu
      source:
        id: clickLoadAudioFile
        path: ''
        startLine: 3751
      syntax:
        content:
          CSharp: public void clickLoadAudioFile()
          VB: Public Sub clickLoadAudioFile
      overload: MenuMainMenu.PlayMenu.clickLoadAudioFile*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: MenuMainMenu.ShowSliderValueAwesome
    commentId: T:MenuMainMenu.ShowSliderValueAwesome
    language: CSharp
    name:
      CSharp: ShowSliderValueAwesome
      VB: ShowSliderValueAwesome
    nameWithType:
      CSharp: ShowSliderValueAwesome
      VB: ShowSliderValueAwesome
    qualifiedName:
      CSharp: MenuMainMenu.ShowSliderValueAwesome
      VB: MenuMainMenu.ShowSliderValueAwesome
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: MenuMainMenu
    source:
      id: ShowSliderValueAwesome
      path: ''
      startLine: 3803
    summary: "\nAdds slider values to the awesome slider.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ShowSliderValueAwesome : MonoBehaviour'
        VB: >-
          Public Class ShowSliderValueAwesome

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MenuMainMenu.ShowSliderValueAwesome.updateText(System.Single)
      commentId: M:MenuMainMenu.ShowSliderValueAwesome.updateText(System.Single)
      language: CSharp
      name:
        CSharp: updateText(Single)
        VB: updateText(Single)
      nameWithType:
        CSharp: ShowSliderValueAwesome.updateText(Single)
        VB: ShowSliderValueAwesome.updateText(Single)
      qualifiedName:
        CSharp: MenuMainMenu.ShowSliderValueAwesome.updateText(System.Single)
        VB: MenuMainMenu.ShowSliderValueAwesome.updateText(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: MenuMainMenu
      source:
        id: updateText
        path: ''
        startLine: 3812
      syntax:
        content:
          CSharp: public void updateText(float value)
          VB: Public Sub updateText(value As Single)
        parameters:
        - id: value
          type: System.Single
      overload: MenuMainMenu.ShowSliderValueAwesome.updateText*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: MenuMainMenu.ShowSliderValueDifficulty
    commentId: T:MenuMainMenu.ShowSliderValueDifficulty
    language: CSharp
    name:
      CSharp: ShowSliderValueDifficulty
      VB: ShowSliderValueDifficulty
    nameWithType:
      CSharp: ShowSliderValueDifficulty
      VB: ShowSliderValueDifficulty
    qualifiedName:
      CSharp: MenuMainMenu.ShowSliderValueDifficulty
      VB: MenuMainMenu.ShowSliderValueDifficulty
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: MenuMainMenu
    source:
      id: ShowSliderValueDifficulty
      path: ''
      startLine: 3871
    summary: "\nAdds slider values to the difficulty slider.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ShowSliderValueDifficulty : MonoBehaviour'
        VB: >-
          Public Class ShowSliderValueDifficulty

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MenuMainMenu.ShowSliderValueDifficulty.updateText(System.Single)
      commentId: M:MenuMainMenu.ShowSliderValueDifficulty.updateText(System.Single)
      language: CSharp
      name:
        CSharp: updateText(Single)
        VB: updateText(Single)
      nameWithType:
        CSharp: ShowSliderValueDifficulty.updateText(Single)
        VB: ShowSliderValueDifficulty.updateText(Single)
      qualifiedName:
        CSharp: MenuMainMenu.ShowSliderValueDifficulty.updateText(System.Single)
        VB: MenuMainMenu.ShowSliderValueDifficulty.updateText(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: MenuMainMenu
      source:
        id: updateText
        path: ''
        startLine: 3881
      syntax:
        content:
          CSharp: public void updateText(float value)
          VB: Public Sub updateText(value As Single)
        parameters:
        - id: value
          type: System.Single
      overload: MenuMainMenu.ShowSliderValueDifficulty.updateText*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: MenuMainMenu.ShowSliderValueFloat
    commentId: T:MenuMainMenu.ShowSliderValueFloat
    language: CSharp
    name:
      CSharp: ShowSliderValueFloat
      VB: ShowSliderValueFloat
    nameWithType:
      CSharp: ShowSliderValueFloat
      VB: ShowSliderValueFloat
    qualifiedName:
      CSharp: MenuMainMenu.ShowSliderValueFloat
      VB: MenuMainMenu.ShowSliderValueFloat
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: MenuMainMenu
    source:
      id: ShowSliderValueFloat
      path: ''
      startLine: 3926
    summary: "\nShows float values on slider.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ShowSliderValueFloat : MonoBehaviour'
        VB: >-
          Public Class ShowSliderValueFloat

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MenuMainMenu.ShowSliderValueFloat.updateText(System.Single)
      commentId: M:MenuMainMenu.ShowSliderValueFloat.updateText(System.Single)
      language: CSharp
      name:
        CSharp: updateText(Single)
        VB: updateText(Single)
      nameWithType:
        CSharp: ShowSliderValueFloat.updateText(Single)
        VB: ShowSliderValueFloat.updateText(Single)
      qualifiedName:
        CSharp: MenuMainMenu.ShowSliderValueFloat.updateText(System.Single)
        VB: MenuMainMenu.ShowSliderValueFloat.updateText(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: MenuMainMenu
      source:
        id: updateText
        path: ''
        startLine: 3935
      syntax:
        content:
          CSharp: public void updateText(float value)
          VB: Public Sub updateText(value As Single)
        parameters:
        - id: value
          type: System.Single
      overload: MenuMainMenu.ShowSliderValueFloat.updateText*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: MenuMainMenu.ShowSliderValueInt
    commentId: T:MenuMainMenu.ShowSliderValueInt
    language: CSharp
    name:
      CSharp: ShowSliderValueInt
      VB: ShowSliderValueInt
    nameWithType:
      CSharp: ShowSliderValueInt
      VB: ShowSliderValueInt
    qualifiedName:
      CSharp: MenuMainMenu.ShowSliderValueInt
      VB: MenuMainMenu.ShowSliderValueInt
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: MenuMainMenu
    source:
      id: ShowSliderValueInt
      path: ''
      startLine: 3951
    summary: "\nShows int values on slider.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ShowSliderValueInt : MonoBehaviour'
        VB: >-
          Public Class ShowSliderValueInt

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MenuMainMenu.ShowSliderValueInt.updateText(System.Single)
      commentId: M:MenuMainMenu.ShowSliderValueInt.updateText(System.Single)
      language: CSharp
      name:
        CSharp: updateText(Single)
        VB: updateText(Single)
      nameWithType:
        CSharp: ShowSliderValueInt.updateText(Single)
        VB: ShowSliderValueInt.updateText(Single)
      qualifiedName:
        CSharp: MenuMainMenu.ShowSliderValueInt.updateText(System.Single)
        VB: MenuMainMenu.ShowSliderValueInt.updateText(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: MenuMainMenu
      source:
        id: updateText
        path: ''
        startLine: 3960
      syntax:
        content:
          CSharp: public void updateText(float value)
          VB: Public Sub updateText(value As Single)
        parameters:
        - id: value
          type: System.Single
      overload: MenuMainMenu.ShowSliderValueInt.updateText*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: MenuScoreMenu
  commentId: N:MenuScoreMenu
  language: CSharp
  name:
    CSharp: MenuScoreMenu
    VB: MenuScoreMenu
  nameWithType:
    CSharp: MenuScoreMenu
    VB: MenuScoreMenu
  qualifiedName:
    CSharp: MenuScoreMenu
    VB: MenuScoreMenu
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: MenuScoreMenu.HighscoreController
    commentId: T:MenuScoreMenu.HighscoreController
    language: CSharp
    name:
      CSharp: HighscoreController
      VB: HighscoreController
    nameWithType:
      CSharp: HighscoreController
      VB: HighscoreController
    qualifiedName:
      CSharp: MenuScoreMenu.HighscoreController
      VB: MenuScoreMenu.HighscoreController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: MenuScoreMenu
    source:
      id: HighscoreController
      path: ''
      startLine: 3981
    summary: "\nController for highscores.\nWrites and reads highscores files.Interpretes those files and creatings a ranking out of it.\nUsed in the scorescreen.\nThe 10 highest scores are saved. Adds the player&apos;s score in the correct spot, if high enough.\n"
    example: []
    syntax:
      content:
        CSharp: public class HighscoreController
        VB: Public Class HighscoreController
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MenuScoreMenu.HighscoreController.CurrentScore
      commentId: P:MenuScoreMenu.HighscoreController.CurrentScore
      language: CSharp
      name:
        CSharp: CurrentScore
        VB: CurrentScore
      nameWithType:
        CSharp: HighscoreController.CurrentScore
        VB: HighscoreController.CurrentScore
      qualifiedName:
        CSharp: MenuScoreMenu.HighscoreController.CurrentScore
        VB: MenuScoreMenu.HighscoreController.CurrentScore
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: MenuScoreMenu
      source:
        id: CurrentScore
        path: ''
        startLine: 3987
      syntax:
        content:
          CSharp: public HighscoreData CurrentScore { get; }
          VB: Public ReadOnly Property CurrentScore As HighscoreData
        parameters: []
        return:
          type: MenuScoreMenu.HighscoreData
      overload: MenuScoreMenu.HighscoreController.CurrentScore*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MenuScoreMenu.HighscoreController.getHighscores
      commentId: M:MenuScoreMenu.HighscoreController.getHighscores
      language: CSharp
      name:
        CSharp: getHighscores()
        VB: getHighscores()
      nameWithType:
        CSharp: HighscoreController.getHighscores()
        VB: HighscoreController.getHighscores()
      qualifiedName:
        CSharp: MenuScoreMenu.HighscoreController.getHighscores()
        VB: MenuScoreMenu.HighscoreController.getHighscores()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: MenuScoreMenu
      source:
        id: getHighscores
        path: ''
        startLine: 3989
      syntax:
        content:
          CSharp: public List<HighscoreData> getHighscores()
          VB: Public Function getHighscores As List(Of HighscoreData)
        return:
          type: System.Collections.Generic.List{MenuScoreMenu.HighscoreData}
      overload: MenuScoreMenu.HighscoreController.getHighscores*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MenuScoreMenu.HighscoreController.#ctor(System.Int32)
      commentId: M:MenuScoreMenu.HighscoreController.#ctor(System.Int32)
      language: CSharp
      name:
        CSharp: HighscoreController(Int32)
        VB: HighscoreController(Int32)
      nameWithType:
        CSharp: HighscoreController.HighscoreController(Int32)
        VB: HighscoreController.HighscoreController(Int32)
      qualifiedName:
        CSharp: MenuScoreMenu.HighscoreController.HighscoreController(System.Int32)
        VB: MenuScoreMenu.HighscoreController.HighscoreController(System.Int32)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: MenuScoreMenu
      source:
        id: .ctor
        path: ''
        startLine: 3991
      syntax:
        content:
          CSharp: public HighscoreController(int newScore)
          VB: Public Sub New(newScore As Integer)
        parameters:
        - id: newScore
          type: System.Int32
      overload: MenuScoreMenu.HighscoreController.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: MenuScoreMenu.HighscoreData
    commentId: T:MenuScoreMenu.HighscoreData
    language: CSharp
    name:
      CSharp: HighscoreData
      VB: HighscoreData
    nameWithType:
      CSharp: HighscoreData
      VB: HighscoreData
    qualifiedName:
      CSharp: MenuScoreMenu.HighscoreData
      VB: MenuScoreMenu.HighscoreData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: MenuScoreMenu
    source:
      id: HighscoreData
      path: ''
      startLine: 4069
    summary: "\nData container for highscores.\n"
    example: []
    syntax:
      content:
        CSharp: public class HighscoreData
        VB: Public Class HighscoreData
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MenuScoreMenu.HighscoreData.Score
      commentId: P:MenuScoreMenu.HighscoreData.Score
      language: CSharp
      name:
        CSharp: Score
        VB: Score
      nameWithType:
        CSharp: HighscoreData.Score
        VB: HighscoreData.Score
      qualifiedName:
        CSharp: MenuScoreMenu.HighscoreData.Score
        VB: MenuScoreMenu.HighscoreData.Score
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: MenuScoreMenu
      source:
        id: Score
        path: ''
        startLine: 4071
      syntax:
        content:
          CSharp: public int Score { get; set; }
          VB: Public Property Score As Integer
        parameters: []
        return:
          type: System.Int32
      overload: MenuScoreMenu.HighscoreData.Score*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: MenuScoreMenu.HighscoreData.Rank
      commentId: P:MenuScoreMenu.HighscoreData.Rank
      language: CSharp
      name:
        CSharp: Rank
        VB: Rank
      nameWithType:
        CSharp: HighscoreData.Rank
        VB: HighscoreData.Rank
      qualifiedName:
        CSharp: MenuScoreMenu.HighscoreData.Rank
        VB: MenuScoreMenu.HighscoreData.Rank
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: MenuScoreMenu
      source:
        id: Rank
        path: ''
        startLine: 4072
      syntax:
        content:
          CSharp: public int Rank { get; set; }
          VB: Public Property Rank As Integer
        parameters: []
        return:
          type: System.Int32
      overload: MenuScoreMenu.HighscoreData.Rank*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: MenuScoreMenu.ScoreMenu
    commentId: T:MenuScoreMenu.ScoreMenu
    language: CSharp
    name:
      CSharp: ScoreMenu
      VB: ScoreMenu
    nameWithType:
      CSharp: ScoreMenu
      VB: ScoreMenu
    qualifiedName:
      CSharp: MenuScoreMenu.ScoreMenu
      VB: MenuScoreMenu.ScoreMenu
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: MenuScoreMenu
    source:
      id: ScoreMenu
      path: ''
      startLine: 4089
    summary: "\nScore Menu UI script, showing the player&apos;s score data and the highscore.\nAlso triggers resettings of player data and score tracker values for the next song to be played.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ScoreMenu : MonoBehaviour'
        VB: >-
          Public Class ScoreMenu

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MenuScoreMenu.ScoreMenu.headlineText
      commentId: F:MenuScoreMenu.ScoreMenu.headlineText
      language: CSharp
      name:
        CSharp: headlineText
        VB: headlineText
      nameWithType:
        CSharp: ScoreMenu.headlineText
        VB: ScoreMenu.headlineText
      qualifiedName:
        CSharp: MenuScoreMenu.ScoreMenu.headlineText
        VB: MenuScoreMenu.ScoreMenu.headlineText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: MenuScoreMenu
      source:
        id: headlineText
        path: ''
        startLine: 4091
      syntax:
        content:
          CSharp: public TextMeshProUGUI headlineText
          VB: Public headlineText As TextMeshProUGUI
        return:
          type: TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MenuScoreMenu.ScoreMenu.hitsText
      commentId: F:MenuScoreMenu.ScoreMenu.hitsText
      language: CSharp
      name:
        CSharp: hitsText
        VB: hitsText
      nameWithType:
        CSharp: ScoreMenu.hitsText
        VB: ScoreMenu.hitsText
      qualifiedName:
        CSharp: MenuScoreMenu.ScoreMenu.hitsText
        VB: MenuScoreMenu.ScoreMenu.hitsText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: MenuScoreMenu
      source:
        id: hitsText
        path: ''
        startLine: 4092
      syntax:
        content:
          CSharp: public TextMeshProUGUI hitsText
          VB: Public hitsText As TextMeshProUGUI
        return:
          type: TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MenuScoreMenu.ScoreMenu.missesText
      commentId: F:MenuScoreMenu.ScoreMenu.missesText
      language: CSharp
      name:
        CSharp: missesText
        VB: missesText
      nameWithType:
        CSharp: ScoreMenu.missesText
        VB: ScoreMenu.missesText
      qualifiedName:
        CSharp: MenuScoreMenu.ScoreMenu.missesText
        VB: MenuScoreMenu.ScoreMenu.missesText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: MenuScoreMenu
      source:
        id: missesText
        path: ''
        startLine: 4093
      syntax:
        content:
          CSharp: public TextMeshProUGUI missesText
          VB: Public missesText As TextMeshProUGUI
        return:
          type: TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MenuScoreMenu.ScoreMenu.beatsText
      commentId: F:MenuScoreMenu.ScoreMenu.beatsText
      language: CSharp
      name:
        CSharp: beatsText
        VB: beatsText
      nameWithType:
        CSharp: ScoreMenu.beatsText
        VB: ScoreMenu.beatsText
      qualifiedName:
        CSharp: MenuScoreMenu.ScoreMenu.beatsText
        VB: MenuScoreMenu.ScoreMenu.beatsText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: MenuScoreMenu
      source:
        id: beatsText
        path: ''
        startLine: 4094
      syntax:
        content:
          CSharp: public TextMeshProUGUI beatsText
          VB: Public beatsText As TextMeshProUGUI
        return:
          type: TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MenuScoreMenu.ScoreMenu.averageComboText
      commentId: F:MenuScoreMenu.ScoreMenu.averageComboText
      language: CSharp
      name:
        CSharp: averageComboText
        VB: averageComboText
      nameWithType:
        CSharp: ScoreMenu.averageComboText
        VB: ScoreMenu.averageComboText
      qualifiedName:
        CSharp: MenuScoreMenu.ScoreMenu.averageComboText
        VB: MenuScoreMenu.ScoreMenu.averageComboText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: MenuScoreMenu
      source:
        id: averageComboText
        path: ''
        startLine: 4095
      syntax:
        content:
          CSharp: public TextMeshProUGUI averageComboText
          VB: Public averageComboText As TextMeshProUGUI
        return:
          type: TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MenuScoreMenu.ScoreMenu.scoreText
      commentId: F:MenuScoreMenu.ScoreMenu.scoreText
      language: CSharp
      name:
        CSharp: scoreText
        VB: scoreText
      nameWithType:
        CSharp: ScoreMenu.scoreText
        VB: ScoreMenu.scoreText
      qualifiedName:
        CSharp: MenuScoreMenu.ScoreMenu.scoreText
        VB: MenuScoreMenu.ScoreMenu.scoreText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: MenuScoreMenu
      source:
        id: scoreText
        path: ''
        startLine: 4096
      syntax:
        content:
          CSharp: public TextMeshProUGUI scoreText
          VB: Public scoreText As TextMeshProUGUI
        return:
          type: TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MenuScoreMenu.ScoreMenu.rankText
      commentId: F:MenuScoreMenu.ScoreMenu.rankText
      language: CSharp
      name:
        CSharp: rankText
        VB: rankText
      nameWithType:
        CSharp: ScoreMenu.rankText
        VB: ScoreMenu.rankText
      qualifiedName:
        CSharp: MenuScoreMenu.ScoreMenu.rankText
        VB: MenuScoreMenu.ScoreMenu.rankText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: MenuScoreMenu
      source:
        id: rankText
        path: ''
        startLine: 4097
      syntax:
        content:
          CSharp: public TextMeshProUGUI rankText
          VB: Public rankText As TextMeshProUGUI
        return:
          type: TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MenuScoreMenu.ScoreMenu.highscoreText
      commentId: F:MenuScoreMenu.ScoreMenu.highscoreText
      language: CSharp
      name:
        CSharp: highscoreText
        VB: highscoreText
      nameWithType:
        CSharp: ScoreMenu.highscoreText
        VB: ScoreMenu.highscoreText
      qualifiedName:
        CSharp: MenuScoreMenu.ScoreMenu.highscoreText
        VB: MenuScoreMenu.ScoreMenu.highscoreText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: MenuScoreMenu
      source:
        id: highscoreText
        path: ''
        startLine: 4098
      syntax:
        content:
          CSharp: public TextMeshProUGUI highscoreText
          VB: Public highscoreText As TextMeshProUGUI
        return:
          type: TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MenuScoreMenu.ScoreMenu.clickReturnToMain
      commentId: M:MenuScoreMenu.ScoreMenu.clickReturnToMain
      language: CSharp
      name:
        CSharp: clickReturnToMain()
        VB: clickReturnToMain()
      nameWithType:
        CSharp: ScoreMenu.clickReturnToMain()
        VB: ScoreMenu.clickReturnToMain()
      qualifiedName:
        CSharp: MenuScoreMenu.ScoreMenu.clickReturnToMain()
        VB: MenuScoreMenu.ScoreMenu.clickReturnToMain()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: MenuScoreMenu
      source:
        id: clickReturnToMain
        path: ''
        startLine: 4142
      syntax:
        content:
          CSharp: public void clickReturnToMain()
          VB: Public Sub clickReturnToMain
      overload: MenuScoreMenu.ScoreMenu.clickReturnToMain*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Test
  commentId: N:Test
  language: CSharp
  name:
    CSharp: Test
    VB: Test
  nameWithType:
    CSharp: Test
    VB: Test
  qualifiedName:
    CSharp: Test
    VB: Test
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Test.FastGameAudioLoadingStart
    commentId: T:Test.FastGameAudioLoadingStart
    language: CSharp
    name:
      CSharp: FastGameAudioLoadingStart
      VB: FastGameAudioLoadingStart
    nameWithType:
      CSharp: FastGameAudioLoadingStart
      VB: FastGameAudioLoadingStart
    qualifiedName:
      CSharp: Test.FastGameAudioLoadingStart
      VB: Test.FastGameAudioLoadingStart
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Test
    source:
      id: FastGameAudioLoadingStart
      path: ''
      startLine: 4161
    summary: "\nHelper script used in the &apos;FastGame&apos; scene.Used for development purposes only.\nSome settings are set to make the developer&apos;s life easier and the audio loading is\ntriggered immediately, without going to the menu screen.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class FastGameAudioLoadingStart : MonoBehaviour'
        VB: >-
          Public Class FastGameAudioLoadingStart

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Test.FastGameAudioLoadingStart.loader
      commentId: F:Test.FastGameAudioLoadingStart.loader
      language: CSharp
      name:
        CSharp: loader
        VB: loader
      nameWithType:
        CSharp: FastGameAudioLoadingStart.loader
        VB: FastGameAudioLoadingStart.loader
      qualifiedName:
        CSharp: Test.FastGameAudioLoadingStart.loader
        VB: Test.FastGameAudioLoadingStart.loader
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Test
      source:
        id: loader
        path: ''
        startLine: 4163
      syntax:
        content:
          CSharp: public GameObject loader
          VB: Public loader As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Test.FastGameAudioLoadingStart.Start
      commentId: M:Test.FastGameAudioLoadingStart.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: FastGameAudioLoadingStart.Start()
        VB: FastGameAudioLoadingStart.Start()
      qualifiedName:
        CSharp: Test.FastGameAudioLoadingStart.Start()
        VB: Test.FastGameAudioLoadingStart.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Test
      source:
        id: Start
        path: ''
        startLine: 4165
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: Test.FastGameAudioLoadingStart.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Test.JsonSceneTest
    commentId: T:Test.JsonSceneTest
    language: CSharp
    name:
      CSharp: JsonSceneTest
      VB: JsonSceneTest
    nameWithType:
      CSharp: JsonSceneTest
      VB: JsonSceneTest
    qualifiedName:
      CSharp: Test.JsonSceneTest
      VB: Test.JsonSceneTest
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Test
    source:
      id: JsonSceneTest
      path: ''
      startLine: 4194
    summary: "\nThis was used in a test scene, just to quickly test out whether the parsing of a json mapping worked correctly,\nas there was quite some debugging necessary.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class JsonSceneTest : MonoBehaviour'
        VB: >-
          Public Class JsonSceneTest

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Test.SabreTest
    commentId: T:Test.SabreTest
    language: CSharp
    name:
      CSharp: SabreTest
      VB: SabreTest
    nameWithType:
      CSharp: SabreTest
      VB: SabreTest
    qualifiedName:
      CSharp: Test.SabreTest
      VB: Test.SabreTest
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Test
    source:
      id: SabreTest
      path: ''
      startLine: 4215
    summary: "\nThis spawns a bunch of random notes that can be used in a Saber Test Scene, to evaluate the cutting and slicing functionality.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SabreTest : MonoBehaviour'
        VB: >-
          Public Class SabreTest

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Test.SabreTest.leftTimedBlock
      commentId: F:Test.SabreTest.leftTimedBlock
      language: CSharp
      name:
        CSharp: leftTimedBlock
        VB: leftTimedBlock
      nameWithType:
        CSharp: SabreTest.leftTimedBlock
        VB: SabreTest.leftTimedBlock
      qualifiedName:
        CSharp: Test.SabreTest.leftTimedBlock
        VB: Test.SabreTest.leftTimedBlock
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Test
      source:
        id: leftTimedBlock
        path: ''
        startLine: 4217
      syntax:
        content:
          CSharp: public GameObject leftTimedBlock
          VB: Public leftTimedBlock As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Test.SabreTest.rightTimedBlock
      commentId: F:Test.SabreTest.rightTimedBlock
      language: CSharp
      name:
        CSharp: rightTimedBlock
        VB: rightTimedBlock
      nameWithType:
        CSharp: SabreTest.rightTimedBlock
        VB: SabreTest.rightTimedBlock
      qualifiedName:
        CSharp: Test.SabreTest.rightTimedBlock
        VB: Test.SabreTest.rightTimedBlock
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Test
      source:
        id: rightTimedBlock
        path: ''
        startLine: 4218
      syntax:
        content:
          CSharp: public GameObject rightTimedBlock
          VB: Public rightTimedBlock As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: TestOldDeprecatedStuff
  commentId: N:TestOldDeprecatedStuff
  language: CSharp
  name:
    CSharp: TestOldDeprecatedStuff
    VB: TestOldDeprecatedStuff
  nameWithType:
    CSharp: TestOldDeprecatedStuff
    VB: TestOldDeprecatedStuff
  qualifiedName:
    CSharp: TestOldDeprecatedStuff
    VB: TestOldDeprecatedStuff
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: TestOldDeprecatedStuff.PLogarithmUtils
    commentId: T:TestOldDeprecatedStuff.PLogarithmUtils
    language: CSharp
    name:
      CSharp: PLogarithmUtils
      VB: PLogarithmUtils
    nameWithType:
      CSharp: PLogarithmUtils
      VB: PLogarithmUtils
    qualifiedName:
      CSharp: TestOldDeprecatedStuff.PLogarithmUtils
      VB: TestOldDeprecatedStuff.PLogarithmUtils
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TestOldDeprecatedStuff
    source:
      id: PLogarithmUtils
      path: ''
      startLine: 4280
    summary: "\nThis is a Util class for logarithmic calculation that I wrote when I decided to use logarithmic scaling when\ncreating the frequency ranges for the analyzer bands.Decided that wasn&apos;t nessecary after all, so it&apos;s now unused.\n"
    example: []
    syntax:
      content:
        CSharp: public static class PLogarithmUtils
        VB: Public Module PLogarithmUtils
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: TestOldDeprecatedStuff.PLogarithmUtils.LinSpace(System.Double,System.Double,System.Int32,System.Boolean)
      commentId: M:TestOldDeprecatedStuff.PLogarithmUtils.LinSpace(System.Double,System.Double,System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: LinSpace(Double, Double, Int32, Boolean)
        VB: LinSpace(Double, Double, Int32, Boolean)
      nameWithType:
        CSharp: PLogarithmUtils.LinSpace(Double, Double, Int32, Boolean)
        VB: PLogarithmUtils.LinSpace(Double, Double, Int32, Boolean)
      qualifiedName:
        CSharp: TestOldDeprecatedStuff.PLogarithmUtils.LinSpace(System.Double, System.Double, System.Int32, System.Boolean)
        VB: TestOldDeprecatedStuff.PLogarithmUtils.LinSpace(System.Double, System.Double, System.Int32, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TestOldDeprecatedStuff
      source:
        id: LinSpace
        path: ''
        startLine: 4292
      syntax:
        content:
          CSharp: public static IEnumerable<double> LinSpace(double start, double stop, int num, bool endpoint = true)
          VB: Public Shared Function LinSpace(start As Double, stop As Double, num As Integer, endpoint As Boolean = True) As IEnumerable(Of Double)
        parameters:
        - id: start
          type: System.Double
        - id: stop
          type: System.Double
        - id: num
          type: System.Int32
        - id: endpoint
          type: System.Boolean
        return:
          type: System.Collections.Generic.IEnumerable{System.Double}
      overload: TestOldDeprecatedStuff.PLogarithmUtils.LinSpace*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: TestOldDeprecatedStuff.PLogarithmUtils.LogSpace(System.Double,System.Double,System.Int32,System.Boolean,System.Double)
      commentId: M:TestOldDeprecatedStuff.PLogarithmUtils.LogSpace(System.Double,System.Double,System.Int32,System.Boolean,System.Double)
      language: CSharp
      name:
        CSharp: LogSpace(Double, Double, Int32, Boolean, Double)
        VB: LogSpace(Double, Double, Int32, Boolean, Double)
      nameWithType:
        CSharp: PLogarithmUtils.LogSpace(Double, Double, Int32, Boolean, Double)
        VB: PLogarithmUtils.LogSpace(Double, Double, Int32, Boolean, Double)
      qualifiedName:
        CSharp: TestOldDeprecatedStuff.PLogarithmUtils.LogSpace(System.Double, System.Double, System.Int32, System.Boolean, System.Double)
        VB: TestOldDeprecatedStuff.PLogarithmUtils.LogSpace(System.Double, System.Double, System.Int32, System.Boolean, System.Double)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TestOldDeprecatedStuff
      source:
        id: LogSpace
        path: ''
        startLine: 4319
      syntax:
        content:
          CSharp: public static IEnumerable<double> LogSpace(double start, double stop, int num, bool endpoint = true, double numericBase = 10)
          VB: Public Shared Function LogSpace(start As Double, stop As Double, num As Integer, endpoint As Boolean = True, numericBase As Double = 10) As IEnumerable(Of Double)
        parameters:
        - id: start
          type: System.Double
        - id: stop
          type: System.Double
        - id: num
          type: System.Int32
        - id: endpoint
          type: System.Boolean
        - id: numericBase
          type: System.Double
        return:
          type: System.Collections.Generic.IEnumerable{System.Double}
      overload: TestOldDeprecatedStuff.PLogarithmUtils.LogSpace*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: TestOldDeprecatedStuff.PPostAudioAnalyzer
    commentId: T:TestOldDeprecatedStuff.PPostAudioAnalyzer
    language: CSharp
    name:
      CSharp: PPostAudioAnalyzer
      VB: PPostAudioAnalyzer
    nameWithType:
      CSharp: PPostAudioAnalyzer
      VB: PPostAudioAnalyzer
    qualifiedName:
      CSharp: TestOldDeprecatedStuff.PPostAudioAnalyzer
      VB: TestOldDeprecatedStuff.PPostAudioAnalyzer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TestOldDeprecatedStuff
    source:
      id: PPostAudioAnalyzer
      path: ''
      startLine: 4336
    summary: "\nOld Post Audio Analyzer. Not used anymore. Wasn&apos;t good.\n"
    example: []
    syntax:
      content:
        CSharp: public class PPostAudioAnalyzer
        VB: Public Class PPostAudioAnalyzer
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TestOldDeprecatedStuff.PPostAudioAnalyzer.#ctor(System.Collections.Generic.List{AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig})
      commentId: M:TestOldDeprecatedStuff.PPostAudioAnalyzer.#ctor(System.Collections.Generic.List{AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig})
      language: CSharp
      name:
        CSharp: PPostAudioAnalyzer(List<AnalyzedSpectrumConfig>)
        VB: PPostAudioAnalyzer(List(Of AnalyzedSpectrumConfig))
      nameWithType:
        CSharp: PPostAudioAnalyzer.PPostAudioAnalyzer(List<AnalyzedSpectrumConfig>)
        VB: PPostAudioAnalyzer.PPostAudioAnalyzer(List(Of AnalyzedSpectrumConfig))
      qualifiedName:
        CSharp: TestOldDeprecatedStuff.PPostAudioAnalyzer.PPostAudioAnalyzer(System.Collections.Generic.List<AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig>)
        VB: TestOldDeprecatedStuff.PPostAudioAnalyzer.PPostAudioAnalyzer(System.Collections.Generic.List(Of AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig))
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: TestOldDeprecatedStuff
      source:
        id: .ctor
        path: ''
        startLine: 4340
      syntax:
        content:
          CSharp: public PPostAudioAnalyzer(List<AnalyzedSpectrumConfig> spectrumDataList)
          VB: Public Sub New(spectrumDataList As List(Of AnalyzedSpectrumConfig))
        parameters:
        - id: spectrumDataList
          type: System.Collections.Generic.List{AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig}
      overload: TestOldDeprecatedStuff.PPostAudioAnalyzer.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: TestPlotDemo
  commentId: N:TestPlotDemo
  language: CSharp
  name:
    CSharp: TestPlotDemo
    VB: TestPlotDemo
  nameWithType:
    CSharp: TestPlotDemo
    VB: TestPlotDemo
  qualifiedName:
    CSharp: TestPlotDemo
    VB: TestPlotDemo
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: TestPlotDemo.PlotDemoAudioAnalyzerController
    commentId: T:TestPlotDemo.PlotDemoAudioAnalyzerController
    language: CSharp
    name:
      CSharp: PlotDemoAudioAnalyzerController
      VB: PlotDemoAudioAnalyzerController
    nameWithType:
      CSharp: PlotDemoAudioAnalyzerController
      VB: PlotDemoAudioAnalyzerController
    qualifiedName:
      CSharp: TestPlotDemo.PlotDemoAudioAnalyzerController
      VB: TestPlotDemo.PlotDemoAudioAnalyzerController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TestPlotDemo
    source:
      id: PlotDemoAudioAnalyzerController
      path: ''
      startLine: 4519
    summary: "\nAudio analysis controller for a test scene, that is not needed anymore.\nThat scene was needed to visualize the audio analysis when developing it.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class PlotDemoAudioAnalyzerController : MonoBehaviour'
        VB: >-
          Public Class PlotDemoAudioAnalyzerController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: TestPlotDemo.SpectrumPlotter
    commentId: T:TestPlotDemo.SpectrumPlotter
    language: CSharp
    name:
      CSharp: SpectrumPlotter
      VB: SpectrumPlotter
    nameWithType:
      CSharp: SpectrumPlotter
      VB: SpectrumPlotter
    qualifiedName:
      CSharp: TestPlotDemo.SpectrumPlotter
      VB: TestPlotDemo.SpectrumPlotter
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TestPlotDemo
    source:
      id: SpectrumPlotter
      path: ''
      startLine: 4566
    summary: "\nA sort of plotting component for a test scene, that is not needed anymore.\nThat scene was needed to visualize the audio analysis when developing it.\nBasically what this does is to spawn a bunch of small cubes from the generated\naudio data and visualize the peaks and flux/threshold levels while the song is playing.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SpectrumPlotter : MonoBehaviour'
        VB: >-
          Public Class SpectrumPlotter

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TestPlotDemo.SpectrumPlotter.SHOW_PRUNED
      commentId: F:TestPlotDemo.SpectrumPlotter.SHOW_PRUNED
      language: CSharp
      name:
        CSharp: SHOW_PRUNED
        VB: SHOW_PRUNED
      nameWithType:
        CSharp: SpectrumPlotter.SHOW_PRUNED
        VB: SpectrumPlotter.SHOW_PRUNED
      qualifiedName:
        CSharp: TestPlotDemo.SpectrumPlotter.SHOW_PRUNED
        VB: TestPlotDemo.SpectrumPlotter.SHOW_PRUNED
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TestPlotDemo
      source:
        id: SHOW_PRUNED
        path: ''
        startLine: 4568
      syntax:
        content:
          CSharp: public const string SHOW_PRUNED = "SHOW_PRUNED"
          VB: Public Const SHOW_PRUNED As String = "SHOW_PRUNED"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TestPlotDemo.SpectrumPlotter.SHOW_PEAKS
      commentId: F:TestPlotDemo.SpectrumPlotter.SHOW_PEAKS
      language: CSharp
      name:
        CSharp: SHOW_PEAKS
        VB: SHOW_PEAKS
      nameWithType:
        CSharp: SpectrumPlotter.SHOW_PEAKS
        VB: SpectrumPlotter.SHOW_PEAKS
      qualifiedName:
        CSharp: TestPlotDemo.SpectrumPlotter.SHOW_PEAKS
        VB: TestPlotDemo.SpectrumPlotter.SHOW_PEAKS
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TestPlotDemo
      source:
        id: SHOW_PEAKS
        path: ''
        startLine: 4569
      syntax:
        content:
          CSharp: public const string SHOW_PEAKS = "SHOW_PEAKS"
          VB: Public Const SHOW_PEAKS As String = "SHOW_PEAKS"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TestPlotDemo.SpectrumPlotter.pointPrefab
      commentId: F:TestPlotDemo.SpectrumPlotter.pointPrefab
      language: CSharp
      name:
        CSharp: pointPrefab
        VB: pointPrefab
      nameWithType:
        CSharp: SpectrumPlotter.pointPrefab
        VB: SpectrumPlotter.pointPrefab
      qualifiedName:
        CSharp: TestPlotDemo.SpectrumPlotter.pointPrefab
        VB: TestPlotDemo.SpectrumPlotter.pointPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TestPlotDemo
      source:
        id: pointPrefab
        path: ''
        startLine: 4571
      syntax:
        content:
          CSharp: public GameObject pointPrefab
          VB: Public pointPrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TestPlotDemo.SpectrumPlotter.basePoint
      commentId: F:TestPlotDemo.SpectrumPlotter.basePoint
      language: CSharp
      name:
        CSharp: basePoint
        VB: basePoint
      nameWithType:
        CSharp: SpectrumPlotter.basePoint
        VB: SpectrumPlotter.basePoint
      qualifiedName:
        CSharp: TestPlotDemo.SpectrumPlotter.basePoint
        VB: TestPlotDemo.SpectrumPlotter.basePoint
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TestPlotDemo
      source:
        id: basePoint
        path: ''
        startLine: 4572
      syntax:
        content:
          CSharp: public GameObject basePoint
          VB: Public basePoint As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TestPlotDemo.SpectrumPlotter.setDataAndStart(System.Collections.Generic.List{AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig},System.String)
      commentId: M:TestPlotDemo.SpectrumPlotter.setDataAndStart(System.Collections.Generic.List{AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig},System.String)
      language: CSharp
      name:
        CSharp: setDataAndStart(List<AnalyzedSpectrumConfig>, String)
        VB: setDataAndStart(List(Of AnalyzedSpectrumConfig), String)
      nameWithType:
        CSharp: SpectrumPlotter.setDataAndStart(List<AnalyzedSpectrumConfig>, String)
        VB: SpectrumPlotter.setDataAndStart(List(Of AnalyzedSpectrumConfig), String)
      qualifiedName:
        CSharp: TestPlotDemo.SpectrumPlotter.setDataAndStart(System.Collections.Generic.List<AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig>, System.String)
        VB: TestPlotDemo.SpectrumPlotter.setDataAndStart(System.Collections.Generic.List(Of AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig), System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TestPlotDemo
      source:
        id: setDataAndStart
        path: ''
        startLine: 4599
      syntax:
        content:
          CSharp: public void setDataAndStart(List<AnalyzedSpectrumConfig> spectrumDataList, string type)
          VB: Public Sub setDataAndStart(spectrumDataList As List(Of AnalyzedSpectrumConfig), type As String)
        parameters:
        - id: spectrumDataList
          type: System.Collections.Generic.List{AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig}
        - id: type
          type: System.String
      overload: TestPlotDemo.SpectrumPlotter.setDataAndStart*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
references:
  AudioSource:
    name:
      CSharp:
      - id: AudioSource
        name: AudioSource
        nameWithType: AudioSource
        qualifiedName: AudioSource
        isExternal: true
      VB:
      - id: AudioSource
        name: AudioSource
        nameWithType: AudioSource
        qualifiedName: AudioSource
        isExternal: true
    isDefinition: true
    commentId: '!:AudioSource'
  Audio.AudioController.processAudioData*:
    name:
      CSharp:
      - id: Audio.AudioController.processAudioData*
        name: processAudioData
        nameWithType: AudioController.processAudioData
        qualifiedName: Audio.AudioController.processAudioData
      VB:
      - id: Audio.AudioController.processAudioData*
        name: processAudioData
        nameWithType: AudioController.processAudioData
        qualifiedName: Audio.AudioController.processAudioData
    isDefinition: true
    commentId: Overload:Audio.AudioController.processAudioData
  Audio.AudioController:
    name:
      CSharp:
      - id: Audio.AudioController
        name: AudioController
        nameWithType: AudioController
        qualifiedName: Audio.AudioController
      VB:
      - id: Audio.AudioController
        name: AudioController
        nameWithType: AudioController
        qualifiedName: Audio.AudioController
    isDefinition: true
    commentId: T:Audio.AudioController
  Audio:
    name:
      CSharp:
      - name: Audio
        nameWithType: Audio
        qualifiedName: Audio
      VB:
      - name: Audio
        nameWithType: Audio
        qualifiedName: Audio
    isDefinition: true
    commentId: N:Audio
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.List{Audio.BeatMappingConfigs.EventConfig}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Audio.BeatMappingConfigs.EventConfig
        name: EventConfig
        nameWithType: EventConfig
        qualifiedName: Audio.BeatMappingConfigs.EventConfig
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Audio.BeatMappingConfigs.EventConfig
        name: EventConfig
        nameWithType: EventConfig
        qualifiedName: Audio.BeatMappingConfigs.EventConfig
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Audio.BeatMappingConfigs.EventConfig}
  Audio.BeatMappingConfigs.MappingContainer.EventData*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.MappingContainer.EventData*
        name: EventData
        nameWithType: MappingContainer.EventData
        qualifiedName: Audio.BeatMappingConfigs.MappingContainer.EventData
      VB:
      - id: Audio.BeatMappingConfigs.MappingContainer.EventData*
        name: EventData
        nameWithType: MappingContainer.EventData
        qualifiedName: Audio.BeatMappingConfigs.MappingContainer.EventData
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.MappingContainer.EventData
  System.Collections.Generic.List{Audio.BeatMappingConfigs.NoteConfig}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Audio.BeatMappingConfigs.NoteConfig
        name: NoteConfig
        nameWithType: NoteConfig
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Audio.BeatMappingConfigs.NoteConfig
        name: NoteConfig
        nameWithType: NoteConfig
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Audio.BeatMappingConfigs.NoteConfig}
  Audio.BeatMappingConfigs.MappingContainer.NoteData*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.MappingContainer.NoteData*
        name: NoteData
        nameWithType: MappingContainer.NoteData
        qualifiedName: Audio.BeatMappingConfigs.MappingContainer.NoteData
      VB:
      - id: Audio.BeatMappingConfigs.MappingContainer.NoteData*
        name: NoteData
        nameWithType: MappingContainer.NoteData
        qualifiedName: Audio.BeatMappingConfigs.MappingContainer.NoteData
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.MappingContainer.NoteData
  System.Collections.Generic.List{Audio.BeatMappingConfigs.ObstacleConfig}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Audio.BeatMappingConfigs.ObstacleConfig
        name: ObstacleConfig
        nameWithType: ObstacleConfig
        qualifiedName: Audio.BeatMappingConfigs.ObstacleConfig
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Audio.BeatMappingConfigs.ObstacleConfig
        name: ObstacleConfig
        nameWithType: ObstacleConfig
        qualifiedName: Audio.BeatMappingConfigs.ObstacleConfig
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Audio.BeatMappingConfigs.ObstacleConfig}
  Audio.BeatMappingConfigs.MappingContainer.ObstacleData*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.MappingContainer.ObstacleData*
        name: ObstacleData
        nameWithType: MappingContainer.ObstacleData
        qualifiedName: Audio.BeatMappingConfigs.MappingContainer.ObstacleData
      VB:
      - id: Audio.BeatMappingConfigs.MappingContainer.ObstacleData*
        name: ObstacleData
        nameWithType: MappingContainer.ObstacleData
        qualifiedName: Audio.BeatMappingConfigs.MappingContainer.ObstacleData
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.MappingContainer.ObstacleData
  System.Collections.Generic.List{Audio.BeatMappingConfigs.BookmarkConfig}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Audio.BeatMappingConfigs.BookmarkConfig
        name: BookmarkConfig
        nameWithType: BookmarkConfig
        qualifiedName: Audio.BeatMappingConfigs.BookmarkConfig
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Audio.BeatMappingConfigs.BookmarkConfig
        name: BookmarkConfig
        nameWithType: BookmarkConfig
        qualifiedName: Audio.BeatMappingConfigs.BookmarkConfig
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Audio.BeatMappingConfigs.BookmarkConfig}
  Audio.BeatMappingConfigs.MappingContainer.BookmarkData*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.MappingContainer.BookmarkData*
        name: BookmarkData
        nameWithType: MappingContainer.BookmarkData
        qualifiedName: Audio.BeatMappingConfigs.MappingContainer.BookmarkData
      VB:
      - id: Audio.BeatMappingConfigs.MappingContainer.BookmarkData*
        name: BookmarkData
        nameWithType: MappingContainer.BookmarkData
        qualifiedName: Audio.BeatMappingConfigs.MappingContainer.BookmarkData
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.MappingContainer.BookmarkData
  Audio.BeatMappingConfigs:
    name:
      CSharp:
      - name: Audio.BeatMappingConfigs
        nameWithType: Audio.BeatMappingConfigs
        qualifiedName: Audio.BeatMappingConfigs
      VB:
      - name: Audio.BeatMappingConfigs
        nameWithType: Audio.BeatMappingConfigs
        qualifiedName: Audio.BeatMappingConfigs
    isDefinition: true
    commentId: N:Audio.BeatMappingConfigs
  Audio.BeatMappingConfigs.MappingInfo:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.MappingInfo
        name: MappingInfo
        nameWithType: MappingInfo
        qualifiedName: Audio.BeatMappingConfigs.MappingInfo
      VB:
      - id: Audio.BeatMappingConfigs.MappingInfo
        name: MappingInfo
        nameWithType: MappingInfo
        qualifiedName: Audio.BeatMappingConfigs.MappingInfo
    isDefinition: true
    parent: Audio.BeatMappingConfigs
    commentId: T:Audio.BeatMappingConfigs.MappingInfo
  Audio.BeatMappingConfigs.MappingContainer.MappingInfo*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.MappingContainer.MappingInfo*
        name: MappingInfo
        nameWithType: MappingContainer.MappingInfo
        qualifiedName: Audio.BeatMappingConfigs.MappingContainer.MappingInfo
      VB:
      - id: Audio.BeatMappingConfigs.MappingContainer.MappingInfo*
        name: MappingInfo
        nameWithType: MappingContainer.MappingInfo
        qualifiedName: Audio.BeatMappingConfigs.MappingContainer.MappingInfo
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.MappingContainer.MappingInfo
  Audio.BeatMappingConfigs.MappingContainer.sortMappings*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.MappingContainer.sortMappings*
        name: sortMappings
        nameWithType: MappingContainer.sortMappings
        qualifiedName: Audio.BeatMappingConfigs.MappingContainer.sortMappings
      VB:
      - id: Audio.BeatMappingConfigs.MappingContainer.sortMappings*
        name: sortMappings
        nameWithType: MappingContainer.sortMappings
        qualifiedName: Audio.BeatMappingConfigs.MappingContainer.sortMappings
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.MappingContainer.sortMappings
  Audio.BeatMappingConfigs.MappingContainer:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.MappingContainer
        name: MappingContainer
        nameWithType: MappingContainer
        qualifiedName: Audio.BeatMappingConfigs.MappingContainer
      VB:
      - id: Audio.BeatMappingConfigs.MappingContainer
        name: MappingContainer
        nameWithType: MappingContainer
        qualifiedName: Audio.BeatMappingConfigs.MappingContainer
    isDefinition: true
    parent: Audio.BeatMappingConfigs
    commentId: T:Audio.BeatMappingConfigs.MappingContainer
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  Audio.BeatMappingConfigs.EventConfig.Time*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.EventConfig.Time*
        name: Time
        nameWithType: EventConfig.Time
        qualifiedName: Audio.BeatMappingConfigs.EventConfig.Time
      VB:
      - id: Audio.BeatMappingConfigs.EventConfig.Time*
        name: Time
        nameWithType: EventConfig.Time
        qualifiedName: Audio.BeatMappingConfigs.EventConfig.Time
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.EventConfig.Time
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  Audio.BeatMappingConfigs.EventConfig.Type*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.EventConfig.Type*
        name: Type
        nameWithType: EventConfig.Type
        qualifiedName: Audio.BeatMappingConfigs.EventConfig.Type
      VB:
      - id: Audio.BeatMappingConfigs.EventConfig.Type*
        name: Type
        nameWithType: EventConfig.Type
        qualifiedName: Audio.BeatMappingConfigs.EventConfig.Type
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.EventConfig.Type
  Audio.BeatMappingConfigs.EventConfig.Value*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.EventConfig.Value*
        name: Value
        nameWithType: EventConfig.Value
        qualifiedName: Audio.BeatMappingConfigs.EventConfig.Value
      VB:
      - id: Audio.BeatMappingConfigs.EventConfig.Value*
        name: Value
        nameWithType: EventConfig.Value
        qualifiedName: Audio.BeatMappingConfigs.EventConfig.Value
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.EventConfig.Value
  Audio.BeatMappingConfigs.EventConfig:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.EventConfig
        name: EventConfig
        nameWithType: EventConfig
        qualifiedName: Audio.BeatMappingConfigs.EventConfig
      VB:
      - id: Audio.BeatMappingConfigs.EventConfig
        name: EventConfig
        nameWithType: EventConfig
        qualifiedName: Audio.BeatMappingConfigs.EventConfig
    isDefinition: true
    parent: Audio.BeatMappingConfigs
    commentId: T:Audio.BeatMappingConfigs.EventConfig
  Audio.BeatMappingConfigs.EventConfig.TYPES:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.EventConfig.TYPES
        name: EventConfig.TYPES
        nameWithType: EventConfig.TYPES
        qualifiedName: Audio.BeatMappingConfigs.EventConfig.TYPES
      VB:
      - id: Audio.BeatMappingConfigs.EventConfig.TYPES
        name: EventConfig.TYPES
        nameWithType: EventConfig.TYPES
        qualifiedName: Audio.BeatMappingConfigs.EventConfig.TYPES
    isDefinition: true
    parent: Audio.BeatMappingConfigs
    commentId: T:Audio.BeatMappingConfigs.EventConfig.TYPES
  Audio.BeatMappingConfigs.NoteConfig.Time*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.NoteConfig.Time*
        name: Time
        nameWithType: NoteConfig.Time
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig.Time
      VB:
      - id: Audio.BeatMappingConfigs.NoteConfig.Time*
        name: Time
        nameWithType: NoteConfig.Time
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig.Time
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.NoteConfig.Time
  Audio.BeatMappingConfigs.NoteConfig.LineIndex*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.NoteConfig.LineIndex*
        name: LineIndex
        nameWithType: NoteConfig.LineIndex
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig.LineIndex
      VB:
      - id: Audio.BeatMappingConfigs.NoteConfig.LineIndex*
        name: LineIndex
        nameWithType: NoteConfig.LineIndex
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig.LineIndex
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.NoteConfig.LineIndex
  Audio.BeatMappingConfigs.NoteConfig.LineLayer*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.NoteConfig.LineLayer*
        name: LineLayer
        nameWithType: NoteConfig.LineLayer
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig.LineLayer
      VB:
      - id: Audio.BeatMappingConfigs.NoteConfig.LineLayer*
        name: LineLayer
        nameWithType: NoteConfig.LineLayer
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig.LineLayer
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.NoteConfig.LineLayer
  Audio.BeatMappingConfigs.NoteConfig.Type*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.NoteConfig.Type*
        name: Type
        nameWithType: NoteConfig.Type
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig.Type
      VB:
      - id: Audio.BeatMappingConfigs.NoteConfig.Type*
        name: Type
        nameWithType: NoteConfig.Type
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig.Type
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.NoteConfig.Type
  Audio.BeatMappingConfigs.NoteConfig.CutDirection*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.NoteConfig.CutDirection*
        name: CutDirection
        nameWithType: NoteConfig.CutDirection
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig.CutDirection
      VB:
      - id: Audio.BeatMappingConfigs.NoteConfig.CutDirection*
        name: CutDirection
        nameWithType: NoteConfig.CutDirection
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig.CutDirection
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.NoteConfig.CutDirection
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  Audio.BeatMappingConfigs.NoteConfig.BelongsToDoubleNote*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.NoteConfig.BelongsToDoubleNote*
        name: BelongsToDoubleNote
        nameWithType: NoteConfig.BelongsToDoubleNote
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig.BelongsToDoubleNote
      VB:
      - id: Audio.BeatMappingConfigs.NoteConfig.BelongsToDoubleNote*
        name: BelongsToDoubleNote
        nameWithType: NoteConfig.BelongsToDoubleNote
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig.BelongsToDoubleNote
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.NoteConfig.BelongsToDoubleNote
  Audio.BeatMappingConfigs.NoteConfig.ObstacleLineIndex*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.NoteConfig.ObstacleLineIndex*
        name: ObstacleLineIndex
        nameWithType: NoteConfig.ObstacleLineIndex
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig.ObstacleLineIndex
      VB:
      - id: Audio.BeatMappingConfigs.NoteConfig.ObstacleLineIndex*
        name: ObstacleLineIndex
        nameWithType: NoteConfig.ObstacleLineIndex
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig.ObstacleLineIndex
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.NoteConfig.ObstacleLineIndex
  Audio.BeatMappingConfigs.NoteConfig:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.NoteConfig
        name: NoteConfig
        nameWithType: NoteConfig
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig
      VB:
      - id: Audio.BeatMappingConfigs.NoteConfig
        name: NoteConfig
        nameWithType: NoteConfig
        qualifiedName: Audio.BeatMappingConfigs.NoteConfig
    isDefinition: true
    commentId: T:Audio.BeatMappingConfigs.NoteConfig
  Audio.BeatMappingConfigs.ObstacleConfig.Time*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.ObstacleConfig.Time*
        name: Time
        nameWithType: ObstacleConfig.Time
        qualifiedName: Audio.BeatMappingConfigs.ObstacleConfig.Time
      VB:
      - id: Audio.BeatMappingConfigs.ObstacleConfig.Time*
        name: Time
        nameWithType: ObstacleConfig.Time
        qualifiedName: Audio.BeatMappingConfigs.ObstacleConfig.Time
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.ObstacleConfig.Time
  Audio.BeatMappingConfigs.ObstacleConfig.LineIndex*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.ObstacleConfig.LineIndex*
        name: LineIndex
        nameWithType: ObstacleConfig.LineIndex
        qualifiedName: Audio.BeatMappingConfigs.ObstacleConfig.LineIndex
      VB:
      - id: Audio.BeatMappingConfigs.ObstacleConfig.LineIndex*
        name: LineIndex
        nameWithType: ObstacleConfig.LineIndex
        qualifiedName: Audio.BeatMappingConfigs.ObstacleConfig.LineIndex
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.ObstacleConfig.LineIndex
  Audio.BeatMappingConfigs.ObstacleConfig.Type*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.ObstacleConfig.Type*
        name: Type
        nameWithType: ObstacleConfig.Type
        qualifiedName: Audio.BeatMappingConfigs.ObstacleConfig.Type
      VB:
      - id: Audio.BeatMappingConfigs.ObstacleConfig.Type*
        name: Type
        nameWithType: ObstacleConfig.Type
        qualifiedName: Audio.BeatMappingConfigs.ObstacleConfig.Type
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.ObstacleConfig.Type
  Audio.BeatMappingConfigs.ObstacleConfig.Duration*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.ObstacleConfig.Duration*
        name: Duration
        nameWithType: ObstacleConfig.Duration
        qualifiedName: Audio.BeatMappingConfigs.ObstacleConfig.Duration
      VB:
      - id: Audio.BeatMappingConfigs.ObstacleConfig.Duration*
        name: Duration
        nameWithType: ObstacleConfig.Duration
        qualifiedName: Audio.BeatMappingConfigs.ObstacleConfig.Duration
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.ObstacleConfig.Duration
  Audio.BeatMappingConfigs.ObstacleConfig.Width*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.ObstacleConfig.Width*
        name: Width
        nameWithType: ObstacleConfig.Width
        qualifiedName: Audio.BeatMappingConfigs.ObstacleConfig.Width
      VB:
      - id: Audio.BeatMappingConfigs.ObstacleConfig.Width*
        name: Width
        nameWithType: ObstacleConfig.Width
        qualifiedName: Audio.BeatMappingConfigs.ObstacleConfig.Width
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.ObstacleConfig.Width
  Audio.BeatMappingConfigs.ObstacleConfig:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.ObstacleConfig
        name: ObstacleConfig
        nameWithType: ObstacleConfig
        qualifiedName: Audio.BeatMappingConfigs.ObstacleConfig
      VB:
      - id: Audio.BeatMappingConfigs.ObstacleConfig
        name: ObstacleConfig
        nameWithType: ObstacleConfig
        qualifiedName: Audio.BeatMappingConfigs.ObstacleConfig
    isDefinition: true
    commentId: T:Audio.BeatMappingConfigs.ObstacleConfig
  Audio.BeatMappingConfigs.BookmarkConfig.Time*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.BookmarkConfig.Time*
        name: Time
        nameWithType: BookmarkConfig.Time
        qualifiedName: Audio.BeatMappingConfigs.BookmarkConfig.Time
      VB:
      - id: Audio.BeatMappingConfigs.BookmarkConfig.Time*
        name: Time
        nameWithType: BookmarkConfig.Time
        qualifiedName: Audio.BeatMappingConfigs.BookmarkConfig.Time
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.BookmarkConfig.Time
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  Audio.BeatMappingConfigs.BookmarkConfig.Name*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.BookmarkConfig.Name*
        name: Name
        nameWithType: BookmarkConfig.Name
        qualifiedName: Audio.BeatMappingConfigs.BookmarkConfig.Name
      VB:
      - id: Audio.BeatMappingConfigs.BookmarkConfig.Name*
        name: Name
        nameWithType: BookmarkConfig.Name
        qualifiedName: Audio.BeatMappingConfigs.BookmarkConfig.Name
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.BookmarkConfig.Name
  Audio.BeatMappingConfigs.BookmarkConfig:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.BookmarkConfig
        name: BookmarkConfig
        nameWithType: BookmarkConfig
        qualifiedName: Audio.BeatMappingConfigs.BookmarkConfig
      VB:
      - id: Audio.BeatMappingConfigs.BookmarkConfig
        name: BookmarkConfig
        nameWithType: BookmarkConfig
        qualifiedName: Audio.BeatMappingConfigs.BookmarkConfig
    isDefinition: true
    commentId: T:Audio.BeatMappingConfigs.BookmarkConfig
  Audio.BeatMappingConfigs.MappingInfo.Bpm*:
    name:
      CSharp:
      - id: Audio.BeatMappingConfigs.MappingInfo.Bpm*
        name: Bpm
        nameWithType: MappingInfo.Bpm
        qualifiedName: Audio.BeatMappingConfigs.MappingInfo.Bpm
      VB:
      - id: Audio.BeatMappingConfigs.MappingInfo.Bpm*
        name: Bpm
        nameWithType: MappingInfo.Bpm
        qualifiedName: Audio.BeatMappingConfigs.MappingInfo.Bpm
    isDefinition: true
    commentId: Overload:Audio.BeatMappingConfigs.MappingInfo.Bpm
  AudioAnalysis.AudioAnalyzerConfigs:
    name:
      CSharp:
      - name: AudioAnalysis.AudioAnalyzerConfigs
        nameWithType: AudioAnalysis.AudioAnalyzerConfigs
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs
      VB:
      - name: AudioAnalysis.AudioAnalyzerConfigs
        nameWithType: AudioAnalysis.AudioAnalyzerConfigs
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs
    isDefinition: true
    commentId: N:AudioAnalysis.AudioAnalyzerConfigs
  AudioAnalysis.AudioAnalyzerConfigs.TrackConfig:
    name:
      CSharp:
      - id: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig
        name: TrackConfig
        nameWithType: TrackConfig
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig
      VB:
      - id: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig
        name: TrackConfig
        nameWithType: TrackConfig
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig
    isDefinition: true
    parent: AudioAnalysis.AudioAnalyzerConfigs
    commentId: T:AudioAnalysis.AudioAnalyzerConfigs.TrackConfig
  System.Collections.Generic.List{AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig
        name: AnalyzedSpectrumConfig
        nameWithType: AnalyzedSpectrumConfig
        qualifiedName: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig
        name: AnalyzedSpectrumConfig
        nameWithType: AnalyzedSpectrumConfig
        qualifiedName: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig}
  AudioAnalysis.AudioAnalyzerHandler.#ctor*:
    name:
      CSharp:
      - id: AudioAnalysis.AudioAnalyzerHandler.#ctor*
        name: AudioAnalyzerHandler
        nameWithType: AudioAnalyzerHandler.AudioAnalyzerHandler
        qualifiedName: AudioAnalysis.AudioAnalyzerHandler.AudioAnalyzerHandler
      VB:
      - id: AudioAnalysis.AudioAnalyzerHandler.#ctor*
        name: AudioAnalyzerHandler
        nameWithType: AudioAnalyzerHandler.AudioAnalyzerHandler
        qualifiedName: AudioAnalysis.AudioAnalyzerHandler.AudioAnalyzerHandler
    isDefinition: true
    commentId: Overload:AudioAnalysis.AudioAnalyzerHandler.#ctor
  AudioAnalysis.AudioAnalyzerHandler.getAnalyzedSpectrumData*:
    name:
      CSharp:
      - id: AudioAnalysis.AudioAnalyzerHandler.getAnalyzedSpectrumData*
        name: getAnalyzedSpectrumData
        nameWithType: AudioAnalyzerHandler.getAnalyzedSpectrumData
        qualifiedName: AudioAnalysis.AudioAnalyzerHandler.getAnalyzedSpectrumData
      VB:
      - id: AudioAnalysis.AudioAnalyzerHandler.getAnalyzedSpectrumData*
        name: getAnalyzedSpectrumData
        nameWithType: AudioAnalyzerHandler.getAnalyzedSpectrumData
        qualifiedName: AudioAnalysis.AudioAnalyzerHandler.getAnalyzedSpectrumData
    isDefinition: true
    commentId: Overload:AudioAnalysis.AudioAnalyzerHandler.getAnalyzedSpectrumData
  AudioAnalysis.AudioAnalyzerHandler.getBeatMappingContainer*:
    name:
      CSharp:
      - id: AudioAnalysis.AudioAnalyzerHandler.getBeatMappingContainer*
        name: getBeatMappingContainer
        nameWithType: AudioAnalyzerHandler.getBeatMappingContainer
        qualifiedName: AudioAnalysis.AudioAnalyzerHandler.getBeatMappingContainer
      VB:
      - id: AudioAnalysis.AudioAnalyzerHandler.getBeatMappingContainer*
        name: getBeatMappingContainer
        nameWithType: AudioAnalyzerHandler.getBeatMappingContainer
        qualifiedName: AudioAnalysis.AudioAnalyzerHandler.getBeatMappingContainer
    isDefinition: true
    commentId: Overload:AudioAnalysis.AudioAnalyzerHandler.getBeatMappingContainer
  Action:
    name:
      CSharp:
      - id: Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      VB:
      - id: Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
    isDefinition: true
  AudioAnalysis.AudioAnalyzerHandler.analyzeSpectrumsList*:
    name:
      CSharp:
      - id: AudioAnalysis.AudioAnalyzerHandler.analyzeSpectrumsList*
        name: analyzeSpectrumsList
        nameWithType: AudioAnalyzerHandler.analyzeSpectrumsList
        qualifiedName: AudioAnalysis.AudioAnalyzerHandler.analyzeSpectrumsList
      VB:
      - id: AudioAnalysis.AudioAnalyzerHandler.analyzeSpectrumsList*
        name: analyzeSpectrumsList
        nameWithType: AudioAnalyzerHandler.analyzeSpectrumsList
        qualifiedName: AudioAnalysis.AudioAnalyzerHandler.analyzeSpectrumsList
    isDefinition: true
    commentId: Overload:AudioAnalysis.AudioAnalyzerHandler.analyzeSpectrumsList
  AudioAnalysis.AudioAnalyzerHandler:
    name:
      CSharp:
      - id: AudioAnalysis.AudioAnalyzerHandler
        name: AudioAnalyzerHandler
        nameWithType: AudioAnalyzerHandler
        qualifiedName: AudioAnalysis.AudioAnalyzerHandler
      VB:
      - id: AudioAnalysis.AudioAnalyzerHandler
        name: AudioAnalyzerHandler
        nameWithType: AudioAnalyzerHandler
        qualifiedName: AudioAnalysis.AudioAnalyzerHandler
    isDefinition: true
    commentId: T:AudioAnalysis.AudioAnalyzerHandler
  System.Collections.Generic.List{AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig
        name: AnalyzerBandConfig
        nameWithType: AnalyzerBandConfig
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig
        name: AnalyzerBandConfig
        nameWithType: AnalyzerBandConfig
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig}
  AudioAnalysis.PeakDetector.#ctor*:
    name:
      CSharp:
      - id: AudioAnalysis.PeakDetector.#ctor*
        name: PeakDetector
        nameWithType: PeakDetector.PeakDetector
        qualifiedName: AudioAnalysis.PeakDetector.PeakDetector
      VB:
      - id: AudioAnalysis.PeakDetector.#ctor*
        name: PeakDetector
        nameWithType: PeakDetector.PeakDetector
        qualifiedName: AudioAnalysis.PeakDetector.PeakDetector
    isDefinition: true
    commentId: Overload:AudioAnalysis.PeakDetector.#ctor
  AudioAnalysis.PeakDetector.analyze*:
    name:
      CSharp:
      - id: AudioAnalysis.PeakDetector.analyze*
        name: analyze
        nameWithType: PeakDetector.analyze
        qualifiedName: AudioAnalysis.PeakDetector.analyze
      VB:
      - id: AudioAnalysis.PeakDetector.analyze*
        name: analyze
        nameWithType: PeakDetector.analyze
        qualifiedName: AudioAnalysis.PeakDetector.analyze
    isDefinition: true
    commentId: Overload:AudioAnalysis.PeakDetector.analyze
  AudioAnalysis.PeakDetector.getSpectrumDataList*:
    name:
      CSharp:
      - id: AudioAnalysis.PeakDetector.getSpectrumDataList*
        name: getSpectrumDataList
        nameWithType: PeakDetector.getSpectrumDataList
        qualifiedName: AudioAnalysis.PeakDetector.getSpectrumDataList
      VB:
      - id: AudioAnalysis.PeakDetector.getSpectrumDataList*
        name: getSpectrumDataList
        nameWithType: PeakDetector.getSpectrumDataList
        qualifiedName: AudioAnalysis.PeakDetector.getSpectrumDataList
    isDefinition: true
    commentId: Overload:AudioAnalysis.PeakDetector.getSpectrumDataList
  AudioAnalysis.PeakDetector.getBeatMappingContainer*:
    name:
      CSharp:
      - id: AudioAnalysis.PeakDetector.getBeatMappingContainer*
        name: getBeatMappingContainer
        nameWithType: PeakDetector.getBeatMappingContainer
        qualifiedName: AudioAnalysis.PeakDetector.getBeatMappingContainer
      VB:
      - id: AudioAnalysis.PeakDetector.getBeatMappingContainer*
        name: getBeatMappingContainer
        nameWithType: PeakDetector.getBeatMappingContainer
        qualifiedName: AudioAnalysis.PeakDetector.getBeatMappingContainer
    isDefinition: true
    commentId: Overload:AudioAnalysis.PeakDetector.getBeatMappingContainer
  AudioAnalysis.PeakDetector:
    name:
      CSharp:
      - id: AudioAnalysis.PeakDetector
        name: PeakDetector
        nameWithType: PeakDetector
        qualifiedName: AudioAnalysis.PeakDetector
      VB:
      - id: AudioAnalysis.PeakDetector
        name: PeakDetector
        nameWithType: PeakDetector
        qualifiedName: AudioAnalysis.PeakDetector
    isDefinition: true
    commentId: T:AudioAnalysis.PeakDetector
  AudioAnalysis.PostOnsetAudioAnalyzer.#ctor*:
    name:
      CSharp:
      - id: AudioAnalysis.PostOnsetAudioAnalyzer.#ctor*
        name: PostOnsetAudioAnalyzer
        nameWithType: PostOnsetAudioAnalyzer.PostOnsetAudioAnalyzer
        qualifiedName: AudioAnalysis.PostOnsetAudioAnalyzer.PostOnsetAudioAnalyzer
      VB:
      - id: AudioAnalysis.PostOnsetAudioAnalyzer.#ctor*
        name: PostOnsetAudioAnalyzer
        nameWithType: PostOnsetAudioAnalyzer.PostOnsetAudioAnalyzer
        qualifiedName: AudioAnalysis.PostOnsetAudioAnalyzer.PostOnsetAudioAnalyzer
    isDefinition: true
    commentId: Overload:AudioAnalysis.PostOnsetAudioAnalyzer.#ctor
  AudioAnalysis.PostOnsetAudioAnalyzer.analyze*:
    name:
      CSharp:
      - id: AudioAnalysis.PostOnsetAudioAnalyzer.analyze*
        name: analyze
        nameWithType: PostOnsetAudioAnalyzer.analyze
        qualifiedName: AudioAnalysis.PostOnsetAudioAnalyzer.analyze
      VB:
      - id: AudioAnalysis.PostOnsetAudioAnalyzer.analyze*
        name: analyze
        nameWithType: PostOnsetAudioAnalyzer.analyze
        qualifiedName: AudioAnalysis.PostOnsetAudioAnalyzer.analyze
    isDefinition: true
    commentId: Overload:AudioAnalysis.PostOnsetAudioAnalyzer.analyze
  AudioAnalysis.PostOnsetAudioAnalyzer.getBeatMappingContainer*:
    name:
      CSharp:
      - id: AudioAnalysis.PostOnsetAudioAnalyzer.getBeatMappingContainer*
        name: getBeatMappingContainer
        nameWithType: PostOnsetAudioAnalyzer.getBeatMappingContainer
        qualifiedName: AudioAnalysis.PostOnsetAudioAnalyzer.getBeatMappingContainer
      VB:
      - id: AudioAnalysis.PostOnsetAudioAnalyzer.getBeatMappingContainer*
        name: getBeatMappingContainer
        nameWithType: PostOnsetAudioAnalyzer.getBeatMappingContainer
        qualifiedName: AudioAnalysis.PostOnsetAudioAnalyzer.getBeatMappingContainer
    isDefinition: true
    commentId: Overload:AudioAnalysis.PostOnsetAudioAnalyzer.getBeatMappingContainer
  AudioAnalysis.PostOnsetAudioAnalyzer:
    name:
      CSharp:
      - id: AudioAnalysis.PostOnsetAudioAnalyzer
        name: PostOnsetAudioAnalyzer
        nameWithType: PostOnsetAudioAnalyzer
        qualifiedName: AudioAnalysis.PostOnsetAudioAnalyzer
      VB:
      - id: AudioAnalysis.PostOnsetAudioAnalyzer
        name: PostOnsetAudioAnalyzer
        nameWithType: PostOnsetAudioAnalyzer
        qualifiedName: AudioAnalysis.PostOnsetAudioAnalyzer
    isDefinition: true
    commentId: T:AudioAnalysis.PostOnsetAudioAnalyzer
  AudioAnalysis.SpectrumAnalysisUtils.shouldBeExtraPeak*:
    name:
      CSharp:
      - id: AudioAnalysis.SpectrumAnalysisUtils.shouldBeExtraPeak*
        name: shouldBeExtraPeak
        nameWithType: SpectrumAnalysisUtils.shouldBeExtraPeak
        qualifiedName: AudioAnalysis.SpectrumAnalysisUtils.shouldBeExtraPeak
      VB:
      - id: AudioAnalysis.SpectrumAnalysisUtils.shouldBeExtraPeak*
        name: shouldBeExtraPeak
        nameWithType: SpectrumAnalysisUtils.shouldBeExtraPeak
        qualifiedName: AudioAnalysis.SpectrumAnalysisUtils.shouldBeExtraPeak
    isDefinition: true
    commentId: Overload:AudioAnalysis.SpectrumAnalysisUtils.shouldBeExtraPeak
  AudioAnalysis.SpectrumAnalysisUtils.sampleIsCloser*:
    name:
      CSharp:
      - id: AudioAnalysis.SpectrumAnalysisUtils.sampleIsCloser*
        name: sampleIsCloser
        nameWithType: SpectrumAnalysisUtils.sampleIsCloser
        qualifiedName: AudioAnalysis.SpectrumAnalysisUtils.sampleIsCloser
      VB:
      - id: AudioAnalysis.SpectrumAnalysisUtils.sampleIsCloser*
        name: sampleIsCloser
        nameWithType: SpectrumAnalysisUtils.sampleIsCloser
        qualifiedName: AudioAnalysis.SpectrumAnalysisUtils.sampleIsCloser
    isDefinition: true
    commentId: Overload:AudioAnalysis.SpectrumAnalysisUtils.sampleIsCloser
  AudioAnalysis.SpectrumAnalysisUtils:
    name:
      CSharp:
      - id: AudioAnalysis.SpectrumAnalysisUtils
        name: SpectrumAnalysisUtils
        nameWithType: SpectrumAnalysisUtils
        qualifiedName: AudioAnalysis.SpectrumAnalysisUtils
      VB:
      - id: AudioAnalysis.SpectrumAnalysisUtils
        name: SpectrumAnalysisUtils
        nameWithType: SpectrumAnalysisUtils
        qualifiedName: AudioAnalysis.SpectrumAnalysisUtils
    isDefinition: true
    commentId: T:AudioAnalysis.SpectrumAnalysisUtils
  AudioAnalysis:
    name:
      CSharp:
      - name: AudioAnalysis
        nameWithType: AudioAnalysis
        qualifiedName: AudioAnalysis
      VB:
      - name: AudioAnalysis
        nameWithType: AudioAnalysis
        qualifiedName: AudioAnalysis
    isDefinition: true
    commentId: N:AudioAnalysis
  AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.#ctor*:
    name:
      CSharp:
      - id: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.#ctor*
        name: TrackConfig
        nameWithType: TrackConfig.TrackConfig
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.TrackConfig
      VB:
      - id: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.#ctor*
        name: TrackConfig
        nameWithType: TrackConfig.TrackConfig
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.TrackConfig
    isDefinition: true
    commentId: Overload:AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.#ctor
  AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.AnalyzerConfigs*:
    name:
      CSharp:
      - id: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.AnalyzerConfigs*
        name: AnalyzerConfigs
        nameWithType: TrackConfig.AnalyzerConfigs
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.AnalyzerConfigs
      VB:
      - id: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.AnalyzerConfigs*
        name: AnalyzerConfigs
        nameWithType: TrackConfig.AnalyzerConfigs
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.AnalyzerConfigs
    isDefinition: true
    commentId: Overload:AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.AnalyzerConfigs
  AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.Bands*:
    name:
      CSharp:
      - id: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.Bands*
        name: Bands
        nameWithType: TrackConfig.Bands
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.Bands
      VB:
      - id: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.Bands*
        name: Bands
        nameWithType: TrackConfig.Bands
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.Bands
    isDefinition: true
    commentId: Overload:AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.Bands
  AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.ClipSampleRate*:
    name:
      CSharp:
      - id: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.ClipSampleRate*
        name: ClipSampleRate
        nameWithType: TrackConfig.ClipSampleRate
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.ClipSampleRate
      VB:
      - id: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.ClipSampleRate*
        name: ClipSampleRate
        nameWithType: TrackConfig.ClipSampleRate
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.ClipSampleRate
    isDefinition: true
    commentId: Overload:AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.ClipSampleRate
  AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.TrackName*:
    name:
      CSharp:
      - id: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.TrackName*
        name: TrackName
        nameWithType: TrackConfig.TrackName
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.TrackName
      VB:
      - id: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.TrackName*
        name: TrackName
        nameWithType: TrackConfig.TrackName
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.TrackName
    isDefinition: true
    commentId: Overload:AudioAnalysis.AudioAnalyzerConfigs.TrackConfig.TrackName
  AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.Band*:
    name:
      CSharp:
      - id: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.Band*
        name: Band
        nameWithType: AnalyzerBandConfig.Band
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.Band
      VB:
      - id: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.Band*
        name: Band
        nameWithType: AnalyzerBandConfig.Band
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.Band
    isDefinition: true
    commentId: Overload:AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.Band
  AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartIndex*:
    name:
      CSharp:
      - id: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartIndex*
        name: StartIndex
        nameWithType: AnalyzerBandConfig.StartIndex
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartIndex
      VB:
      - id: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartIndex*
        name: StartIndex
        nameWithType: AnalyzerBandConfig.StartIndex
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartIndex
    isDefinition: true
    commentId: Overload:AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartIndex
  AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndIndex*:
    name:
      CSharp:
      - id: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndIndex*
        name: EndIndex
        nameWithType: AnalyzerBandConfig.EndIndex
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndIndex
      VB:
      - id: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndIndex*
        name: EndIndex
        nameWithType: AnalyzerBandConfig.EndIndex
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndIndex
    isDefinition: true
    commentId: Overload:AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndIndex
  AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.ThresholdSize*:
    name:
      CSharp:
      - id: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.ThresholdSize*
        name: ThresholdSize
        nameWithType: AnalyzerBandConfig.ThresholdSize
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.ThresholdSize
      VB:
      - id: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.ThresholdSize*
        name: ThresholdSize
        nameWithType: AnalyzerBandConfig.ThresholdSize
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.ThresholdSize
    isDefinition: true
    commentId: Overload:AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.ThresholdSize
  AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.BeatBlockCounter*:
    name:
      CSharp:
      - id: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.BeatBlockCounter*
        name: BeatBlockCounter
        nameWithType: AnalyzerBandConfig.BeatBlockCounter
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.BeatBlockCounter
      VB:
      - id: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.BeatBlockCounter*
        name: BeatBlockCounter
        nameWithType: AnalyzerBandConfig.BeatBlockCounter
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.BeatBlockCounter
    isDefinition: true
    commentId: Overload:AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.BeatBlockCounter
  AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartFrequency*:
    name:
      CSharp:
      - id: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartFrequency*
        name: StartFrequency
        nameWithType: AnalyzerBandConfig.StartFrequency
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartFrequency
      VB:
      - id: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartFrequency*
        name: StartFrequency
        nameWithType: AnalyzerBandConfig.StartFrequency
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartFrequency
    isDefinition: true
    commentId: Overload:AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.StartFrequency
  AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndFrequency*:
    name:
      CSharp:
      - id: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndFrequency*
        name: EndFrequency
        nameWithType: AnalyzerBandConfig.EndFrequency
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndFrequency
      VB:
      - id: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndFrequency*
        name: EndFrequency
        nameWithType: AnalyzerBandConfig.EndFrequency
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndFrequency
    isDefinition: true
    commentId: Overload:AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.EndFrequency
  AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.TresholdMult*:
    name:
      CSharp:
      - id: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.TresholdMult*
        name: TresholdMult
        nameWithType: AnalyzerBandConfig.TresholdMult
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.TresholdMult
      VB:
      - id: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.TresholdMult*
        name: TresholdMult
        nameWithType: AnalyzerBandConfig.TresholdMult
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.TresholdMult
    isDefinition: true
    commentId: Overload:AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig.TresholdMult
  AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig:
    name:
      CSharp:
      - id: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig
        name: AnalyzerBandConfig
        nameWithType: AnalyzerBandConfig
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig
      VB:
      - id: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig
        name: AnalyzerBandConfig
        nameWithType: AnalyzerBandConfig
        qualifiedName: AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig
    isDefinition: true
    commentId: T:AudioAnalysis.AudioAnalyzerConfigs.AnalyzerBandConfig
  System.Single[]:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Spectrum*:
    name:
      CSharp:
      - id: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Spectrum*
        name: Spectrum
        nameWithType: AnalyzedSpectrumConfig.Spectrum
        qualifiedName: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Spectrum
      VB:
      - id: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Spectrum*
        name: Spectrum
        nameWithType: AnalyzedSpectrumConfig.Spectrum
        qualifiedName: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Spectrum
    isDefinition: true
    commentId: Overload:AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Spectrum
  AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Time*:
    name:
      CSharp:
      - id: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Time*
        name: Time
        nameWithType: AnalyzedSpectrumConfig.Time
        qualifiedName: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Time
      VB:
      - id: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Time*
        name: Time
        nameWithType: AnalyzedSpectrumConfig.Time
        qualifiedName: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Time
    isDefinition: true
    commentId: Overload:AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.Time
  AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.HasPeak*:
    name:
      CSharp:
      - id: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.HasPeak*
        name: HasPeak
        nameWithType: AnalyzedSpectrumConfig.HasPeak
        qualifiedName: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.HasPeak
      VB:
      - id: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.HasPeak*
        name: HasPeak
        nameWithType: AnalyzedSpectrumConfig.HasPeak
        qualifiedName: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.HasPeak
    isDefinition: true
    commentId: Overload:AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.HasPeak
  System.Collections.Generic.List{System.Int32}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Int32}
  AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.PeakBands*:
    name:
      CSharp:
      - id: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.PeakBands*
        name: PeakBands
        nameWithType: AnalyzedSpectrumConfig.PeakBands
        qualifiedName: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.PeakBands
      VB:
      - id: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.PeakBands*
        name: PeakBands
        nameWithType: AnalyzedSpectrumConfig.PeakBands
        qualifiedName: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.PeakBands
    isDefinition: true
    commentId: Overload:AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.PeakBands
  System.Collections.Generic.List{AudioAnalysis.SpectrumConfigs.BeatConfig}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: AudioAnalysis.SpectrumConfigs.BeatConfig
        name: BeatConfig
        nameWithType: BeatConfig
        qualifiedName: AudioAnalysis.SpectrumConfigs.BeatConfig
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: AudioAnalysis.SpectrumConfigs.BeatConfig
        name: BeatConfig
        nameWithType: BeatConfig
        qualifiedName: AudioAnalysis.SpectrumConfigs.BeatConfig
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{AudioAnalysis.SpectrumConfigs.BeatConfig}
  AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.BandBeatData*:
    name:
      CSharp:
      - id: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.BandBeatData*
        name: BandBeatData
        nameWithType: AnalyzedSpectrumConfig.BandBeatData
        qualifiedName: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.BandBeatData
      VB:
      - id: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.BandBeatData*
        name: BandBeatData
        nameWithType: AnalyzedSpectrumConfig.BandBeatData
        qualifiedName: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.BandBeatData
    isDefinition: true
    commentId: Overload:AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig.BandBeatData
  AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig:
    name:
      CSharp:
      - id: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig
        name: AnalyzedSpectrumConfig
        nameWithType: AnalyzedSpectrumConfig
        qualifiedName: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig
      VB:
      - id: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig
        name: AnalyzedSpectrumConfig
        nameWithType: AnalyzedSpectrumConfig
        qualifiedName: AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig
    isDefinition: true
    commentId: T:AudioAnalysis.SpectrumConfigs.AnalyzedSpectrumConfig
  AudioAnalysis.SpectrumConfigs.BeatConfig.SpectralFlux*:
    name:
      CSharp:
      - id: AudioAnalysis.SpectrumConfigs.BeatConfig.SpectralFlux*
        name: SpectralFlux
        nameWithType: BeatConfig.SpectralFlux
        qualifiedName: AudioAnalysis.SpectrumConfigs.BeatConfig.SpectralFlux
      VB:
      - id: AudioAnalysis.SpectrumConfigs.BeatConfig.SpectralFlux*
        name: SpectralFlux
        nameWithType: BeatConfig.SpectralFlux
        qualifiedName: AudioAnalysis.SpectrumConfigs.BeatConfig.SpectralFlux
    isDefinition: true
    commentId: Overload:AudioAnalysis.SpectrumConfigs.BeatConfig.SpectralFlux
  AudioAnalysis.SpectrumConfigs.BeatConfig.Threshold*:
    name:
      CSharp:
      - id: AudioAnalysis.SpectrumConfigs.BeatConfig.Threshold*
        name: Threshold
        nameWithType: BeatConfig.Threshold
        qualifiedName: AudioAnalysis.SpectrumConfigs.BeatConfig.Threshold
      VB:
      - id: AudioAnalysis.SpectrumConfigs.BeatConfig.Threshold*
        name: Threshold
        nameWithType: BeatConfig.Threshold
        qualifiedName: AudioAnalysis.SpectrumConfigs.BeatConfig.Threshold
    isDefinition: true
    commentId: Overload:AudioAnalysis.SpectrumConfigs.BeatConfig.Threshold
  AudioAnalysis.SpectrumConfigs.BeatConfig.PrunedSpectralFlux*:
    name:
      CSharp:
      - id: AudioAnalysis.SpectrumConfigs.BeatConfig.PrunedSpectralFlux*
        name: PrunedSpectralFlux
        nameWithType: BeatConfig.PrunedSpectralFlux
        qualifiedName: AudioAnalysis.SpectrumConfigs.BeatConfig.PrunedSpectralFlux
      VB:
      - id: AudioAnalysis.SpectrumConfigs.BeatConfig.PrunedSpectralFlux*
        name: PrunedSpectralFlux
        nameWithType: BeatConfig.PrunedSpectralFlux
        qualifiedName: AudioAnalysis.SpectrumConfigs.BeatConfig.PrunedSpectralFlux
    isDefinition: true
    commentId: Overload:AudioAnalysis.SpectrumConfigs.BeatConfig.PrunedSpectralFlux
  AudioAnalysis.SpectrumConfigs.BeatConfig.Band*:
    name:
      CSharp:
      - id: AudioAnalysis.SpectrumConfigs.BeatConfig.Band*
        name: Band
        nameWithType: BeatConfig.Band
        qualifiedName: AudioAnalysis.SpectrumConfigs.BeatConfig.Band
      VB:
      - id: AudioAnalysis.SpectrumConfigs.BeatConfig.Band*
        name: Band
        nameWithType: BeatConfig.Band
        qualifiedName: AudioAnalysis.SpectrumConfigs.BeatConfig.Band
    isDefinition: true
    commentId: Overload:AudioAnalysis.SpectrumConfigs.BeatConfig.Band
  AudioAnalysis.SpectrumConfigs.BeatConfig.PeakBPM*:
    name:
      CSharp:
      - id: AudioAnalysis.SpectrumConfigs.BeatConfig.PeakBPM*
        name: PeakBPM
        nameWithType: BeatConfig.PeakBPM
        qualifiedName: AudioAnalysis.SpectrumConfigs.BeatConfig.PeakBPM
      VB:
      - id: AudioAnalysis.SpectrumConfigs.BeatConfig.PeakBPM*
        name: PeakBPM
        nameWithType: BeatConfig.PeakBPM
        qualifiedName: AudioAnalysis.SpectrumConfigs.BeatConfig.PeakBPM
    isDefinition: true
    commentId: Overload:AudioAnalysis.SpectrumConfigs.BeatConfig.PeakBPM
  AudioAnalysis.SpectrumConfigs.BeatConfig.IsPeak*:
    name:
      CSharp:
      - id: AudioAnalysis.SpectrumConfigs.BeatConfig.IsPeak*
        name: IsPeak
        nameWithType: BeatConfig.IsPeak
        qualifiedName: AudioAnalysis.SpectrumConfigs.BeatConfig.IsPeak
      VB:
      - id: AudioAnalysis.SpectrumConfigs.BeatConfig.IsPeak*
        name: IsPeak
        nameWithType: BeatConfig.IsPeak
        qualifiedName: AudioAnalysis.SpectrumConfigs.BeatConfig.IsPeak
    isDefinition: true
    commentId: Overload:AudioAnalysis.SpectrumConfigs.BeatConfig.IsPeak
  AudioAnalysis.SpectrumConfigs.BeatConfig:
    name:
      CSharp:
      - id: AudioAnalysis.SpectrumConfigs.BeatConfig
        name: BeatConfig
        nameWithType: BeatConfig
        qualifiedName: AudioAnalysis.SpectrumConfigs.BeatConfig
      VB:
      - id: AudioAnalysis.SpectrumConfigs.BeatConfig
        name: BeatConfig
        nameWithType: BeatConfig
        qualifiedName: AudioAnalysis.SpectrumConfigs.BeatConfig
    isDefinition: true
    commentId: T:AudioAnalysis.SpectrumConfigs.BeatConfig
  AudioAnalysis.SpectrumConfigs:
    name:
      CSharp:
      - name: AudioAnalysis.SpectrumConfigs
        nameWithType: AudioAnalysis.SpectrumConfigs
        qualifiedName: AudioAnalysis.SpectrumConfigs
      VB:
      - name: AudioAnalysis.SpectrumConfigs
        nameWithType: AudioAnalysis.SpectrumConfigs
        qualifiedName: AudioAnalysis.SpectrumConfigs
    isDefinition: true
    commentId: N:AudioAnalysis.SpectrumConfigs
  AudioClip:
    name:
      CSharp:
      - id: AudioClip
        name: AudioClip
        nameWithType: AudioClip
        qualifiedName: AudioClip
        isExternal: true
      VB:
      - id: AudioClip
        name: AudioClip
        nameWithType: AudioClip
        qualifiedName: AudioClip
        isExternal: true
    isDefinition: true
  AudioProviders.AudioSampleProvider.getSamples*:
    name:
      CSharp:
      - id: AudioProviders.AudioSampleProvider.getSamples*
        name: getSamples
        nameWithType: AudioSampleProvider.getSamples
        qualifiedName: AudioProviders.AudioSampleProvider.getSamples
      VB:
      - id: AudioProviders.AudioSampleProvider.getSamples*
        name: getSamples
        nameWithType: AudioSampleProvider.getSamples
        qualifiedName: AudioProviders.AudioSampleProvider.getSamples
    isDefinition: true
    commentId: Overload:AudioProviders.AudioSampleProvider.getSamples
  AudioProviders.AudioSampleProvider.getMonoSamples*:
    name:
      CSharp:
      - id: AudioProviders.AudioSampleProvider.getMonoSamples*
        name: getMonoSamples
        nameWithType: AudioSampleProvider.getMonoSamples
        qualifiedName: AudioProviders.AudioSampleProvider.getMonoSamples
      VB:
      - id: AudioProviders.AudioSampleProvider.getMonoSamples*
        name: getMonoSamples
        nameWithType: AudioSampleProvider.getMonoSamples
        qualifiedName: AudioProviders.AudioSampleProvider.getMonoSamples
    isDefinition: true
    commentId: Overload:AudioProviders.AudioSampleProvider.getMonoSamples
  AudioProviders.AudioSampleProvider:
    name:
      CSharp:
      - id: AudioProviders.AudioSampleProvider
        name: AudioSampleProvider
        nameWithType: AudioSampleProvider
        qualifiedName: AudioProviders.AudioSampleProvider
      VB:
      - id: AudioProviders.AudioSampleProvider
        name: AudioSampleProvider
        nameWithType: AudioSampleProvider
        qualifiedName: AudioProviders.AudioSampleProvider
    isDefinition: true
    commentId: T:AudioProviders.AudioSampleProvider
  AudioProviders.Mp3Loader.LoadMp3*:
    name:
      CSharp:
      - id: AudioProviders.Mp3Loader.LoadMp3*
        name: LoadMp3
        nameWithType: Mp3Loader.LoadMp3
        qualifiedName: AudioProviders.Mp3Loader.LoadMp3
      VB:
      - id: AudioProviders.Mp3Loader.LoadMp3*
        name: LoadMp3
        nameWithType: Mp3Loader.LoadMp3
        qualifiedName: AudioProviders.Mp3Loader.LoadMp3
    isDefinition: true
    commentId: Overload:AudioProviders.Mp3Loader.LoadMp3
  AudioProviders.Mp3Loader:
    name:
      CSharp:
      - id: AudioProviders.Mp3Loader
        name: Mp3Loader
        nameWithType: Mp3Loader
        qualifiedName: AudioProviders.Mp3Loader
      VB:
      - id: AudioProviders.Mp3Loader
        name: Mp3Loader
        nameWithType: Mp3Loader
        qualifiedName: AudioProviders.Mp3Loader
    isDefinition: true
    commentId: T:AudioProviders.Mp3Loader
  AudioProviders.SpectrumProvider.#ctor*:
    name:
      CSharp:
      - id: AudioProviders.SpectrumProvider.#ctor*
        name: SpectrumProvider
        nameWithType: SpectrumProvider.SpectrumProvider
        qualifiedName: AudioProviders.SpectrumProvider.SpectrumProvider
      VB:
      - id: AudioProviders.SpectrumProvider.#ctor*
        name: SpectrumProvider
        nameWithType: SpectrumProvider.SpectrumProvider
        qualifiedName: AudioProviders.SpectrumProvider.SpectrumProvider
    isDefinition: true
    commentId: Overload:AudioProviders.SpectrumProvider.#ctor
  System.Collections.Generic.List{System.Double[]}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Double[]}
  AudioProviders.SpectrumProvider.getSpectrums*:
    name:
      CSharp:
      - id: AudioProviders.SpectrumProvider.getSpectrums*
        name: getSpectrums
        nameWithType: SpectrumProvider.getSpectrums
        qualifiedName: AudioProviders.SpectrumProvider.getSpectrums
      VB:
      - id: AudioProviders.SpectrumProvider.getSpectrums*
        name: getSpectrums
        nameWithType: SpectrumProvider.getSpectrums
        qualifiedName: AudioProviders.SpectrumProvider.getSpectrums
    isDefinition: true
    commentId: Overload:AudioProviders.SpectrumProvider.getSpectrums
  AudioProviders.SpectrumProvider.getSpectrumConfigs*:
    name:
      CSharp:
      - id: AudioProviders.SpectrumProvider.getSpectrumConfigs*
        name: getSpectrumConfigs
        nameWithType: SpectrumProvider.getSpectrumConfigs
        qualifiedName: AudioProviders.SpectrumProvider.getSpectrumConfigs
      VB:
      - id: AudioProviders.SpectrumProvider.getSpectrumConfigs*
        name: getSpectrumConfigs
        nameWithType: SpectrumProvider.getSpectrumConfigs
        qualifiedName: AudioProviders.SpectrumProvider.getSpectrumConfigs
    isDefinition: true
    commentId: Overload:AudioProviders.SpectrumProvider.getSpectrumConfigs
  AudioProviders.SpectrumProvider:
    name:
      CSharp:
      - id: AudioProviders.SpectrumProvider
        name: SpectrumProvider
        nameWithType: SpectrumProvider
        qualifiedName: AudioProviders.SpectrumProvider
      VB:
      - id: AudioProviders.SpectrumProvider
        name: SpectrumProvider
        nameWithType: SpectrumProvider
        qualifiedName: AudioProviders.SpectrumProvider
    isDefinition: true
    commentId: T:AudioProviders.SpectrumProvider
  AudioProviders:
    name:
      CSharp:
      - name: AudioProviders
        nameWithType: AudioProviders
        qualifiedName: AudioProviders
      VB:
      - name: AudioProviders
        nameWithType: AudioProviders
        qualifiedName: AudioProviders
    isDefinition: true
    commentId: N:AudioProviders
  GameObject:
    name:
      CSharp:
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      VB:
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
    isDefinition: true
  Transform:
    name:
      CSharp:
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      VB:
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
    isDefinition: true
  LaserController:
    name:
      CSharp:
      - id: LaserController
        name: LaserController
        nameWithType: LaserController
        qualifiedName: LaserController
        isExternal: true
      VB:
      - id: LaserController
        name: LaserController
        nameWithType: LaserController
        qualifiedName: LaserController
        isExternal: true
    isDefinition: true
    commentId: '!:LaserController'
  SpinnerLightController:
    name:
      CSharp:
      - id: SpinnerLightController
        name: SpinnerLightController
        nameWithType: SpinnerLightController
        qualifiedName: SpinnerLightController
        isExternal: true
      VB:
      - id: SpinnerLightController
        name: SpinnerLightController
        nameWithType: SpinnerLightController
        qualifiedName: SpinnerLightController
        isExternal: true
    isDefinition: true
    commentId: '!:SpinnerLightController'
  FogController:
    name:
      CSharp:
      - id: FogController
        name: FogController
        nameWithType: FogController
        qualifiedName: FogController
        isExternal: true
      VB:
      - id: FogController
        name: FogController
        nameWithType: FogController
        qualifiedName: FogController
        isExternal: true
    isDefinition: true
    commentId: '!:FogController'
  Game.GameController:
    name:
      CSharp:
      - id: Game.GameController
        name: GameController
        nameWithType: GameController
        qualifiedName: Game.GameController
      VB:
      - id: Game.GameController
        name: GameController
        nameWithType: GameController
        qualifiedName: Game.GameController
    isDefinition: true
    commentId: T:Game.GameController
  Game:
    name:
      CSharp:
      - name: Game
        nameWithType: Game
        qualifiedName: Game
      VB:
      - name: Game
        nameWithType: Game
        qualifiedName: Game
    isDefinition: true
    commentId: N:Game
  MeshRenderer:
    name:
      CSharp:
      - id: MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
      VB:
      - id: MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
    isDefinition: true
    commentId: '!:MeshRenderer'
  GameEffects:
    name:
      CSharp:
      - name: GameEffects
        nameWithType: GameEffects
        qualifiedName: GameEffects
      VB:
      - name: GameEffects
        nameWithType: GameEffects
        qualifiedName: GameEffects
    isDefinition: true
    commentId: N:GameEffects
  GameEffects.VolumetricFogEffect:
    name:
      CSharp:
      - id: GameEffects.VolumetricFogEffect
        name: VolumetricFogEffect
        nameWithType: VolumetricFogEffect
        qualifiedName: GameEffects.VolumetricFogEffect
      VB:
      - id: GameEffects.VolumetricFogEffect
        name: VolumetricFogEffect
        nameWithType: VolumetricFogEffect
        qualifiedName: GameEffects.VolumetricFogEffect
    isDefinition: true
    parent: GameEffects
    commentId: T:GameEffects.VolumetricFogEffect
  GameEffects.FogController.redBlink*:
    name:
      CSharp:
      - id: GameEffects.FogController.redBlink*
        name: redBlink
        nameWithType: FogController.redBlink
        qualifiedName: GameEffects.FogController.redBlink
      VB:
      - id: GameEffects.FogController.redBlink*
        name: redBlink
        nameWithType: FogController.redBlink
        qualifiedName: GameEffects.FogController.redBlink
    isDefinition: true
    commentId: Overload:GameEffects.FogController.redBlink
  GameEffects.FogController.yellowBlink*:
    name:
      CSharp:
      - id: GameEffects.FogController.yellowBlink*
        name: yellowBlink
        nameWithType: FogController.yellowBlink
        qualifiedName: GameEffects.FogController.yellowBlink
      VB:
      - id: GameEffects.FogController.yellowBlink*
        name: yellowBlink
        nameWithType: FogController.yellowBlink
        qualifiedName: GameEffects.FogController.yellowBlink
    isDefinition: true
    commentId: Overload:GameEffects.FogController.yellowBlink
  GameEffects.FogController.greenBlink*:
    name:
      CSharp:
      - id: GameEffects.FogController.greenBlink*
        name: greenBlink
        nameWithType: FogController.greenBlink
        qualifiedName: GameEffects.FogController.greenBlink
      VB:
      - id: GameEffects.FogController.greenBlink*
        name: greenBlink
        nameWithType: FogController.greenBlink
        qualifiedName: GameEffects.FogController.greenBlink
    isDefinition: true
    commentId: Overload:GameEffects.FogController.greenBlink
  GameEffects.FogController.blackBlink*:
    name:
      CSharp:
      - id: GameEffects.FogController.blackBlink*
        name: blackBlink
        nameWithType: FogController.blackBlink
        qualifiedName: GameEffects.FogController.blackBlink
      VB:
      - id: GameEffects.FogController.blackBlink*
        name: blackBlink
        nameWithType: FogController.blackBlink
        qualifiedName: GameEffects.FogController.blackBlink
    isDefinition: true
    commentId: Overload:GameEffects.FogController.blackBlink
  GameEffects.FogController.blueBlink*:
    name:
      CSharp:
      - id: GameEffects.FogController.blueBlink*
        name: blueBlink
        nameWithType: FogController.blueBlink
        qualifiedName: GameEffects.FogController.blueBlink
      VB:
      - id: GameEffects.FogController.blueBlink*
        name: blueBlink
        nameWithType: FogController.blueBlink
        qualifiedName: GameEffects.FogController.blueBlink
    isDefinition: true
    commentId: Overload:GameEffects.FogController.blueBlink
  GameEffects.FogController:
    name:
      CSharp:
      - id: GameEffects.FogController
        name: FogController
        nameWithType: FogController
        qualifiedName: GameEffects.FogController
      VB:
      - id: GameEffects.FogController
        name: FogController
        nameWithType: FogController
        qualifiedName: GameEffects.FogController
    isDefinition: true
    parent: GameEffects
    commentId: T:GameEffects.FogController
  GameEffects.LaserController.setRandomAngularSpeed*:
    name:
      CSharp:
      - id: GameEffects.LaserController.setRandomAngularSpeed*
        name: setRandomAngularSpeed
        nameWithType: LaserController.setRandomAngularSpeed
        qualifiedName: GameEffects.LaserController.setRandomAngularSpeed
      VB:
      - id: GameEffects.LaserController.setRandomAngularSpeed*
        name: setRandomAngularSpeed
        nameWithType: LaserController.setRandomAngularSpeed
        qualifiedName: GameEffects.LaserController.setRandomAngularSpeed
    isDefinition: true
    commentId: Overload:GameEffects.LaserController.setRandomAngularSpeed
  GameEffects.LaserController.multAngularSpeed*:
    name:
      CSharp:
      - id: GameEffects.LaserController.multAngularSpeed*
        name: multAngularSpeed
        nameWithType: LaserController.multAngularSpeed
        qualifiedName: GameEffects.LaserController.multAngularSpeed
      VB:
      - id: GameEffects.LaserController.multAngularSpeed*
        name: multAngularSpeed
        nameWithType: LaserController.multAngularSpeed
        qualifiedName: GameEffects.LaserController.multAngularSpeed
    isDefinition: true
    commentId: Overload:GameEffects.LaserController.multAngularSpeed
  GameEffects.LaserController.setAbsoluteAngeularSpeed*:
    name:
      CSharp:
      - id: GameEffects.LaserController.setAbsoluteAngeularSpeed*
        name: setAbsoluteAngeularSpeed
        nameWithType: LaserController.setAbsoluteAngeularSpeed
        qualifiedName: GameEffects.LaserController.setAbsoluteAngeularSpeed
      VB:
      - id: GameEffects.LaserController.setAbsoluteAngeularSpeed*
        name: setAbsoluteAngeularSpeed
        nameWithType: LaserController.setAbsoluteAngeularSpeed
        qualifiedName: GameEffects.LaserController.setAbsoluteAngeularSpeed
    isDefinition: true
    commentId: Overload:GameEffects.LaserController.setAbsoluteAngeularSpeed
  GameEffects.LaserController.setRandomRotation*:
    name:
      CSharp:
      - id: GameEffects.LaserController.setRandomRotation*
        name: setRandomRotation
        nameWithType: LaserController.setRandomRotation
        qualifiedName: GameEffects.LaserController.setRandomRotation
      VB:
      - id: GameEffects.LaserController.setRandomRotation*
        name: setRandomRotation
        nameWithType: LaserController.setRandomRotation
        qualifiedName: GameEffects.LaserController.setRandomRotation
    isDefinition: true
    commentId: Overload:GameEffects.LaserController.setRandomRotation
  GameEffects.LaserController:
    name:
      CSharp:
      - id: GameEffects.LaserController
        name: LaserController
        nameWithType: LaserController
        qualifiedName: GameEffects.LaserController
      VB:
      - id: GameEffects.LaserController
        name: LaserController
        nameWithType: LaserController
        qualifiedName: GameEffects.LaserController
    isDefinition: true
    parent: GameEffects
    commentId: T:GameEffects.LaserController
  GameEffects.SpinnerLightController:
    name:
      CSharp:
      - id: GameEffects.SpinnerLightController
        name: SpinnerLightController
        nameWithType: SpinnerLightController
        qualifiedName: GameEffects.SpinnerLightController
      VB:
      - id: GameEffects.SpinnerLightController
        name: SpinnerLightController
        nameWithType: SpinnerLightController
        qualifiedName: GameEffects.SpinnerLightController
    isDefinition: true
    parent: GameEffects
    commentId: T:GameEffects.SpinnerLightController
  GameEffects.MainEffectController.#ctor*:
    name:
      CSharp:
      - id: GameEffects.MainEffectController.#ctor*
        name: MainEffectController
        nameWithType: MainEffectController.MainEffectController
        qualifiedName: GameEffects.MainEffectController.MainEffectController
      VB:
      - id: GameEffects.MainEffectController.#ctor*
        name: MainEffectController
        nameWithType: MainEffectController.MainEffectController
        qualifiedName: GameEffects.MainEffectController.MainEffectController
    isDefinition: true
    commentId: Overload:GameEffects.MainEffectController.#ctor
  GameEffects.MainEffectController.checkEventsAvailable*:
    name:
      CSharp:
      - id: GameEffects.MainEffectController.checkEventsAvailable*
        name: checkEventsAvailable
        nameWithType: MainEffectController.checkEventsAvailable
        qualifiedName: GameEffects.MainEffectController.checkEventsAvailable
      VB:
      - id: GameEffects.MainEffectController.checkEventsAvailable*
        name: checkEventsAvailable
        nameWithType: MainEffectController.checkEventsAvailable
        qualifiedName: GameEffects.MainEffectController.checkEventsAvailable
    isDefinition: true
    commentId: Overload:GameEffects.MainEffectController.checkEventsAvailable
  GameEffects.MainEffectController._handleEvent*:
    name:
      CSharp:
      - id: GameEffects.MainEffectController._handleEvent*
        name: _handleEvent
        nameWithType: MainEffectController._handleEvent
        qualifiedName: GameEffects.MainEffectController._handleEvent
      VB:
      - id: GameEffects.MainEffectController._handleEvent*
        name: _handleEvent
        nameWithType: MainEffectController._handleEvent
        qualifiedName: GameEffects.MainEffectController._handleEvent
    isDefinition: true
    commentId: Overload:GameEffects.MainEffectController._handleEvent
  GameEffects.MainEffectController:
    name:
      CSharp:
      - id: GameEffects.MainEffectController
        name: MainEffectController
        nameWithType: MainEffectController
        qualifiedName: GameEffects.MainEffectController
      VB:
      - id: GameEffects.MainEffectController
        name: MainEffectController
        nameWithType: MainEffectController
        qualifiedName: GameEffects.MainEffectController
    isDefinition: true
    commentId: T:GameEffects.MainEffectController
  GameEffects.SpinnerLight.HorizontalLightFrames*:
    name:
      CSharp:
      - id: GameEffects.SpinnerLight.HorizontalLightFrames*
        name: HorizontalLightFrames
        nameWithType: SpinnerLight.HorizontalLightFrames
        qualifiedName: GameEffects.SpinnerLight.HorizontalLightFrames
      VB:
      - id: GameEffects.SpinnerLight.HorizontalLightFrames*
        name: HorizontalLightFrames
        nameWithType: SpinnerLight.HorizontalLightFrames
        qualifiedName: GameEffects.SpinnerLight.HorizontalLightFrames
    isDefinition: true
    commentId: Overload:GameEffects.SpinnerLight.HorizontalLightFrames
  GameEffects.SpinnerLight.VerticalLightFrames*:
    name:
      CSharp:
      - id: GameEffects.SpinnerLight.VerticalLightFrames*
        name: VerticalLightFrames
        nameWithType: SpinnerLight.VerticalLightFrames
        qualifiedName: GameEffects.SpinnerLight.VerticalLightFrames
      VB:
      - id: GameEffects.SpinnerLight.VerticalLightFrames*
        name: VerticalLightFrames
        nameWithType: SpinnerLight.VerticalLightFrames
        qualifiedName: GameEffects.SpinnerLight.VerticalLightFrames
    isDefinition: true
    commentId: Overload:GameEffects.SpinnerLight.VerticalLightFrames
  GameEffects.SpinnerLight:
    name:
      CSharp:
      - id: GameEffects.SpinnerLight
        name: SpinnerLight
        nameWithType: SpinnerLight
        qualifiedName: GameEffects.SpinnerLight
      VB:
      - id: GameEffects.SpinnerLight
        name: SpinnerLight
        nameWithType: SpinnerLight
        qualifiedName: GameEffects.SpinnerLight
    isDefinition: true
    commentId: T:GameEffects.SpinnerLight
  GameEffects.SpinnerLightController.Start*:
    name:
      CSharp:
      - id: GameEffects.SpinnerLightController.Start*
        name: Start
        nameWithType: SpinnerLightController.Start
        qualifiedName: GameEffects.SpinnerLightController.Start
      VB:
      - id: GameEffects.SpinnerLightController.Start*
        name: Start
        nameWithType: SpinnerLightController.Start
        qualifiedName: GameEffects.SpinnerLightController.Start
    isDefinition: true
    commentId: Overload:GameEffects.SpinnerLightController.Start
  GameEffects.SpinnerLightController.frontBackTransition*:
    name:
      CSharp:
      - id: GameEffects.SpinnerLightController.frontBackTransition*
        name: frontBackTransition
        nameWithType: SpinnerLightController.frontBackTransition
        qualifiedName: GameEffects.SpinnerLightController.frontBackTransition
      VB:
      - id: GameEffects.SpinnerLightController.frontBackTransition*
        name: frontBackTransition
        nameWithType: SpinnerLightController.frontBackTransition
        qualifiedName: GameEffects.SpinnerLightController.frontBackTransition
    isDefinition: true
    commentId: Overload:GameEffects.SpinnerLightController.frontBackTransition
  GameEffects.SpinnerLightController.blinkAll*:
    name:
      CSharp:
      - id: GameEffects.SpinnerLightController.blinkAll*
        name: blinkAll
        nameWithType: SpinnerLightController.blinkAll
        qualifiedName: GameEffects.SpinnerLightController.blinkAll
      VB:
      - id: GameEffects.SpinnerLightController.blinkAll*
        name: blinkAll
        nameWithType: SpinnerLightController.blinkAll
        qualifiedName: GameEffects.SpinnerLightController.blinkAll
    isDefinition: true
    commentId: Overload:GameEffects.SpinnerLightController.blinkAll
  GameEffects.SpinnerLightController.Update*:
    name:
      CSharp:
      - id: GameEffects.SpinnerLightController.Update*
        name: Update
        nameWithType: SpinnerLightController.Update
        qualifiedName: GameEffects.SpinnerLightController.Update
      VB:
      - id: GameEffects.SpinnerLightController.Update*
        name: Update
        nameWithType: SpinnerLightController.Update
        qualifiedName: GameEffects.SpinnerLightController.Update
    isDefinition: true
    commentId: Overload:GameEffects.SpinnerLightController.Update
  GameEffects.VolumetricFogEffect.ActiveFrames*:
    name:
      CSharp:
      - id: GameEffects.VolumetricFogEffect.ActiveFrames*
        name: ActiveFrames
        nameWithType: VolumetricFogEffect.ActiveFrames
        qualifiedName: GameEffects.VolumetricFogEffect.ActiveFrames
      VB:
      - id: GameEffects.VolumetricFogEffect.ActiveFrames*
        name: ActiveFrames
        nameWithType: VolumetricFogEffect.ActiveFrames
        qualifiedName: GameEffects.VolumetricFogEffect.ActiveFrames
    isDefinition: true
    commentId: Overload:GameEffects.VolumetricFogEffect.ActiveFrames
  GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone*:
    name:
      CSharp:
      - id: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone*
        name: isDone
        nameWithType: BaseSpinnerLightEffectHandler.isDone
        qualifiedName: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone
      VB:
      - id: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone*
        name: isDone
        nameWithType: BaseSpinnerLightEffectHandler.isDone
        qualifiedName: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone
    isDefinition: true
    commentId: Overload:GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone
  GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.update*:
    name:
      CSharp:
      - id: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.update*
        name: update
        nameWithType: BaseSpinnerLightEffectHandler.update
        qualifiedName: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.update
      VB:
      - id: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.update*
        name: update
        nameWithType: BaseSpinnerLightEffectHandler.update
        qualifiedName: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.update
    isDefinition: true
    commentId: Overload:GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.update
  GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler:
    name:
      CSharp:
      - id: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler
        name: BaseSpinnerLightEffectHandler
        nameWithType: BaseSpinnerLightEffectHandler
        qualifiedName: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler
      VB:
      - id: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler
        name: BaseSpinnerLightEffectHandler
        nameWithType: BaseSpinnerLightEffectHandler
        qualifiedName: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler
    isDefinition: true
    parent: GameEffects.SpinnerLightEffects
    commentId: T:GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler
  GameEffects.SpinnerLightEffects:
    name:
      CSharp:
      - name: GameEffects.SpinnerLightEffects
        nameWithType: GameEffects.SpinnerLightEffects
        qualifiedName: GameEffects.SpinnerLightEffects
      VB:
      - name: GameEffects.SpinnerLightEffects
        nameWithType: GameEffects.SpinnerLightEffects
        qualifiedName: GameEffects.SpinnerLightEffects
    isDefinition: true
    commentId: N:GameEffects.SpinnerLightEffects
  GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler._isDone:
    name:
      CSharp:
      - id: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler._isDone
        name: _isDone
        nameWithType: BaseSpinnerLightEffectHandler._isDone
        qualifiedName: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler._isDone
      VB:
      - id: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler._isDone
        name: _isDone
        nameWithType: BaseSpinnerLightEffectHandler._isDone
        qualifiedName: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler._isDone
    isDefinition: true
    parent: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler
    commentId: F:GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler._isDone
  GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone:
    name:
      CSharp:
      - id: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone
        name: isDone
        nameWithType: BaseSpinnerLightEffectHandler.isDone
        qualifiedName: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone
        name: isDone
        nameWithType: BaseSpinnerLightEffectHandler.isDone
        qualifiedName: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler
    commentId: M:GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.isDone
  System.Collections.Generic.List{GameEffects.SpinnerLight}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: GameEffects.SpinnerLight
        name: SpinnerLight
        nameWithType: SpinnerLight
        qualifiedName: GameEffects.SpinnerLight
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: GameEffects.SpinnerLight
        name: SpinnerLight
        nameWithType: SpinnerLight
        qualifiedName: GameEffects.SpinnerLight
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{GameEffects.SpinnerLight}
  GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.#ctor*:
    name:
      CSharp:
      - id: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.#ctor*
        name: FrontBackTransitionSpinnerLightEffectHandler
        nameWithType: FrontBackTransitionSpinnerLightEffectHandler.FrontBackTransitionSpinnerLightEffectHandler
        qualifiedName: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.FrontBackTransitionSpinnerLightEffectHandler
      VB:
      - id: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.#ctor*
        name: FrontBackTransitionSpinnerLightEffectHandler
        nameWithType: FrontBackTransitionSpinnerLightEffectHandler.FrontBackTransitionSpinnerLightEffectHandler
        qualifiedName: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.FrontBackTransitionSpinnerLightEffectHandler
    isDefinition: true
    commentId: Overload:GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.#ctor
  GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.update:
    name:
      CSharp:
      - id: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.update
        name: update
        nameWithType: BaseSpinnerLightEffectHandler.update
        qualifiedName: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.update
        name: update
        nameWithType: BaseSpinnerLightEffectHandler.update
        qualifiedName: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler
    commentId: M:GameEffects.SpinnerLightEffects.BaseSpinnerLightEffectHandler.update
  GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.update*:
    name:
      CSharp:
      - id: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.update*
        name: update
        nameWithType: FrontBackTransitionSpinnerLightEffectHandler.update
        qualifiedName: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.update
      VB:
      - id: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.update*
        name: update
        nameWithType: FrontBackTransitionSpinnerLightEffectHandler.update
        qualifiedName: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.update
    isDefinition: true
    commentId: Overload:GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler.update
  GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler:
    name:
      CSharp:
      - id: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler
        name: FrontBackTransitionSpinnerLightEffectHandler
        nameWithType: FrontBackTransitionSpinnerLightEffectHandler
        qualifiedName: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler
      VB:
      - id: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler
        name: FrontBackTransitionSpinnerLightEffectHandler
        nameWithType: FrontBackTransitionSpinnerLightEffectHandler
        qualifiedName: GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler
    isDefinition: true
    commentId: T:GameEffects.SpinnerLightEffects.FrontBackTransitionSpinnerLightEffectHandler
  GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.#ctor*:
    name:
      CSharp:
      - id: GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.#ctor*
        name: BlinkAllSpinnerLightEffectHandler
        nameWithType: BlinkAllSpinnerLightEffectHandler.BlinkAllSpinnerLightEffectHandler
        qualifiedName: GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.BlinkAllSpinnerLightEffectHandler
      VB:
      - id: GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.#ctor*
        name: BlinkAllSpinnerLightEffectHandler
        nameWithType: BlinkAllSpinnerLightEffectHandler.BlinkAllSpinnerLightEffectHandler
        qualifiedName: GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.BlinkAllSpinnerLightEffectHandler
    isDefinition: true
    commentId: Overload:GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.#ctor
  GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.update*:
    name:
      CSharp:
      - id: GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.update*
        name: update
        nameWithType: BlinkAllSpinnerLightEffectHandler.update
        qualifiedName: GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.update
      VB:
      - id: GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.update*
        name: update
        nameWithType: BlinkAllSpinnerLightEffectHandler.update
        qualifiedName: GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.update
    isDefinition: true
    commentId: Overload:GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler.update
  GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler:
    name:
      CSharp:
      - id: GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler
        name: BlinkAllSpinnerLightEffectHandler
        nameWithType: BlinkAllSpinnerLightEffectHandler
        qualifiedName: GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler
      VB:
      - id: GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler
        name: BlinkAllSpinnerLightEffectHandler
        nameWithType: BlinkAllSpinnerLightEffectHandler
        qualifiedName: GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler
    isDefinition: true
    commentId: T:GameEffects.SpinnerLightEffects.BlinkAllSpinnerLightEffectHandler
  Collider:
    name:
      CSharp:
      - id: Collider
        name: Collider
        nameWithType: Collider
        qualifiedName: Collider
        isExternal: true
      VB:
      - id: Collider
        name: Collider
        nameWithType: Collider
        qualifiedName: Collider
        isExternal: true
    isDefinition: true
    commentId: '!:Collider'
  GameSpawnedObjects.Obstacle:
    name:
      CSharp:
      - id: GameSpawnedObjects.Obstacle
        name: Obstacle
        nameWithType: Obstacle
        qualifiedName: GameSpawnedObjects.Obstacle
      VB:
      - id: GameSpawnedObjects.Obstacle
        name: Obstacle
        nameWithType: Obstacle
        qualifiedName: GameSpawnedObjects.Obstacle
    isDefinition: true
    commentId: T:GameSpawnedObjects.Obstacle
  GameSpawnedObjects.Sabre:
    name:
      CSharp:
      - id: GameSpawnedObjects.Sabre
        name: Sabre
        nameWithType: Sabre
        qualifiedName: GameSpawnedObjects.Sabre
      VB:
      - id: GameSpawnedObjects.Sabre
        name: Sabre
        nameWithType: Sabre
        qualifiedName: GameSpawnedObjects.Sabre
    isDefinition: true
    commentId: T:GameSpawnedObjects.Sabre
  GameSpawnedObjects.SlicedObject:
    name:
      CSharp:
      - id: GameSpawnedObjects.SlicedObject
        name: SlicedObject
        nameWithType: SlicedObject
        qualifiedName: GameSpawnedObjects.SlicedObject
      VB:
      - id: GameSpawnedObjects.SlicedObject
        name: SlicedObject
        nameWithType: SlicedObject
        qualifiedName: GameSpawnedObjects.SlicedObject
    isDefinition: true
    commentId: T:GameSpawnedObjects.SlicedObject
  GameSpawnedObjects.TimedBlock.MissBlock*:
    name:
      CSharp:
      - id: GameSpawnedObjects.TimedBlock.MissBlock*
        name: MissBlock
        nameWithType: TimedBlock.MissBlock
        qualifiedName: GameSpawnedObjects.TimedBlock.MissBlock
      VB:
      - id: GameSpawnedObjects.TimedBlock.MissBlock*
        name: MissBlock
        nameWithType: TimedBlock.MissBlock
        qualifiedName: GameSpawnedObjects.TimedBlock.MissBlock
    isDefinition: true
    commentId: Overload:GameSpawnedObjects.TimedBlock.MissBlock
  GameSpawnedObjects.TimedBlock:
    name:
      CSharp:
      - id: GameSpawnedObjects.TimedBlock
        name: TimedBlock
        nameWithType: TimedBlock
        qualifiedName: GameSpawnedObjects.TimedBlock
      VB:
      - id: GameSpawnedObjects.TimedBlock
        name: TimedBlock
        nameWithType: TimedBlock
        qualifiedName: GameSpawnedObjects.TimedBlock
    isDefinition: true
    commentId: T:GameSpawnedObjects.TimedBlock
  GameSpawnedObjects:
    name:
      CSharp:
      - name: GameSpawnedObjects
        nameWithType: GameSpawnedObjects
        qualifiedName: GameSpawnedObjects
      VB:
      - name: GameSpawnedObjects
        nameWithType: GameSpawnedObjects
        qualifiedName: GameSpawnedObjects
    isDefinition: true
    commentId: N:GameSpawnedObjects
  GameSpawners.NoteSpawner.#ctor*:
    name:
      CSharp:
      - id: GameSpawners.NoteSpawner.#ctor*
        name: NoteSpawner
        nameWithType: NoteSpawner.NoteSpawner
        qualifiedName: GameSpawners.NoteSpawner.NoteSpawner
      VB:
      - id: GameSpawners.NoteSpawner.#ctor*
        name: NoteSpawner
        nameWithType: NoteSpawner.NoteSpawner
        qualifiedName: GameSpawners.NoteSpawner.NoteSpawner
    isDefinition: true
    commentId: Overload:GameSpawners.NoteSpawner.#ctor
  GameSpawners.NoteSpawner.checkBlocksSpawnable*:
    name:
      CSharp:
      - id: GameSpawners.NoteSpawner.checkBlocksSpawnable*
        name: checkBlocksSpawnable
        nameWithType: NoteSpawner.checkBlocksSpawnable
        qualifiedName: GameSpawners.NoteSpawner.checkBlocksSpawnable
      VB:
      - id: GameSpawners.NoteSpawner.checkBlocksSpawnable*
        name: checkBlocksSpawnable
        nameWithType: NoteSpawner.checkBlocksSpawnable
        qualifiedName: GameSpawners.NoteSpawner.checkBlocksSpawnable
    isDefinition: true
    commentId: Overload:GameSpawners.NoteSpawner.checkBlocksSpawnable
  System.Collections.Generic.List{GameObject}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{GameObject}
  GameSpawners.NoteSpawner.getBlocks*:
    name:
      CSharp:
      - id: GameSpawners.NoteSpawner.getBlocks*
        name: getBlocks
        nameWithType: NoteSpawner.getBlocks
        qualifiedName: GameSpawners.NoteSpawner.getBlocks
      VB:
      - id: GameSpawners.NoteSpawner.getBlocks*
        name: getBlocks
        nameWithType: NoteSpawner.getBlocks
        qualifiedName: GameSpawners.NoteSpawner.getBlocks
    isDefinition: true
    commentId: Overload:GameSpawners.NoteSpawner.getBlocks
  GameSpawners.NoteSpawner.getRelativeTravelTime*:
    name:
      CSharp:
      - id: GameSpawners.NoteSpawner.getRelativeTravelTime*
        name: getRelativeTravelTime
        nameWithType: NoteSpawner.getRelativeTravelTime
        qualifiedName: GameSpawners.NoteSpawner.getRelativeTravelTime
      VB:
      - id: GameSpawners.NoteSpawner.getRelativeTravelTime*
        name: getRelativeTravelTime
        nameWithType: NoteSpawner.getRelativeTravelTime
        qualifiedName: GameSpawners.NoteSpawner.getRelativeTravelTime
    isDefinition: true
    commentId: Overload:GameSpawners.NoteSpawner.getRelativeTravelTime
  GameSpawners.NoteSpawner:
    name:
      CSharp:
      - id: GameSpawners.NoteSpawner
        name: NoteSpawner
        nameWithType: NoteSpawner
        qualifiedName: GameSpawners.NoteSpawner
      VB:
      - id: GameSpawners.NoteSpawner
        name: NoteSpawner
        nameWithType: NoteSpawner
        qualifiedName: GameSpawners.NoteSpawner
    isDefinition: true
    commentId: T:GameSpawners.NoteSpawner
  GameSpawners.ObjectSpawnPositionProvider.getHorizontalPosition*:
    name:
      CSharp:
      - id: GameSpawners.ObjectSpawnPositionProvider.getHorizontalPosition*
        name: getHorizontalPosition
        nameWithType: ObjectSpawnPositionProvider.getHorizontalPosition
        qualifiedName: GameSpawners.ObjectSpawnPositionProvider.getHorizontalPosition
      VB:
      - id: GameSpawners.ObjectSpawnPositionProvider.getHorizontalPosition*
        name: getHorizontalPosition
        nameWithType: ObjectSpawnPositionProvider.getHorizontalPosition
        qualifiedName: GameSpawners.ObjectSpawnPositionProvider.getHorizontalPosition
    isDefinition: true
    commentId: Overload:GameSpawners.ObjectSpawnPositionProvider.getHorizontalPosition
  GameSpawners.ObjectSpawnPositionProvider.getVerticalPosition*:
    name:
      CSharp:
      - id: GameSpawners.ObjectSpawnPositionProvider.getVerticalPosition*
        name: getVerticalPosition
        nameWithType: ObjectSpawnPositionProvider.getVerticalPosition
        qualifiedName: GameSpawners.ObjectSpawnPositionProvider.getVerticalPosition
      VB:
      - id: GameSpawners.ObjectSpawnPositionProvider.getVerticalPosition*
        name: getVerticalPosition
        nameWithType: ObjectSpawnPositionProvider.getVerticalPosition
        qualifiedName: GameSpawners.ObjectSpawnPositionProvider.getVerticalPosition
    isDefinition: true
    commentId: Overload:GameSpawners.ObjectSpawnPositionProvider.getVerticalPosition
  GameSpawners.ObjectSpawnPositionProvider.getCutDirection*:
    name:
      CSharp:
      - id: GameSpawners.ObjectSpawnPositionProvider.getCutDirection*
        name: getCutDirection
        nameWithType: ObjectSpawnPositionProvider.getCutDirection
        qualifiedName: GameSpawners.ObjectSpawnPositionProvider.getCutDirection
      VB:
      - id: GameSpawners.ObjectSpawnPositionProvider.getCutDirection*
        name: getCutDirection
        nameWithType: ObjectSpawnPositionProvider.getCutDirection
        qualifiedName: GameSpawners.ObjectSpawnPositionProvider.getCutDirection
    isDefinition: true
    commentId: Overload:GameSpawners.ObjectSpawnPositionProvider.getCutDirection
  GameSpawners.ObjectSpawnPositionProvider:
    name:
      CSharp:
      - id: GameSpawners.ObjectSpawnPositionProvider
        name: ObjectSpawnPositionProvider
        nameWithType: ObjectSpawnPositionProvider
        qualifiedName: GameSpawners.ObjectSpawnPositionProvider
      VB:
      - id: GameSpawners.ObjectSpawnPositionProvider
        name: ObjectSpawnPositionProvider
        nameWithType: ObjectSpawnPositionProvider
        qualifiedName: GameSpawners.ObjectSpawnPositionProvider
    isDefinition: true
    commentId: T:GameSpawners.ObjectSpawnPositionProvider
  GameSpawners.ObstacleSpawner.#ctor*:
    name:
      CSharp:
      - id: GameSpawners.ObstacleSpawner.#ctor*
        name: ObstacleSpawner
        nameWithType: ObstacleSpawner.ObstacleSpawner
        qualifiedName: GameSpawners.ObstacleSpawner.ObstacleSpawner
      VB:
      - id: GameSpawners.ObstacleSpawner.#ctor*
        name: ObstacleSpawner
        nameWithType: ObstacleSpawner.ObstacleSpawner
        qualifiedName: GameSpawners.ObstacleSpawner.ObstacleSpawner
    isDefinition: true
    commentId: Overload:GameSpawners.ObstacleSpawner.#ctor
  GameSpawners.ObstacleSpawner.checkObstaclesSpawnable*:
    name:
      CSharp:
      - id: GameSpawners.ObstacleSpawner.checkObstaclesSpawnable*
        name: checkObstaclesSpawnable
        nameWithType: ObstacleSpawner.checkObstaclesSpawnable
        qualifiedName: GameSpawners.ObstacleSpawner.checkObstaclesSpawnable
      VB:
      - id: GameSpawners.ObstacleSpawner.checkObstaclesSpawnable*
        name: checkObstaclesSpawnable
        nameWithType: ObstacleSpawner.checkObstaclesSpawnable
        qualifiedName: GameSpawners.ObstacleSpawner.checkObstaclesSpawnable
    isDefinition: true
    commentId: Overload:GameSpawners.ObstacleSpawner.checkObstaclesSpawnable
  GameSpawners.ObstacleSpawner.getRelativeTravelTime*:
    name:
      CSharp:
      - id: GameSpawners.ObstacleSpawner.getRelativeTravelTime*
        name: getRelativeTravelTime
        nameWithType: ObstacleSpawner.getRelativeTravelTime
        qualifiedName: GameSpawners.ObstacleSpawner.getRelativeTravelTime
      VB:
      - id: GameSpawners.ObstacleSpawner.getRelativeTravelTime*
        name: getRelativeTravelTime
        nameWithType: ObstacleSpawner.getRelativeTravelTime
        qualifiedName: GameSpawners.ObstacleSpawner.getRelativeTravelTime
    isDefinition: true
    commentId: Overload:GameSpawners.ObstacleSpawner.getRelativeTravelTime
  GameSpawners.ObstacleSpawner:
    name:
      CSharp:
      - id: GameSpawners.ObstacleSpawner
        name: ObstacleSpawner
        nameWithType: ObstacleSpawner
        qualifiedName: GameSpawners.ObstacleSpawner
      VB:
      - id: GameSpawners.ObstacleSpawner
        name: ObstacleSpawner
        nameWithType: ObstacleSpawner
        qualifiedName: GameSpawners.ObstacleSpawner
    isDefinition: true
    commentId: T:GameSpawners.ObstacleSpawner
  GameSpawners:
    name:
      CSharp:
      - name: GameSpawners
        nameWithType: GameSpawners
        qualifiedName: GameSpawners
      VB:
      - name: GameSpawners
        nameWithType: GameSpawners
        qualifiedName: GameSpawners
    isDefinition: true
    commentId: N:GameSpawners
  Global.DevSettings:
    name:
      CSharp:
      - id: Global.DevSettings
        name: DevSettings
        nameWithType: DevSettings
        qualifiedName: Global.DevSettings
      VB:
      - id: Global.DevSettings
        name: DevSettings
        nameWithType: DevSettings
        qualifiedName: Global.DevSettings
    isDefinition: true
    commentId: T:Global.DevSettings
  Global.GlobalStorage.AudioClip*:
    name:
      CSharp:
      - id: Global.GlobalStorage.AudioClip*
        name: AudioClip
        nameWithType: GlobalStorage.AudioClip
        qualifiedName: Global.GlobalStorage.AudioClip
      VB:
      - id: Global.GlobalStorage.AudioClip*
        name: AudioClip
        nameWithType: GlobalStorage.AudioClip
        qualifiedName: Global.GlobalStorage.AudioClip
    isDefinition: true
    commentId: Overload:Global.GlobalStorage.AudioClip
  Global.GlobalStorage.TrackConfig*:
    name:
      CSharp:
      - id: Global.GlobalStorage.TrackConfig*
        name: TrackConfig
        nameWithType: GlobalStorage.TrackConfig
        qualifiedName: Global.GlobalStorage.TrackConfig
      VB:
      - id: Global.GlobalStorage.TrackConfig*
        name: TrackConfig
        nameWithType: GlobalStorage.TrackConfig
        qualifiedName: Global.GlobalStorage.TrackConfig
    isDefinition: true
    commentId: Overload:Global.GlobalStorage.TrackConfig
  Global.GlobalStorage.AudioPath*:
    name:
      CSharp:
      - id: Global.GlobalStorage.AudioPath*
        name: AudioPath
        nameWithType: GlobalStorage.AudioPath
        qualifiedName: Global.GlobalStorage.AudioPath
      VB:
      - id: Global.GlobalStorage.AudioPath*
        name: AudioPath
        nameWithType: GlobalStorage.AudioPath
        qualifiedName: Global.GlobalStorage.AudioPath
    isDefinition: true
    commentId: Overload:Global.GlobalStorage.AudioPath
  Global.GlobalStorage.MappingContainer*:
    name:
      CSharp:
      - id: Global.GlobalStorage.MappingContainer*
        name: MappingContainer
        nameWithType: GlobalStorage.MappingContainer
        qualifiedName: Global.GlobalStorage.MappingContainer
      VB:
      - id: Global.GlobalStorage.MappingContainer*
        name: MappingContainer
        nameWithType: GlobalStorage.MappingContainer
        qualifiedName: Global.GlobalStorage.MappingContainer
    isDefinition: true
    commentId: Overload:Global.GlobalStorage.MappingContainer
  Global.GlobalStorage.Difficulty*:
    name:
      CSharp:
      - id: Global.GlobalStorage.Difficulty*
        name: Difficulty
        nameWithType: GlobalStorage.Difficulty
        qualifiedName: Global.GlobalStorage.Difficulty
      VB:
      - id: Global.GlobalStorage.Difficulty*
        name: Difficulty
        nameWithType: GlobalStorage.Difficulty
        qualifiedName: Global.GlobalStorage.Difficulty
    isDefinition: true
    commentId: Overload:Global.GlobalStorage.Difficulty
  Global:
    name:
      CSharp:
      - name: Global
        nameWithType: Global
        qualifiedName: Global
      VB:
      - name: Global
        nameWithType: Global
        qualifiedName: Global
    isDefinition: true
    commentId: N:Global
  Global.GlobalStorage:
    name:
      CSharp:
      - id: Global.GlobalStorage
        name: GlobalStorage
        nameWithType: GlobalStorage
        qualifiedName: Global.GlobalStorage
      VB:
      - id: Global.GlobalStorage
        name: GlobalStorage
        nameWithType: GlobalStorage
        qualifiedName: Global.GlobalStorage
    isDefinition: true
    parent: Global
    commentId: T:Global.GlobalStorage
  Global.GlobalStorage.getInstance*:
    name:
      CSharp:
      - id: Global.GlobalStorage.getInstance*
        name: getInstance
        nameWithType: GlobalStorage.getInstance
        qualifiedName: Global.GlobalStorage.getInstance
      VB:
      - id: Global.GlobalStorage.getInstance*
        name: getInstance
        nameWithType: GlobalStorage.getInstance
        qualifiedName: Global.GlobalStorage.getInstance
    isDefinition: true
    commentId: Overload:Global.GlobalStorage.getInstance
  Global.GlobalStorage.destroy*:
    name:
      CSharp:
      - id: Global.GlobalStorage.destroy*
        name: destroy
        nameWithType: GlobalStorage.destroy
        qualifiedName: Global.GlobalStorage.destroy
      VB:
      - id: Global.GlobalStorage.destroy*
        name: destroy
        nameWithType: GlobalStorage.destroy
        qualifiedName: Global.GlobalStorage.destroy
    isDefinition: true
    commentId: Overload:Global.GlobalStorage.destroy
  Global.PlayerData.IsGameOver*:
    name:
      CSharp:
      - id: Global.PlayerData.IsGameOver*
        name: IsGameOver
        nameWithType: PlayerData.IsGameOver
        qualifiedName: Global.PlayerData.IsGameOver
      VB:
      - id: Global.PlayerData.IsGameOver*
        name: IsGameOver
        nameWithType: PlayerData.IsGameOver
        qualifiedName: Global.PlayerData.IsGameOver
    isDefinition: true
    commentId: Overload:Global.PlayerData.IsGameOver
  Global.PlayerData.#ctor*:
    name:
      CSharp:
      - id: Global.PlayerData.#ctor*
        name: PlayerData
        nameWithType: PlayerData.PlayerData
        qualifiedName: Global.PlayerData.PlayerData
      VB:
      - id: Global.PlayerData.#ctor*
        name: PlayerData
        nameWithType: PlayerData.PlayerData
        qualifiedName: Global.PlayerData.PlayerData
    isDefinition: true
    commentId: Overload:Global.PlayerData.#ctor
  Global.PlayerData.takeDamage*:
    name:
      CSharp:
      - id: Global.PlayerData.takeDamage*
        name: takeDamage
        nameWithType: PlayerData.takeDamage
        qualifiedName: Global.PlayerData.takeDamage
      VB:
      - id: Global.PlayerData.takeDamage*
        name: takeDamage
        nameWithType: PlayerData.takeDamage
        qualifiedName: Global.PlayerData.takeDamage
    isDefinition: true
    commentId: Overload:Global.PlayerData.takeDamage
  Global.PlayerData.heal*:
    name:
      CSharp:
      - id: Global.PlayerData.heal*
        name: heal
        nameWithType: PlayerData.heal
        qualifiedName: Global.PlayerData.heal
      VB:
      - id: Global.PlayerData.heal*
        name: heal
        nameWithType: PlayerData.heal
        qualifiedName: Global.PlayerData.heal
    isDefinition: true
    commentId: Overload:Global.PlayerData.heal
  Global.PlayerData:
    name:
      CSharp:
      - id: Global.PlayerData
        name: PlayerData
        nameWithType: PlayerData
        qualifiedName: Global.PlayerData
      VB:
      - id: Global.PlayerData
        name: PlayerData
        nameWithType: PlayerData
        qualifiedName: Global.PlayerData
    isDefinition: true
    parent: Global
    commentId: T:Global.PlayerData
  Global.PlayerData.getInstance*:
    name:
      CSharp:
      - id: Global.PlayerData.getInstance*
        name: getInstance
        nameWithType: PlayerData.getInstance
        qualifiedName: Global.PlayerData.getInstance
      VB:
      - id: Global.PlayerData.getInstance*
        name: getInstance
        nameWithType: PlayerData.getInstance
        qualifiedName: Global.PlayerData.getInstance
    isDefinition: true
    commentId: Overload:Global.PlayerData.getInstance
  Global.PlayerData.destroy*:
    name:
      CSharp:
      - id: Global.PlayerData.destroy*
        name: destroy
        nameWithType: PlayerData.destroy
        qualifiedName: Global.PlayerData.destroy
      VB:
      - id: Global.PlayerData.destroy*
        name: destroy
        nameWithType: PlayerData.destroy
        qualifiedName: Global.PlayerData.destroy
    isDefinition: true
    commentId: Overload:Global.PlayerData.destroy
  Global.ScoreTracker.NumBeats*:
    name:
      CSharp:
      - id: Global.ScoreTracker.NumBeats*
        name: NumBeats
        nameWithType: ScoreTracker.NumBeats
        qualifiedName: Global.ScoreTracker.NumBeats
      VB:
      - id: Global.ScoreTracker.NumBeats*
        name: NumBeats
        nameWithType: ScoreTracker.NumBeats
        qualifiedName: Global.ScoreTracker.NumBeats
    isDefinition: true
    commentId: Overload:Global.ScoreTracker.NumBeats
  Global.ScoreTracker.Hits*:
    name:
      CSharp:
      - id: Global.ScoreTracker.Hits*
        name: Hits
        nameWithType: ScoreTracker.Hits
        qualifiedName: Global.ScoreTracker.Hits
      VB:
      - id: Global.ScoreTracker.Hits*
        name: Hits
        nameWithType: ScoreTracker.Hits
        qualifiedName: Global.ScoreTracker.Hits
    isDefinition: true
    commentId: Overload:Global.ScoreTracker.Hits
  Global.ScoreTracker.Misses*:
    name:
      CSharp:
      - id: Global.ScoreTracker.Misses*
        name: Misses
        nameWithType: ScoreTracker.Misses
        qualifiedName: Global.ScoreTracker.Misses
      VB:
      - id: Global.ScoreTracker.Misses*
        name: Misses
        nameWithType: ScoreTracker.Misses
        qualifiedName: Global.ScoreTracker.Misses
    isDefinition: true
    commentId: Overload:Global.ScoreTracker.Misses
  Global.ScoreTracker.Score*:
    name:
      CSharp:
      - id: Global.ScoreTracker.Score*
        name: Score
        nameWithType: ScoreTracker.Score
        qualifiedName: Global.ScoreTracker.Score
      VB:
      - id: Global.ScoreTracker.Score*
        name: Score
        nameWithType: ScoreTracker.Score
        qualifiedName: Global.ScoreTracker.Score
    isDefinition: true
    commentId: Overload:Global.ScoreTracker.Score
  Global.ScoreTracker.HighestStreak*:
    name:
      CSharp:
      - id: Global.ScoreTracker.HighestStreak*
        name: HighestStreak
        nameWithType: ScoreTracker.HighestStreak
        qualifiedName: Global.ScoreTracker.HighestStreak
      VB:
      - id: Global.ScoreTracker.HighestStreak*
        name: HighestStreak
        nameWithType: ScoreTracker.HighestStreak
        qualifiedName: Global.ScoreTracker.HighestStreak
    isDefinition: true
    commentId: Overload:Global.ScoreTracker.HighestStreak
  Global.ScoreTracker.AverageCombo*:
    name:
      CSharp:
      - id: Global.ScoreTracker.AverageCombo*
        name: AverageCombo
        nameWithType: ScoreTracker.AverageCombo
        qualifiedName: Global.ScoreTracker.AverageCombo
      VB:
      - id: Global.ScoreTracker.AverageCombo*
        name: AverageCombo
        nameWithType: ScoreTracker.AverageCombo
        qualifiedName: Global.ScoreTracker.AverageCombo
    isDefinition: true
    commentId: Overload:Global.ScoreTracker.AverageCombo
  Global.ScoreTracker.resetComboCounter*:
    name:
      CSharp:
      - id: Global.ScoreTracker.resetComboCounter*
        name: resetComboCounter
        nameWithType: ScoreTracker.resetComboCounter
        qualifiedName: Global.ScoreTracker.resetComboCounter
      VB:
      - id: Global.ScoreTracker.resetComboCounter*
        name: resetComboCounter
        nameWithType: ScoreTracker.resetComboCounter
        qualifiedName: Global.ScoreTracker.resetComboCounter
    isDefinition: true
    commentId: Overload:Global.ScoreTracker.resetComboCounter
  Global.ScoreTracker.hit*:
    name:
      CSharp:
      - id: Global.ScoreTracker.hit*
        name: hit
        nameWithType: ScoreTracker.hit
        qualifiedName: Global.ScoreTracker.hit
      VB:
      - id: Global.ScoreTracker.hit*
        name: hit
        nameWithType: ScoreTracker.hit
        qualifiedName: Global.ScoreTracker.hit
    isDefinition: true
    commentId: Overload:Global.ScoreTracker.hit
  Global.ScoreTracker.miss*:
    name:
      CSharp:
      - id: Global.ScoreTracker.miss*
        name: miss
        nameWithType: ScoreTracker.miss
        qualifiedName: Global.ScoreTracker.miss
      VB:
      - id: Global.ScoreTracker.miss*
        name: miss
        nameWithType: ScoreTracker.miss
        qualifiedName: Global.ScoreTracker.miss
    isDefinition: true
    commentId: Overload:Global.ScoreTracker.miss
  Global.ScoreTracker.setupGameObjects*:
    name:
      CSharp:
      - id: Global.ScoreTracker.setupGameObjects*
        name: setupGameObjects
        nameWithType: ScoreTracker.setupGameObjects
        qualifiedName: Global.ScoreTracker.setupGameObjects
      VB:
      - id: Global.ScoreTracker.setupGameObjects*
        name: setupGameObjects
        nameWithType: ScoreTracker.setupGameObjects
        qualifiedName: Global.ScoreTracker.setupGameObjects
    isDefinition: true
    commentId: Overload:Global.ScoreTracker.setupGameObjects
  Global.ScoreTracker:
    name:
      CSharp:
      - id: Global.ScoreTracker
        name: ScoreTracker
        nameWithType: ScoreTracker
        qualifiedName: Global.ScoreTracker
      VB:
      - id: Global.ScoreTracker
        name: ScoreTracker
        nameWithType: ScoreTracker
        qualifiedName: Global.ScoreTracker
    isDefinition: true
    parent: Global
    commentId: T:Global.ScoreTracker
  Global.ScoreTracker.getInstance*:
    name:
      CSharp:
      - id: Global.ScoreTracker.getInstance*
        name: getInstance
        nameWithType: ScoreTracker.getInstance
        qualifiedName: Global.ScoreTracker.getInstance
      VB:
      - id: Global.ScoreTracker.getInstance*
        name: getInstance
        nameWithType: ScoreTracker.getInstance
        qualifiedName: Global.ScoreTracker.getInstance
    isDefinition: true
    commentId: Overload:Global.ScoreTracker.getInstance
  Global.ScoreTracker.destroy*:
    name:
      CSharp:
      - id: Global.ScoreTracker.destroy*
        name: destroy
        nameWithType: ScoreTracker.destroy
        qualifiedName: Global.ScoreTracker.destroy
      VB:
      - id: Global.ScoreTracker.destroy*
        name: destroy
        nameWithType: ScoreTracker.destroy
        qualifiedName: Global.ScoreTracker.destroy
    isDefinition: true
    commentId: Overload:Global.ScoreTracker.destroy
  Json.JsonController.writeMappingFile*:
    name:
      CSharp:
      - id: Json.JsonController.writeMappingFile*
        name: writeMappingFile
        nameWithType: JsonController.writeMappingFile
        qualifiedName: Json.JsonController.writeMappingFile
      VB:
      - id: Json.JsonController.writeMappingFile*
        name: writeMappingFile
        nameWithType: JsonController.writeMappingFile
        qualifiedName: Json.JsonController.writeMappingFile
    isDefinition: true
    commentId: Overload:Json.JsonController.writeMappingFile
  Json.JsonController.writeInfoFile*:
    name:
      CSharp:
      - id: Json.JsonController.writeInfoFile*
        name: writeInfoFile
        nameWithType: JsonController.writeInfoFile
        qualifiedName: Json.JsonController.writeInfoFile
      VB:
      - id: Json.JsonController.writeInfoFile*
        name: writeInfoFile
        nameWithType: JsonController.writeInfoFile
        qualifiedName: Json.JsonController.writeInfoFile
    isDefinition: true
    commentId: Overload:Json.JsonController.writeInfoFile
  System.Collections.Generic.List{HighscoreData}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: HighscoreData
        name: HighscoreData
        nameWithType: HighscoreData
        qualifiedName: HighscoreData
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: HighscoreData
        name: HighscoreData
        nameWithType: HighscoreData
        qualifiedName: HighscoreData
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{HighscoreData}
  Json.JsonController.writeHighscoreFile*:
    name:
      CSharp:
      - id: Json.JsonController.writeHighscoreFile*
        name: writeHighscoreFile
        nameWithType: JsonController.writeHighscoreFile
        qualifiedName: Json.JsonController.writeHighscoreFile
      VB:
      - id: Json.JsonController.writeHighscoreFile*
        name: writeHighscoreFile
        nameWithType: JsonController.writeHighscoreFile
        qualifiedName: Json.JsonController.writeHighscoreFile
    isDefinition: true
    commentId: Overload:Json.JsonController.writeHighscoreFile
  Json.JsonController.readMappingFile*:
    name:
      CSharp:
      - id: Json.JsonController.readMappingFile*
        name: readMappingFile
        nameWithType: JsonController.readMappingFile
        qualifiedName: Json.JsonController.readMappingFile
      VB:
      - id: Json.JsonController.readMappingFile*
        name: readMappingFile
        nameWithType: JsonController.readMappingFile
        qualifiedName: Json.JsonController.readMappingFile
    isDefinition: true
    commentId: Overload:Json.JsonController.readMappingFile
  Json.JsonController.readInfoFile*:
    name:
      CSharp:
      - id: Json.JsonController.readInfoFile*
        name: readInfoFile
        nameWithType: JsonController.readInfoFile
        qualifiedName: Json.JsonController.readInfoFile
      VB:
      - id: Json.JsonController.readInfoFile*
        name: readInfoFile
        nameWithType: JsonController.readInfoFile
        qualifiedName: Json.JsonController.readInfoFile
    isDefinition: true
    commentId: Overload:Json.JsonController.readInfoFile
  Json.JsonController.readHighscoreFile*:
    name:
      CSharp:
      - id: Json.JsonController.readHighscoreFile*
        name: readHighscoreFile
        nameWithType: JsonController.readHighscoreFile
        qualifiedName: Json.JsonController.readHighscoreFile
      VB:
      - id: Json.JsonController.readHighscoreFile*
        name: readHighscoreFile
        nameWithType: JsonController.readHighscoreFile
        qualifiedName: Json.JsonController.readHighscoreFile
    isDefinition: true
    commentId: Overload:Json.JsonController.readHighscoreFile
  Json.JsonController.fileExists*:
    name:
      CSharp:
      - id: Json.JsonController.fileExists*
        name: fileExists
        nameWithType: JsonController.fileExists
        qualifiedName: Json.JsonController.fileExists
      VB:
      - id: Json.JsonController.fileExists*
        name: fileExists
        nameWithType: JsonController.fileExists
        qualifiedName: Json.JsonController.fileExists
    isDefinition: true
    commentId: Overload:Json.JsonController.fileExists
  Json.JsonController.getFullMappingPath*:
    name:
      CSharp:
      - id: Json.JsonController.getFullMappingPath*
        name: getFullMappingPath
        nameWithType: JsonController.getFullMappingPath
        qualifiedName: Json.JsonController.getFullMappingPath
      VB:
      - id: Json.JsonController.getFullMappingPath*
        name: getFullMappingPath
        nameWithType: JsonController.getFullMappingPath
        qualifiedName: Json.JsonController.getFullMappingPath
    isDefinition: true
    commentId: Overload:Json.JsonController.getFullMappingPath
  Json.JsonController.getFullInfoPath*:
    name:
      CSharp:
      - id: Json.JsonController.getFullInfoPath*
        name: getFullInfoPath
        nameWithType: JsonController.getFullInfoPath
        qualifiedName: Json.JsonController.getFullInfoPath
      VB:
      - id: Json.JsonController.getFullInfoPath*
        name: getFullInfoPath
        nameWithType: JsonController.getFullInfoPath
        qualifiedName: Json.JsonController.getFullInfoPath
    isDefinition: true
    commentId: Overload:Json.JsonController.getFullInfoPath
  Json.JsonController:
    name:
      CSharp:
      - id: Json.JsonController
        name: JsonController
        nameWithType: JsonController
        qualifiedName: Json.JsonController
      VB:
      - id: Json.JsonController
        name: JsonController
        nameWithType: JsonController
        qualifiedName: Json.JsonController
    isDefinition: true
    commentId: T:Json.JsonController
  Json.JsonFilePathUtils.getFolderPath*:
    name:
      CSharp:
      - id: Json.JsonFilePathUtils.getFolderPath*
        name: getFolderPath
        nameWithType: JsonFilePathUtils.getFolderPath
        qualifiedName: Json.JsonFilePathUtils.getFolderPath
      VB:
      - id: Json.JsonFilePathUtils.getFolderPath*
        name: getFolderPath
        nameWithType: JsonFilePathUtils.getFolderPath
        qualifiedName: Json.JsonFilePathUtils.getFolderPath
    isDefinition: true
    commentId: Overload:Json.JsonFilePathUtils.getFolderPath
  Json.JsonFilePathUtils.getFullPath*:
    name:
      CSharp:
      - id: Json.JsonFilePathUtils.getFullPath*
        name: getFullPath
        nameWithType: JsonFilePathUtils.getFullPath
        qualifiedName: Json.JsonFilePathUtils.getFullPath
      VB:
      - id: Json.JsonFilePathUtils.getFullPath*
        name: getFullPath
        nameWithType: JsonFilePathUtils.getFullPath
        qualifiedName: Json.JsonFilePathUtils.getFullPath
    isDefinition: true
    commentId: Overload:Json.JsonFilePathUtils.getFullPath
  Json.JsonFilePathUtils:
    name:
      CSharp:
      - id: Json.JsonFilePathUtils
        name: JsonFilePathUtils
        nameWithType: JsonFilePathUtils
        qualifiedName: Json.JsonFilePathUtils
      VB:
      - id: Json.JsonFilePathUtils
        name: JsonFilePathUtils
        nameWithType: JsonFilePathUtils
        qualifiedName: Json.JsonFilePathUtils
    isDefinition: true
    commentId: T:Json.JsonFilePathUtils
  Json:
    name:
      CSharp:
      - name: Json
        nameWithType: Json
        qualifiedName: Json
      VB:
      - name: Json
        nameWithType: Json
        qualifiedName: Json
    isDefinition: true
    commentId: N:Json
  FileInfo:
    name:
      CSharp:
      - id: FileInfo
        name: FileInfo
        nameWithType: FileInfo
        qualifiedName: FileInfo
        isExternal: true
      VB:
      - id: FileInfo
        name: FileInfo
        nameWithType: FileInfo
        qualifiedName: FileInfo
        isExternal: true
    isDefinition: true
    commentId: '!:FileInfo'
  Json.JsonIOHandler.JsonFileWriter.writeFile*:
    name:
      CSharp:
      - id: Json.JsonIOHandler.JsonFileWriter.writeFile*
        name: writeFile
        nameWithType: JsonFileWriter.writeFile
        qualifiedName: Json.JsonIOHandler.JsonFileWriter.writeFile
      VB:
      - id: Json.JsonIOHandler.JsonFileWriter.writeFile*
        name: writeFile
        nameWithType: JsonFileWriter.writeFile
        qualifiedName: Json.JsonIOHandler.JsonFileWriter.writeFile
    isDefinition: true
    commentId: Overload:Json.JsonIOHandler.JsonFileWriter.writeFile
  Json.JsonIOHandler.JsonFileWriter:
    name:
      CSharp:
      - id: Json.JsonIOHandler.JsonFileWriter
        name: JsonFileWriter
        nameWithType: JsonFileWriter
        qualifiedName: Json.JsonIOHandler.JsonFileWriter
      VB:
      - id: Json.JsonIOHandler.JsonFileWriter
        name: JsonFileWriter
        nameWithType: JsonFileWriter
        qualifiedName: Json.JsonIOHandler.JsonFileWriter
    isDefinition: true
    commentId: T:Json.JsonIOHandler.JsonFileWriter
  Json.JsonIOHandler.JsonFileReader.readHighscoreFile*:
    name:
      CSharp:
      - id: Json.JsonIOHandler.JsonFileReader.readHighscoreFile*
        name: readHighscoreFile
        nameWithType: JsonFileReader.readHighscoreFile
        qualifiedName: Json.JsonIOHandler.JsonFileReader.readHighscoreFile
      VB:
      - id: Json.JsonIOHandler.JsonFileReader.readHighscoreFile*
        name: readHighscoreFile
        nameWithType: JsonFileReader.readHighscoreFile
        qualifiedName: Json.JsonIOHandler.JsonFileReader.readHighscoreFile
    isDefinition: true
    commentId: Overload:Json.JsonIOHandler.JsonFileReader.readHighscoreFile
  Json.JsonIOHandler.JsonFileReader.readInfoFile*:
    name:
      CSharp:
      - id: Json.JsonIOHandler.JsonFileReader.readInfoFile*
        name: readInfoFile
        nameWithType: JsonFileReader.readInfoFile
        qualifiedName: Json.JsonIOHandler.JsonFileReader.readInfoFile
      VB:
      - id: Json.JsonIOHandler.JsonFileReader.readInfoFile*
        name: readInfoFile
        nameWithType: JsonFileReader.readInfoFile
        qualifiedName: Json.JsonIOHandler.JsonFileReader.readInfoFile
    isDefinition: true
    commentId: Overload:Json.JsonIOHandler.JsonFileReader.readInfoFile
  Json.JsonIOHandler.JsonFileReader.readMappingFile*:
    name:
      CSharp:
      - id: Json.JsonIOHandler.JsonFileReader.readMappingFile*
        name: readMappingFile
        nameWithType: JsonFileReader.readMappingFile
        qualifiedName: Json.JsonIOHandler.JsonFileReader.readMappingFile
      VB:
      - id: Json.JsonIOHandler.JsonFileReader.readMappingFile*
        name: readMappingFile
        nameWithType: JsonFileReader.readMappingFile
        qualifiedName: Json.JsonIOHandler.JsonFileReader.readMappingFile
    isDefinition: true
    commentId: Overload:Json.JsonIOHandler.JsonFileReader.readMappingFile
  Json.JsonIOHandler.JsonFileReader:
    name:
      CSharp:
      - id: Json.JsonIOHandler.JsonFileReader
        name: JsonFileReader
        nameWithType: JsonFileReader
        qualifiedName: Json.JsonIOHandler.JsonFileReader
      VB:
      - id: Json.JsonIOHandler.JsonFileReader
        name: JsonFileReader
        nameWithType: JsonFileReader
        qualifiedName: Json.JsonIOHandler.JsonFileReader
    isDefinition: true
    commentId: T:Json.JsonIOHandler.JsonFileReader
  Json.JsonIOHandler:
    name:
      CSharp:
      - name: Json.JsonIOHandler
        nameWithType: Json.JsonIOHandler
        qualifiedName: Json.JsonIOHandler
      VB:
      - name: Json.JsonIOHandler
        nameWithType: Json.JsonIOHandler
        qualifiedName: Json.JsonIOHandler
    isDefinition: true
    commentId: N:Json.JsonIOHandler
  Json.JsonStringBuilders.JsonHighscoreStringBuilder.setData*:
    name:
      CSharp:
      - id: Json.JsonStringBuilders.JsonHighscoreStringBuilder.setData*
        name: setData
        nameWithType: JsonHighscoreStringBuilder.setData
        qualifiedName: Json.JsonStringBuilders.JsonHighscoreStringBuilder.setData
      VB:
      - id: Json.JsonStringBuilders.JsonHighscoreStringBuilder.setData*
        name: setData
        nameWithType: JsonHighscoreStringBuilder.setData
        qualifiedName: Json.JsonStringBuilders.JsonHighscoreStringBuilder.setData
    isDefinition: true
    commentId: Overload:Json.JsonStringBuilders.JsonHighscoreStringBuilder.setData
  Json.JsonStringBuilders.JsonHighscoreStringBuilder.getJsonString*:
    name:
      CSharp:
      - id: Json.JsonStringBuilders.JsonHighscoreStringBuilder.getJsonString*
        name: getJsonString
        nameWithType: JsonHighscoreStringBuilder.getJsonString
        qualifiedName: Json.JsonStringBuilders.JsonHighscoreStringBuilder.getJsonString
      VB:
      - id: Json.JsonStringBuilders.JsonHighscoreStringBuilder.getJsonString*
        name: getJsonString
        nameWithType: JsonHighscoreStringBuilder.getJsonString
        qualifiedName: Json.JsonStringBuilders.JsonHighscoreStringBuilder.getJsonString
    isDefinition: true
    commentId: Overload:Json.JsonStringBuilders.JsonHighscoreStringBuilder.getJsonString
  Json.JsonStringBuilders.JsonHighscoreStringBuilder:
    name:
      CSharp:
      - id: Json.JsonStringBuilders.JsonHighscoreStringBuilder
        name: JsonHighscoreStringBuilder
        nameWithType: JsonHighscoreStringBuilder
        qualifiedName: Json.JsonStringBuilders.JsonHighscoreStringBuilder
      VB:
      - id: Json.JsonStringBuilders.JsonHighscoreStringBuilder
        name: JsonHighscoreStringBuilder
        nameWithType: JsonHighscoreStringBuilder
        qualifiedName: Json.JsonStringBuilders.JsonHighscoreStringBuilder
    isDefinition: true
    commentId: T:Json.JsonStringBuilders.JsonHighscoreStringBuilder
  Json.JsonStringBuilders.JsonMappingStringBuilder.setData*:
    name:
      CSharp:
      - id: Json.JsonStringBuilders.JsonMappingStringBuilder.setData*
        name: setData
        nameWithType: JsonMappingStringBuilder.setData
        qualifiedName: Json.JsonStringBuilders.JsonMappingStringBuilder.setData
      VB:
      - id: Json.JsonStringBuilders.JsonMappingStringBuilder.setData*
        name: setData
        nameWithType: JsonMappingStringBuilder.setData
        qualifiedName: Json.JsonStringBuilders.JsonMappingStringBuilder.setData
    isDefinition: true
    commentId: Overload:Json.JsonStringBuilders.JsonMappingStringBuilder.setData
  Json.JsonStringBuilders.JsonMappingStringBuilder.getJsonString*:
    name:
      CSharp:
      - id: Json.JsonStringBuilders.JsonMappingStringBuilder.getJsonString*
        name: getJsonString
        nameWithType: JsonMappingStringBuilder.getJsonString
        qualifiedName: Json.JsonStringBuilders.JsonMappingStringBuilder.getJsonString
      VB:
      - id: Json.JsonStringBuilders.JsonMappingStringBuilder.getJsonString*
        name: getJsonString
        nameWithType: JsonMappingStringBuilder.getJsonString
        qualifiedName: Json.JsonStringBuilders.JsonMappingStringBuilder.getJsonString
    isDefinition: true
    commentId: Overload:Json.JsonStringBuilders.JsonMappingStringBuilder.getJsonString
  Json.JsonStringBuilders.JsonMappingStringBuilder:
    name:
      CSharp:
      - id: Json.JsonStringBuilders.JsonMappingStringBuilder
        name: JsonMappingStringBuilder
        nameWithType: JsonMappingStringBuilder
        qualifiedName: Json.JsonStringBuilders.JsonMappingStringBuilder
      VB:
      - id: Json.JsonStringBuilders.JsonMappingStringBuilder
        name: JsonMappingStringBuilder
        nameWithType: JsonMappingStringBuilder
        qualifiedName: Json.JsonStringBuilders.JsonMappingStringBuilder
    isDefinition: true
    commentId: T:Json.JsonStringBuilders.JsonMappingStringBuilder
  Json.JsonStringBuilders.JsonInfoStringBuilder.getJsonString*:
    name:
      CSharp:
      - id: Json.JsonStringBuilders.JsonInfoStringBuilder.getJsonString*
        name: getJsonString
        nameWithType: JsonInfoStringBuilder.getJsonString
        qualifiedName: Json.JsonStringBuilders.JsonInfoStringBuilder.getJsonString
      VB:
      - id: Json.JsonStringBuilders.JsonInfoStringBuilder.getJsonString*
        name: getJsonString
        nameWithType: JsonInfoStringBuilder.getJsonString
        qualifiedName: Json.JsonStringBuilders.JsonInfoStringBuilder.getJsonString
    isDefinition: true
    commentId: Overload:Json.JsonStringBuilders.JsonInfoStringBuilder.getJsonString
  Json.JsonStringBuilders.JsonInfoStringBuilder:
    name:
      CSharp:
      - id: Json.JsonStringBuilders.JsonInfoStringBuilder
        name: JsonInfoStringBuilder
        nameWithType: JsonInfoStringBuilder
        qualifiedName: Json.JsonStringBuilders.JsonInfoStringBuilder
      VB:
      - id: Json.JsonStringBuilders.JsonInfoStringBuilder
        name: JsonInfoStringBuilder
        nameWithType: JsonInfoStringBuilder
        qualifiedName: Json.JsonStringBuilders.JsonInfoStringBuilder
    isDefinition: true
    commentId: T:Json.JsonStringBuilders.JsonInfoStringBuilder
  Json.JsonStringBuilders:
    name:
      CSharp:
      - name: Json.JsonStringBuilders
        nameWithType: Json.JsonStringBuilders
        qualifiedName: Json.JsonStringBuilders
      VB:
      - name: Json.JsonStringBuilders
        nameWithType: Json.JsonStringBuilders
        qualifiedName: Json.JsonStringBuilders
    isDefinition: true
    commentId: N:Json.JsonStringBuilders
  MenuMainMenu.MainMenu.clickPlay*:
    name:
      CSharp:
      - id: MenuMainMenu.MainMenu.clickPlay*
        name: clickPlay
        nameWithType: MainMenu.clickPlay
        qualifiedName: MenuMainMenu.MainMenu.clickPlay
      VB:
      - id: MenuMainMenu.MainMenu.clickPlay*
        name: clickPlay
        nameWithType: MainMenu.clickPlay
        qualifiedName: MenuMainMenu.MainMenu.clickPlay
    isDefinition: true
    commentId: Overload:MenuMainMenu.MainMenu.clickPlay
  MenuMainMenu.MainMenu.clickOnsetTest*:
    name:
      CSharp:
      - id: MenuMainMenu.MainMenu.clickOnsetTest*
        name: clickOnsetTest
        nameWithType: MainMenu.clickOnsetTest
        qualifiedName: MenuMainMenu.MainMenu.clickOnsetTest
      VB:
      - id: MenuMainMenu.MainMenu.clickOnsetTest*
        name: clickOnsetTest
        nameWithType: MainMenu.clickOnsetTest
        qualifiedName: MenuMainMenu.MainMenu.clickOnsetTest
    isDefinition: true
    commentId: Overload:MenuMainMenu.MainMenu.clickOnsetTest
  MenuMainMenu.MainMenu.clickOptions*:
    name:
      CSharp:
      - id: MenuMainMenu.MainMenu.clickOptions*
        name: clickOptions
        nameWithType: MainMenu.clickOptions
        qualifiedName: MenuMainMenu.MainMenu.clickOptions
      VB:
      - id: MenuMainMenu.MainMenu.clickOptions*
        name: clickOptions
        nameWithType: MainMenu.clickOptions
        qualifiedName: MenuMainMenu.MainMenu.clickOptions
    isDefinition: true
    commentId: Overload:MenuMainMenu.MainMenu.clickOptions
  MenuMainMenu.MainMenu.clickQuit*:
    name:
      CSharp:
      - id: MenuMainMenu.MainMenu.clickQuit*
        name: clickQuit
        nameWithType: MainMenu.clickQuit
        qualifiedName: MenuMainMenu.MainMenu.clickQuit
      VB:
      - id: MenuMainMenu.MainMenu.clickQuit*
        name: clickQuit
        nameWithType: MainMenu.clickQuit
        qualifiedName: MenuMainMenu.MainMenu.clickQuit
    isDefinition: true
    commentId: Overload:MenuMainMenu.MainMenu.clickQuit
  MenuMainMenu.MainMenu:
    name:
      CSharp:
      - id: MenuMainMenu.MainMenu
        name: MainMenu
        nameWithType: MainMenu
        qualifiedName: MenuMainMenu.MainMenu
      VB:
      - id: MenuMainMenu.MainMenu
        name: MainMenu
        nameWithType: MainMenu
        qualifiedName: MenuMainMenu.MainMenu
    isDefinition: true
    commentId: T:MenuMainMenu.MainMenu
  MenuMainMenu.OptionsMenu.setBackCallback*:
    name:
      CSharp:
      - id: MenuMainMenu.OptionsMenu.setBackCallback*
        name: setBackCallback
        nameWithType: OptionsMenu.setBackCallback
        qualifiedName: MenuMainMenu.OptionsMenu.setBackCallback
      VB:
      - id: MenuMainMenu.OptionsMenu.setBackCallback*
        name: setBackCallback
        nameWithType: OptionsMenu.setBackCallback
        qualifiedName: MenuMainMenu.OptionsMenu.setBackCallback
    isDefinition: true
    commentId: Overload:MenuMainMenu.OptionsMenu.setBackCallback
  MenuMainMenu.OptionsMenu.clickBack*:
    name:
      CSharp:
      - id: MenuMainMenu.OptionsMenu.clickBack*
        name: clickBack
        nameWithType: OptionsMenu.clickBack
        qualifiedName: MenuMainMenu.OptionsMenu.clickBack
      VB:
      - id: MenuMainMenu.OptionsMenu.clickBack*
        name: clickBack
        nameWithType: OptionsMenu.clickBack
        qualifiedName: MenuMainMenu.OptionsMenu.clickBack
    isDefinition: true
    commentId: Overload:MenuMainMenu.OptionsMenu.clickBack
  MenuMainMenu.OptionsMenu:
    name:
      CSharp:
      - id: MenuMainMenu.OptionsMenu
        name: OptionsMenu
        nameWithType: OptionsMenu
        qualifiedName: MenuMainMenu.OptionsMenu
      VB:
      - id: MenuMainMenu.OptionsMenu
        name: OptionsMenu
        nameWithType: OptionsMenu
        qualifiedName: MenuMainMenu.OptionsMenu
    isDefinition: true
    commentId: T:MenuMainMenu.OptionsMenu
  Text:
    name:
      CSharp:
      - id: Text
        name: Text
        nameWithType: Text
        qualifiedName: Text
        isExternal: true
      VB:
      - id: Text
        name: Text
        nameWithType: Text
        qualifiedName: Text
        isExternal: true
    isDefinition: true
    commentId: '!:Text'
  MenuMainMenu.PlayMenu.setBackCallback*:
    name:
      CSharp:
      - id: MenuMainMenu.PlayMenu.setBackCallback*
        name: setBackCallback
        nameWithType: PlayMenu.setBackCallback
        qualifiedName: MenuMainMenu.PlayMenu.setBackCallback
      VB:
      - id: MenuMainMenu.PlayMenu.setBackCallback*
        name: setBackCallback
        nameWithType: PlayMenu.setBackCallback
        qualifiedName: MenuMainMenu.PlayMenu.setBackCallback
    isDefinition: true
    commentId: Overload:MenuMainMenu.PlayMenu.setBackCallback
  MenuMainMenu.PlayMenu.clickPlay*:
    name:
      CSharp:
      - id: MenuMainMenu.PlayMenu.clickPlay*
        name: clickPlay
        nameWithType: PlayMenu.clickPlay
        qualifiedName: MenuMainMenu.PlayMenu.clickPlay
      VB:
      - id: MenuMainMenu.PlayMenu.clickPlay*
        name: clickPlay
        nameWithType: PlayMenu.clickPlay
        qualifiedName: MenuMainMenu.PlayMenu.clickPlay
    isDefinition: true
    commentId: Overload:MenuMainMenu.PlayMenu.clickPlay
  MenuMainMenu.PlayMenu.clickBack*:
    name:
      CSharp:
      - id: MenuMainMenu.PlayMenu.clickBack*
        name: clickBack
        nameWithType: PlayMenu.clickBack
        qualifiedName: MenuMainMenu.PlayMenu.clickBack
      VB:
      - id: MenuMainMenu.PlayMenu.clickBack*
        name: clickBack
        nameWithType: PlayMenu.clickBack
        qualifiedName: MenuMainMenu.PlayMenu.clickBack
    isDefinition: true
    commentId: Overload:MenuMainMenu.PlayMenu.clickBack
  MenuMainMenu.PlayMenu.clickLoadAudioFile*:
    name:
      CSharp:
      - id: MenuMainMenu.PlayMenu.clickLoadAudioFile*
        name: clickLoadAudioFile
        nameWithType: PlayMenu.clickLoadAudioFile
        qualifiedName: MenuMainMenu.PlayMenu.clickLoadAudioFile
      VB:
      - id: MenuMainMenu.PlayMenu.clickLoadAudioFile*
        name: clickLoadAudioFile
        nameWithType: PlayMenu.clickLoadAudioFile
        qualifiedName: MenuMainMenu.PlayMenu.clickLoadAudioFile
    isDefinition: true
    commentId: Overload:MenuMainMenu.PlayMenu.clickLoadAudioFile
  MenuMainMenu.PlayMenu:
    name:
      CSharp:
      - id: MenuMainMenu.PlayMenu
        name: PlayMenu
        nameWithType: PlayMenu
        qualifiedName: MenuMainMenu.PlayMenu
      VB:
      - id: MenuMainMenu.PlayMenu
        name: PlayMenu
        nameWithType: PlayMenu
        qualifiedName: MenuMainMenu.PlayMenu
    isDefinition: true
    commentId: T:MenuMainMenu.PlayMenu
  MenuMainMenu.ShowSliderValueAwesome.updateText*:
    name:
      CSharp:
      - id: MenuMainMenu.ShowSliderValueAwesome.updateText*
        name: updateText
        nameWithType: ShowSliderValueAwesome.updateText
        qualifiedName: MenuMainMenu.ShowSliderValueAwesome.updateText
      VB:
      - id: MenuMainMenu.ShowSliderValueAwesome.updateText*
        name: updateText
        nameWithType: ShowSliderValueAwesome.updateText
        qualifiedName: MenuMainMenu.ShowSliderValueAwesome.updateText
    isDefinition: true
    commentId: Overload:MenuMainMenu.ShowSliderValueAwesome.updateText
  MenuMainMenu.ShowSliderValueAwesome:
    name:
      CSharp:
      - id: MenuMainMenu.ShowSliderValueAwesome
        name: ShowSliderValueAwesome
        nameWithType: ShowSliderValueAwesome
        qualifiedName: MenuMainMenu.ShowSliderValueAwesome
      VB:
      - id: MenuMainMenu.ShowSliderValueAwesome
        name: ShowSliderValueAwesome
        nameWithType: ShowSliderValueAwesome
        qualifiedName: MenuMainMenu.ShowSliderValueAwesome
    isDefinition: true
    commentId: T:MenuMainMenu.ShowSliderValueAwesome
  MenuMainMenu.ShowSliderValueDifficulty.updateText*:
    name:
      CSharp:
      - id: MenuMainMenu.ShowSliderValueDifficulty.updateText*
        name: updateText
        nameWithType: ShowSliderValueDifficulty.updateText
        qualifiedName: MenuMainMenu.ShowSliderValueDifficulty.updateText
      VB:
      - id: MenuMainMenu.ShowSliderValueDifficulty.updateText*
        name: updateText
        nameWithType: ShowSliderValueDifficulty.updateText
        qualifiedName: MenuMainMenu.ShowSliderValueDifficulty.updateText
    isDefinition: true
    commentId: Overload:MenuMainMenu.ShowSliderValueDifficulty.updateText
  MenuMainMenu.ShowSliderValueDifficulty:
    name:
      CSharp:
      - id: MenuMainMenu.ShowSliderValueDifficulty
        name: ShowSliderValueDifficulty
        nameWithType: ShowSliderValueDifficulty
        qualifiedName: MenuMainMenu.ShowSliderValueDifficulty
      VB:
      - id: MenuMainMenu.ShowSliderValueDifficulty
        name: ShowSliderValueDifficulty
        nameWithType: ShowSliderValueDifficulty
        qualifiedName: MenuMainMenu.ShowSliderValueDifficulty
    isDefinition: true
    commentId: T:MenuMainMenu.ShowSliderValueDifficulty
  MenuMainMenu.ShowSliderValueFloat.updateText*:
    name:
      CSharp:
      - id: MenuMainMenu.ShowSliderValueFloat.updateText*
        name: updateText
        nameWithType: ShowSliderValueFloat.updateText
        qualifiedName: MenuMainMenu.ShowSliderValueFloat.updateText
      VB:
      - id: MenuMainMenu.ShowSliderValueFloat.updateText*
        name: updateText
        nameWithType: ShowSliderValueFloat.updateText
        qualifiedName: MenuMainMenu.ShowSliderValueFloat.updateText
    isDefinition: true
    commentId: Overload:MenuMainMenu.ShowSliderValueFloat.updateText
  MenuMainMenu.ShowSliderValueFloat:
    name:
      CSharp:
      - id: MenuMainMenu.ShowSliderValueFloat
        name: ShowSliderValueFloat
        nameWithType: ShowSliderValueFloat
        qualifiedName: MenuMainMenu.ShowSliderValueFloat
      VB:
      - id: MenuMainMenu.ShowSliderValueFloat
        name: ShowSliderValueFloat
        nameWithType: ShowSliderValueFloat
        qualifiedName: MenuMainMenu.ShowSliderValueFloat
    isDefinition: true
    commentId: T:MenuMainMenu.ShowSliderValueFloat
  MenuMainMenu.ShowSliderValueInt.updateText*:
    name:
      CSharp:
      - id: MenuMainMenu.ShowSliderValueInt.updateText*
        name: updateText
        nameWithType: ShowSliderValueInt.updateText
        qualifiedName: MenuMainMenu.ShowSliderValueInt.updateText
      VB:
      - id: MenuMainMenu.ShowSliderValueInt.updateText*
        name: updateText
        nameWithType: ShowSliderValueInt.updateText
        qualifiedName: MenuMainMenu.ShowSliderValueInt.updateText
    isDefinition: true
    commentId: Overload:MenuMainMenu.ShowSliderValueInt.updateText
  MenuMainMenu.ShowSliderValueInt:
    name:
      CSharp:
      - id: MenuMainMenu.ShowSliderValueInt
        name: ShowSliderValueInt
        nameWithType: ShowSliderValueInt
        qualifiedName: MenuMainMenu.ShowSliderValueInt
      VB:
      - id: MenuMainMenu.ShowSliderValueInt
        name: ShowSliderValueInt
        nameWithType: ShowSliderValueInt
        qualifiedName: MenuMainMenu.ShowSliderValueInt
    isDefinition: true
    commentId: T:MenuMainMenu.ShowSliderValueInt
  MenuMainMenu:
    name:
      CSharp:
      - name: MenuMainMenu
        nameWithType: MenuMainMenu
        qualifiedName: MenuMainMenu
      VB:
      - name: MenuMainMenu
        nameWithType: MenuMainMenu
        qualifiedName: MenuMainMenu
    isDefinition: true
    commentId: N:MenuMainMenu
  MenuScoreMenu:
    name:
      CSharp:
      - name: MenuScoreMenu
        nameWithType: MenuScoreMenu
        qualifiedName: MenuScoreMenu
      VB:
      - name: MenuScoreMenu
        nameWithType: MenuScoreMenu
        qualifiedName: MenuScoreMenu
    isDefinition: true
    commentId: N:MenuScoreMenu
  MenuScoreMenu.HighscoreData:
    name:
      CSharp:
      - id: MenuScoreMenu.HighscoreData
        name: HighscoreData
        nameWithType: HighscoreData
        qualifiedName: MenuScoreMenu.HighscoreData
      VB:
      - id: MenuScoreMenu.HighscoreData
        name: HighscoreData
        nameWithType: HighscoreData
        qualifiedName: MenuScoreMenu.HighscoreData
    isDefinition: true
    parent: MenuScoreMenu
    commentId: T:MenuScoreMenu.HighscoreData
  MenuScoreMenu.HighscoreController.CurrentScore*:
    name:
      CSharp:
      - id: MenuScoreMenu.HighscoreController.CurrentScore*
        name: CurrentScore
        nameWithType: HighscoreController.CurrentScore
        qualifiedName: MenuScoreMenu.HighscoreController.CurrentScore
      VB:
      - id: MenuScoreMenu.HighscoreController.CurrentScore*
        name: CurrentScore
        nameWithType: HighscoreController.CurrentScore
        qualifiedName: MenuScoreMenu.HighscoreController.CurrentScore
    isDefinition: true
    commentId: Overload:MenuScoreMenu.HighscoreController.CurrentScore
  System.Collections.Generic.List{MenuScoreMenu.HighscoreData}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: MenuScoreMenu.HighscoreData
        name: HighscoreData
        nameWithType: HighscoreData
        qualifiedName: MenuScoreMenu.HighscoreData
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: MenuScoreMenu.HighscoreData
        name: HighscoreData
        nameWithType: HighscoreData
        qualifiedName: MenuScoreMenu.HighscoreData
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{MenuScoreMenu.HighscoreData}
  MenuScoreMenu.HighscoreController.getHighscores*:
    name:
      CSharp:
      - id: MenuScoreMenu.HighscoreController.getHighscores*
        name: getHighscores
        nameWithType: HighscoreController.getHighscores
        qualifiedName: MenuScoreMenu.HighscoreController.getHighscores
      VB:
      - id: MenuScoreMenu.HighscoreController.getHighscores*
        name: getHighscores
        nameWithType: HighscoreController.getHighscores
        qualifiedName: MenuScoreMenu.HighscoreController.getHighscores
    isDefinition: true
    commentId: Overload:MenuScoreMenu.HighscoreController.getHighscores
  MenuScoreMenu.HighscoreController.#ctor*:
    name:
      CSharp:
      - id: MenuScoreMenu.HighscoreController.#ctor*
        name: HighscoreController
        nameWithType: HighscoreController.HighscoreController
        qualifiedName: MenuScoreMenu.HighscoreController.HighscoreController
      VB:
      - id: MenuScoreMenu.HighscoreController.#ctor*
        name: HighscoreController
        nameWithType: HighscoreController.HighscoreController
        qualifiedName: MenuScoreMenu.HighscoreController.HighscoreController
    isDefinition: true
    commentId: Overload:MenuScoreMenu.HighscoreController.#ctor
  MenuScoreMenu.HighscoreController:
    name:
      CSharp:
      - id: MenuScoreMenu.HighscoreController
        name: HighscoreController
        nameWithType: HighscoreController
        qualifiedName: MenuScoreMenu.HighscoreController
      VB:
      - id: MenuScoreMenu.HighscoreController
        name: HighscoreController
        nameWithType: HighscoreController
        qualifiedName: MenuScoreMenu.HighscoreController
    isDefinition: true
    commentId: T:MenuScoreMenu.HighscoreController
  MenuScoreMenu.HighscoreData.Score*:
    name:
      CSharp:
      - id: MenuScoreMenu.HighscoreData.Score*
        name: Score
        nameWithType: HighscoreData.Score
        qualifiedName: MenuScoreMenu.HighscoreData.Score
      VB:
      - id: MenuScoreMenu.HighscoreData.Score*
        name: Score
        nameWithType: HighscoreData.Score
        qualifiedName: MenuScoreMenu.HighscoreData.Score
    isDefinition: true
    commentId: Overload:MenuScoreMenu.HighscoreData.Score
  MenuScoreMenu.HighscoreData.Rank*:
    name:
      CSharp:
      - id: MenuScoreMenu.HighscoreData.Rank*
        name: Rank
        nameWithType: HighscoreData.Rank
        qualifiedName: MenuScoreMenu.HighscoreData.Rank
      VB:
      - id: MenuScoreMenu.HighscoreData.Rank*
        name: Rank
        nameWithType: HighscoreData.Rank
        qualifiedName: MenuScoreMenu.HighscoreData.Rank
    isDefinition: true
    commentId: Overload:MenuScoreMenu.HighscoreData.Rank
  TextMeshProUGUI:
    name:
      CSharp:
      - id: TextMeshProUGUI
        name: TextMeshProUGUI
        nameWithType: TextMeshProUGUI
        qualifiedName: TextMeshProUGUI
        isExternal: true
      VB:
      - id: TextMeshProUGUI
        name: TextMeshProUGUI
        nameWithType: TextMeshProUGUI
        qualifiedName: TextMeshProUGUI
        isExternal: true
    isDefinition: true
  MenuScoreMenu.ScoreMenu.clickReturnToMain*:
    name:
      CSharp:
      - id: MenuScoreMenu.ScoreMenu.clickReturnToMain*
        name: clickReturnToMain
        nameWithType: ScoreMenu.clickReturnToMain
        qualifiedName: MenuScoreMenu.ScoreMenu.clickReturnToMain
      VB:
      - id: MenuScoreMenu.ScoreMenu.clickReturnToMain*
        name: clickReturnToMain
        nameWithType: ScoreMenu.clickReturnToMain
        qualifiedName: MenuScoreMenu.ScoreMenu.clickReturnToMain
    isDefinition: true
    commentId: Overload:MenuScoreMenu.ScoreMenu.clickReturnToMain
  MenuScoreMenu.ScoreMenu:
    name:
      CSharp:
      - id: MenuScoreMenu.ScoreMenu
        name: ScoreMenu
        nameWithType: ScoreMenu
        qualifiedName: MenuScoreMenu.ScoreMenu
      VB:
      - id: MenuScoreMenu.ScoreMenu
        name: ScoreMenu
        nameWithType: ScoreMenu
        qualifiedName: MenuScoreMenu.ScoreMenu
    isDefinition: true
    commentId: T:MenuScoreMenu.ScoreMenu
  Test.FastGameAudioLoadingStart.Start*:
    name:
      CSharp:
      - id: Test.FastGameAudioLoadingStart.Start*
        name: Start
        nameWithType: FastGameAudioLoadingStart.Start
        qualifiedName: Test.FastGameAudioLoadingStart.Start
      VB:
      - id: Test.FastGameAudioLoadingStart.Start*
        name: Start
        nameWithType: FastGameAudioLoadingStart.Start
        qualifiedName: Test.FastGameAudioLoadingStart.Start
    isDefinition: true
    commentId: Overload:Test.FastGameAudioLoadingStart.Start
  Test.FastGameAudioLoadingStart:
    name:
      CSharp:
      - id: Test.FastGameAudioLoadingStart
        name: FastGameAudioLoadingStart
        nameWithType: FastGameAudioLoadingStart
        qualifiedName: Test.FastGameAudioLoadingStart
      VB:
      - id: Test.FastGameAudioLoadingStart
        name: FastGameAudioLoadingStart
        nameWithType: FastGameAudioLoadingStart
        qualifiedName: Test.FastGameAudioLoadingStart
    isDefinition: true
    commentId: T:Test.FastGameAudioLoadingStart
  Test.JsonSceneTest:
    name:
      CSharp:
      - id: Test.JsonSceneTest
        name: JsonSceneTest
        nameWithType: JsonSceneTest
        qualifiedName: Test.JsonSceneTest
      VB:
      - id: Test.JsonSceneTest
        name: JsonSceneTest
        nameWithType: JsonSceneTest
        qualifiedName: Test.JsonSceneTest
    isDefinition: true
    commentId: T:Test.JsonSceneTest
  Test.SabreTest:
    name:
      CSharp:
      - id: Test.SabreTest
        name: SabreTest
        nameWithType: SabreTest
        qualifiedName: Test.SabreTest
      VB:
      - id: Test.SabreTest
        name: SabreTest
        nameWithType: SabreTest
        qualifiedName: Test.SabreTest
    isDefinition: true
    commentId: T:Test.SabreTest
  Test:
    name:
      CSharp:
      - name: Test
        nameWithType: Test
        qualifiedName: Test
      VB:
      - name: Test
        nameWithType: Test
        qualifiedName: Test
    isDefinition: true
    commentId: N:Test
  System.Collections.Generic.IEnumerable`1:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.IEnumerable`1
  System.Collections.Generic.IEnumerable{System.Double}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerable{System.Double}
  System.Double:
    name:
      CSharp:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      VB:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Double
  TestOldDeprecatedStuff.PLogarithmUtils.LinSpace*:
    name:
      CSharp:
      - id: TestOldDeprecatedStuff.PLogarithmUtils.LinSpace*
        name: LinSpace
        nameWithType: PLogarithmUtils.LinSpace
        qualifiedName: TestOldDeprecatedStuff.PLogarithmUtils.LinSpace
      VB:
      - id: TestOldDeprecatedStuff.PLogarithmUtils.LinSpace*
        name: LinSpace
        nameWithType: PLogarithmUtils.LinSpace
        qualifiedName: TestOldDeprecatedStuff.PLogarithmUtils.LinSpace
    isDefinition: true
    commentId: Overload:TestOldDeprecatedStuff.PLogarithmUtils.LinSpace
  TestOldDeprecatedStuff.PLogarithmUtils.LogSpace*:
    name:
      CSharp:
      - id: TestOldDeprecatedStuff.PLogarithmUtils.LogSpace*
        name: LogSpace
        nameWithType: PLogarithmUtils.LogSpace
        qualifiedName: TestOldDeprecatedStuff.PLogarithmUtils.LogSpace
      VB:
      - id: TestOldDeprecatedStuff.PLogarithmUtils.LogSpace*
        name: LogSpace
        nameWithType: PLogarithmUtils.LogSpace
        qualifiedName: TestOldDeprecatedStuff.PLogarithmUtils.LogSpace
    isDefinition: true
    commentId: Overload:TestOldDeprecatedStuff.PLogarithmUtils.LogSpace
  TestOldDeprecatedStuff.PLogarithmUtils:
    name:
      CSharp:
      - id: TestOldDeprecatedStuff.PLogarithmUtils
        name: PLogarithmUtils
        nameWithType: PLogarithmUtils
        qualifiedName: TestOldDeprecatedStuff.PLogarithmUtils
      VB:
      - id: TestOldDeprecatedStuff.PLogarithmUtils
        name: PLogarithmUtils
        nameWithType: PLogarithmUtils
        qualifiedName: TestOldDeprecatedStuff.PLogarithmUtils
    isDefinition: true
    commentId: T:TestOldDeprecatedStuff.PLogarithmUtils
  TestOldDeprecatedStuff.PPostAudioAnalyzer.#ctor*:
    name:
      CSharp:
      - id: TestOldDeprecatedStuff.PPostAudioAnalyzer.#ctor*
        name: PPostAudioAnalyzer
        nameWithType: PPostAudioAnalyzer.PPostAudioAnalyzer
        qualifiedName: TestOldDeprecatedStuff.PPostAudioAnalyzer.PPostAudioAnalyzer
      VB:
      - id: TestOldDeprecatedStuff.PPostAudioAnalyzer.#ctor*
        name: PPostAudioAnalyzer
        nameWithType: PPostAudioAnalyzer.PPostAudioAnalyzer
        qualifiedName: TestOldDeprecatedStuff.PPostAudioAnalyzer.PPostAudioAnalyzer
    isDefinition: true
    commentId: Overload:TestOldDeprecatedStuff.PPostAudioAnalyzer.#ctor
  TestOldDeprecatedStuff.PPostAudioAnalyzer:
    name:
      CSharp:
      - id: TestOldDeprecatedStuff.PPostAudioAnalyzer
        name: PPostAudioAnalyzer
        nameWithType: PPostAudioAnalyzer
        qualifiedName: TestOldDeprecatedStuff.PPostAudioAnalyzer
      VB:
      - id: TestOldDeprecatedStuff.PPostAudioAnalyzer
        name: PPostAudioAnalyzer
        nameWithType: PPostAudioAnalyzer
        qualifiedName: TestOldDeprecatedStuff.PPostAudioAnalyzer
    isDefinition: true
    commentId: T:TestOldDeprecatedStuff.PPostAudioAnalyzer
  TestOldDeprecatedStuff:
    name:
      CSharp:
      - name: TestOldDeprecatedStuff
        nameWithType: TestOldDeprecatedStuff
        qualifiedName: TestOldDeprecatedStuff
      VB:
      - name: TestOldDeprecatedStuff
        nameWithType: TestOldDeprecatedStuff
        qualifiedName: TestOldDeprecatedStuff
    isDefinition: true
    commentId: N:TestOldDeprecatedStuff
  TestPlotDemo.PlotDemoAudioAnalyzerController:
    name:
      CSharp:
      - id: TestPlotDemo.PlotDemoAudioAnalyzerController
        name: PlotDemoAudioAnalyzerController
        nameWithType: PlotDemoAudioAnalyzerController
        qualifiedName: TestPlotDemo.PlotDemoAudioAnalyzerController
      VB:
      - id: TestPlotDemo.PlotDemoAudioAnalyzerController
        name: PlotDemoAudioAnalyzerController
        nameWithType: PlotDemoAudioAnalyzerController
        qualifiedName: TestPlotDemo.PlotDemoAudioAnalyzerController
    isDefinition: true
    commentId: T:TestPlotDemo.PlotDemoAudioAnalyzerController
  TestPlotDemo.SpectrumPlotter.setDataAndStart*:
    name:
      CSharp:
      - id: TestPlotDemo.SpectrumPlotter.setDataAndStart*
        name: setDataAndStart
        nameWithType: SpectrumPlotter.setDataAndStart
        qualifiedName: TestPlotDemo.SpectrumPlotter.setDataAndStart
      VB:
      - id: TestPlotDemo.SpectrumPlotter.setDataAndStart*
        name: setDataAndStart
        nameWithType: SpectrumPlotter.setDataAndStart
        qualifiedName: TestPlotDemo.SpectrumPlotter.setDataAndStart
    isDefinition: true
    commentId: Overload:TestPlotDemo.SpectrumPlotter.setDataAndStart
  TestPlotDemo.SpectrumPlotter:
    name:
      CSharp:
      - id: TestPlotDemo.SpectrumPlotter
        name: SpectrumPlotter
        nameWithType: SpectrumPlotter
        qualifiedName: TestPlotDemo.SpectrumPlotter
      VB:
      - id: TestPlotDemo.SpectrumPlotter
        name: SpectrumPlotter
        nameWithType: SpectrumPlotter
        qualifiedName: TestPlotDemo.SpectrumPlotter
    isDefinition: true
    commentId: T:TestPlotDemo.SpectrumPlotter
  TestPlotDemo:
    name:
      CSharp:
      - name: TestPlotDemo
        nameWithType: TestPlotDemo
        qualifiedName: TestPlotDemo
      VB:
      - name: TestPlotDemo
        nameWithType: TestPlotDemo
        qualifiedName: TestPlotDemo
    isDefinition: true
    commentId: N:TestPlotDemo
